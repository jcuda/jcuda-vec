//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

	// .globl	vec_setf
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry vec_setf(
	.param .u64 vec_setf_param_0,
	.param .u64 vec_setf_param_1,
	.param .f32 vec_setf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [vec_setf_param_0];
	ld.param.u64 	%rd1, [vec_setf_param_1];
	ld.param.f32 	%f1, [vec_setf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd3, %r1;
	setp.ge.u64	%p1, %rd3, %rd2;
	@%p1 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	st.global.f32 	[%rd6], %f1;

BB0_2:
	ret;
}

	// .globl	vec_addf
.visible .entry vec_addf(
	.param .u64 vec_addf_param_0,
	.param .u64 vec_addf_param_1,
	.param .u64 vec_addf_param_2,
	.param .u64 vec_addf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_addf_param_0];
	ld.param.u64 	%rd1, [vec_addf_param_1];
	ld.param.u64 	%rd2, [vec_addf_param_2];
	ld.param.u64 	%rd3, [vec_addf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB1_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f3;

BB1_2:
	ret;
}

	// .globl	vec_subf
.visible .entry vec_subf(
	.param .u64 vec_subf_param_0,
	.param .u64 vec_subf_param_1,
	.param .u64 vec_subf_param_2,
	.param .u64 vec_subf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_subf_param_0];
	ld.param.u64 	%rd1, [vec_subf_param_1];
	ld.param.u64 	%rd2, [vec_subf_param_2];
	ld.param.u64 	%rd3, [vec_subf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB2_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	sub.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f3;

BB2_2:
	ret;
}

	// .globl	vec_mulf
.visible .entry vec_mulf(
	.param .u64 vec_mulf_param_0,
	.param .u64 vec_mulf_param_1,
	.param .u64 vec_mulf_param_2,
	.param .u64 vec_mulf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_mulf_param_0];
	ld.param.u64 	%rd1, [vec_mulf_param_1];
	ld.param.u64 	%rd2, [vec_mulf_param_2];
	ld.param.u64 	%rd3, [vec_mulf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB3_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f3;

BB3_2:
	ret;
}

	// .globl	vec_divf
.visible .entry vec_divf(
	.param .u64 vec_divf_param_0,
	.param .u64 vec_divf_param_1,
	.param .u64 vec_divf_param_2,
	.param .u64 vec_divf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_divf_param_0];
	ld.param.u64 	%rd1, [vec_divf_param_1];
	ld.param.u64 	%rd2, [vec_divf_param_2];
	ld.param.u64 	%rd3, [vec_divf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB4_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f3;

BB4_2:
	ret;
}

	// .globl	vec_negatef
.visible .entry vec_negatef(
	.param .u64 vec_negatef_param_0,
	.param .u64 vec_negatef_param_1,
	.param .u64 vec_negatef_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_negatef_param_0];
	ld.param.u64 	%rd1, [vec_negatef_param_1];
	ld.param.u64 	%rd2, [vec_negatef_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB5_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	neg.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB5_2:
	ret;
}

	// .globl	vec_addScalarf
.visible .entry vec_addScalarf(
	.param .u64 vec_addScalarf_param_0,
	.param .u64 vec_addScalarf_param_1,
	.param .u64 vec_addScalarf_param_2,
	.param .f32 vec_addScalarf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_addScalarf_param_0];
	ld.param.u64 	%rd1, [vec_addScalarf_param_1];
	ld.param.u64 	%rd2, [vec_addScalarf_param_2];
	ld.param.f32 	%f1, [vec_addScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB6_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;

BB6_2:
	ret;
}

	// .globl	vec_subScalarf
.visible .entry vec_subScalarf(
	.param .u64 vec_subScalarf_param_0,
	.param .u64 vec_subScalarf_param_1,
	.param .u64 vec_subScalarf_param_2,
	.param .f32 vec_subScalarf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_subScalarf_param_0];
	ld.param.u64 	%rd1, [vec_subScalarf_param_1];
	ld.param.u64 	%rd2, [vec_subScalarf_param_2];
	ld.param.f32 	%f1, [vec_subScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB7_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	sub.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;

BB7_2:
	ret;
}

	// .globl	vec_mulScalarf
.visible .entry vec_mulScalarf(
	.param .u64 vec_mulScalarf_param_0,
	.param .u64 vec_mulScalarf_param_1,
	.param .u64 vec_mulScalarf_param_2,
	.param .f32 vec_mulScalarf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_mulScalarf_param_0];
	ld.param.u64 	%rd1, [vec_mulScalarf_param_1];
	ld.param.u64 	%rd2, [vec_mulScalarf_param_2];
	ld.param.f32 	%f1, [vec_mulScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB8_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;

BB8_2:
	ret;
}

	// .globl	vec_divScalarf
.visible .entry vec_divScalarf(
	.param .u64 vec_divScalarf_param_0,
	.param .u64 vec_divScalarf_param_1,
	.param .u64 vec_divScalarf_param_2,
	.param .f32 vec_divScalarf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_divScalarf_param_0];
	ld.param.u64 	%rd1, [vec_divScalarf_param_1];
	ld.param.u64 	%rd2, [vec_divScalarf_param_2];
	ld.param.f32 	%f1, [vec_divScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB9_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;

BB9_2:
	ret;
}

	// .globl	vec_scalarAddf
.visible .entry vec_scalarAddf(
	.param .u64 vec_scalarAddf_param_0,
	.param .u64 vec_scalarAddf_param_1,
	.param .f32 vec_scalarAddf_param_2,
	.param .u64 vec_scalarAddf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_scalarAddf_param_0];
	ld.param.u64 	%rd1, [vec_scalarAddf_param_1];
	ld.param.f32 	%f1, [vec_scalarAddf_param_2];
	ld.param.u64 	%rd2, [vec_scalarAddf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB10_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;

BB10_2:
	ret;
}

	// .globl	vec_scalarSubf
.visible .entry vec_scalarSubf(
	.param .u64 vec_scalarSubf_param_0,
	.param .u64 vec_scalarSubf_param_1,
	.param .f32 vec_scalarSubf_param_2,
	.param .u64 vec_scalarSubf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_scalarSubf_param_0];
	ld.param.u64 	%rd1, [vec_scalarSubf_param_1];
	ld.param.f32 	%f1, [vec_scalarSubf_param_2];
	ld.param.u64 	%rd2, [vec_scalarSubf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB11_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	sub.f32 	%f3, %f1, %f2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;

BB11_2:
	ret;
}

	// .globl	vec_scalarMulf
.visible .entry vec_scalarMulf(
	.param .u64 vec_scalarMulf_param_0,
	.param .u64 vec_scalarMulf_param_1,
	.param .f32 vec_scalarMulf_param_2,
	.param .u64 vec_scalarMulf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_scalarMulf_param_0];
	ld.param.u64 	%rd1, [vec_scalarMulf_param_1];
	ld.param.f32 	%f1, [vec_scalarMulf_param_2];
	ld.param.u64 	%rd2, [vec_scalarMulf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB12_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;

BB12_2:
	ret;
}

	// .globl	vec_scalarDivf
.visible .entry vec_scalarDivf(
	.param .u64 vec_scalarDivf_param_0,
	.param .u64 vec_scalarDivf_param_1,
	.param .f32 vec_scalarDivf_param_2,
	.param .u64 vec_scalarDivf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_scalarDivf_param_0];
	ld.param.u64 	%rd1, [vec_scalarDivf_param_1];
	ld.param.f32 	%f1, [vec_scalarDivf_param_2];
	ld.param.u64 	%rd2, [vec_scalarDivf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB13_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	div.rn.f32 	%f3, %f1, %f2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;

BB13_2:
	ret;
}

	// .globl	vec_ltf
.visible .entry vec_ltf(
	.param .u64 vec_ltf_param_0,
	.param .u64 vec_ltf_param_1,
	.param .u64 vec_ltf_param_2,
	.param .u64 vec_ltf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_ltf_param_0];
	ld.param.u64 	%rd1, [vec_ltf_param_1];
	ld.param.u64 	%rd2, [vec_ltf_param_2];
	ld.param.u64 	%rd3, [vec_ltf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB14_2;

	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.f32 	%f1, [%rd11];
	ld.global.f32 	%f2, [%rd9];
	setp.lt.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd12, %rd6, %rd8;
	st.global.f32 	[%rd12], %f3;

BB14_2:
	ret;
}

	// .globl	vec_ltef
.visible .entry vec_ltef(
	.param .u64 vec_ltef_param_0,
	.param .u64 vec_ltef_param_1,
	.param .u64 vec_ltef_param_2,
	.param .u64 vec_ltef_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_ltef_param_0];
	ld.param.u64 	%rd1, [vec_ltef_param_1];
	ld.param.u64 	%rd2, [vec_ltef_param_2];
	ld.param.u64 	%rd3, [vec_ltef_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB15_2;

	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.f32 	%f1, [%rd11];
	ld.global.f32 	%f2, [%rd9];
	setp.gtu.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f00000000, 0f3F800000, %p2;
	add.s64 	%rd12, %rd6, %rd8;
	st.global.f32 	[%rd12], %f3;

BB15_2:
	ret;
}

	// .globl	vec_eqf
.visible .entry vec_eqf(
	.param .u64 vec_eqf_param_0,
	.param .u64 vec_eqf_param_1,
	.param .u64 vec_eqf_param_2,
	.param .u64 vec_eqf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_eqf_param_0];
	ld.param.u64 	%rd1, [vec_eqf_param_1];
	ld.param.u64 	%rd2, [vec_eqf_param_2];
	ld.param.u64 	%rd3, [vec_eqf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB16_2;

	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.f32 	%f1, [%rd11];
	ld.global.f32 	%f2, [%rd9];
	setp.eq.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd12, %rd6, %rd8;
	st.global.f32 	[%rd12], %f3;

BB16_2:
	ret;
}

	// .globl	vec_gtef
.visible .entry vec_gtef(
	.param .u64 vec_gtef_param_0,
	.param .u64 vec_gtef_param_1,
	.param .u64 vec_gtef_param_2,
	.param .u64 vec_gtef_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_gtef_param_0];
	ld.param.u64 	%rd1, [vec_gtef_param_1];
	ld.param.u64 	%rd2, [vec_gtef_param_2];
	ld.param.u64 	%rd3, [vec_gtef_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB17_2;

	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.f32 	%f1, [%rd11];
	ld.global.f32 	%f2, [%rd9];
	setp.ltu.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f00000000, 0f3F800000, %p2;
	add.s64 	%rd12, %rd6, %rd8;
	st.global.f32 	[%rd12], %f3;

BB17_2:
	ret;
}

	// .globl	vec_gtf
.visible .entry vec_gtf(
	.param .u64 vec_gtf_param_0,
	.param .u64 vec_gtf_param_1,
	.param .u64 vec_gtf_param_2,
	.param .u64 vec_gtf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_gtf_param_0];
	ld.param.u64 	%rd1, [vec_gtf_param_1];
	ld.param.u64 	%rd2, [vec_gtf_param_2];
	ld.param.u64 	%rd3, [vec_gtf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB18_2;

	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.f32 	%f1, [%rd11];
	ld.global.f32 	%f2, [%rd9];
	setp.gt.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd12, %rd6, %rd8;
	st.global.f32 	[%rd12], %f3;

BB18_2:
	ret;
}

	// .globl	vec_nef
.visible .entry vec_nef(
	.param .u64 vec_nef_param_0,
	.param .u64 vec_nef_param_1,
	.param .u64 vec_nef_param_2,
	.param .u64 vec_nef_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_nef_param_0];
	ld.param.u64 	%rd1, [vec_nef_param_1];
	ld.param.u64 	%rd2, [vec_nef_param_2];
	ld.param.u64 	%rd3, [vec_nef_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB19_2;

	cvta.to.global.u64 	%rd6, %rd1;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.f32 	%f1, [%rd11];
	ld.global.f32 	%f2, [%rd9];
	setp.neu.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd12, %rd6, %rd8;
	st.global.f32 	[%rd12], %f3;

BB19_2:
	ret;
}

	// .globl	vec_ltScalarf
.visible .entry vec_ltScalarf(
	.param .u64 vec_ltScalarf_param_0,
	.param .u64 vec_ltScalarf_param_1,
	.param .u64 vec_ltScalarf_param_2,
	.param .f32 vec_ltScalarf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_ltScalarf_param_0];
	ld.param.u64 	%rd1, [vec_ltScalarf_param_1];
	ld.param.u64 	%rd2, [vec_ltScalarf_param_2];
	ld.param.f32 	%f1, [vec_ltScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB20_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f2, [%rd8];
	setp.lt.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd9, %rd5, %rd7;
	st.global.f32 	[%rd9], %f3;

BB20_2:
	ret;
}

	// .globl	vec_lteScalarf
.visible .entry vec_lteScalarf(
	.param .u64 vec_lteScalarf_param_0,
	.param .u64 vec_lteScalarf_param_1,
	.param .u64 vec_lteScalarf_param_2,
	.param .f32 vec_lteScalarf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_lteScalarf_param_0];
	ld.param.u64 	%rd1, [vec_lteScalarf_param_1];
	ld.param.u64 	%rd2, [vec_lteScalarf_param_2];
	ld.param.f32 	%f1, [vec_lteScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB21_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f2, [%rd8];
	setp.gtu.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f00000000, 0f3F800000, %p2;
	add.s64 	%rd9, %rd5, %rd7;
	st.global.f32 	[%rd9], %f3;

BB21_2:
	ret;
}

	// .globl	vec_eqScalarf
.visible .entry vec_eqScalarf(
	.param .u64 vec_eqScalarf_param_0,
	.param .u64 vec_eqScalarf_param_1,
	.param .u64 vec_eqScalarf_param_2,
	.param .f32 vec_eqScalarf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_eqScalarf_param_0];
	ld.param.u64 	%rd1, [vec_eqScalarf_param_1];
	ld.param.u64 	%rd2, [vec_eqScalarf_param_2];
	ld.param.f32 	%f1, [vec_eqScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB22_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f2, [%rd8];
	setp.eq.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd9, %rd5, %rd7;
	st.global.f32 	[%rd9], %f3;

BB22_2:
	ret;
}

	// .globl	vec_gteScalarf
.visible .entry vec_gteScalarf(
	.param .u64 vec_gteScalarf_param_0,
	.param .u64 vec_gteScalarf_param_1,
	.param .u64 vec_gteScalarf_param_2,
	.param .f32 vec_gteScalarf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_gteScalarf_param_0];
	ld.param.u64 	%rd1, [vec_gteScalarf_param_1];
	ld.param.u64 	%rd2, [vec_gteScalarf_param_2];
	ld.param.f32 	%f1, [vec_gteScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB23_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f2, [%rd8];
	setp.ltu.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f00000000, 0f3F800000, %p2;
	add.s64 	%rd9, %rd5, %rd7;
	st.global.f32 	[%rd9], %f3;

BB23_2:
	ret;
}

	// .globl	vec_gtScalarf
.visible .entry vec_gtScalarf(
	.param .u64 vec_gtScalarf_param_0,
	.param .u64 vec_gtScalarf_param_1,
	.param .u64 vec_gtScalarf_param_2,
	.param .f32 vec_gtScalarf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_gtScalarf_param_0];
	ld.param.u64 	%rd1, [vec_gtScalarf_param_1];
	ld.param.u64 	%rd2, [vec_gtScalarf_param_2];
	ld.param.f32 	%f1, [vec_gtScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB24_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f2, [%rd8];
	setp.gt.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd9, %rd5, %rd7;
	st.global.f32 	[%rd9], %f3;

BB24_2:
	ret;
}

	// .globl	vec_neScalarf
.visible .entry vec_neScalarf(
	.param .u64 vec_neScalarf_param_0,
	.param .u64 vec_neScalarf_param_1,
	.param .u64 vec_neScalarf_param_2,
	.param .f32 vec_neScalarf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_neScalarf_param_0];
	ld.param.u64 	%rd1, [vec_neScalarf_param_1];
	ld.param.u64 	%rd2, [vec_neScalarf_param_2];
	ld.param.f32 	%f1, [vec_neScalarf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB25_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f2, [%rd8];
	setp.neu.f32	%p2, %f2, %f1;
	selp.f32	%f3, 0f3F800000, 0f00000000, %p2;
	add.s64 	%rd9, %rd5, %rd7;
	st.global.f32 	[%rd9], %f3;

BB25_2:
	ret;
}

	// .globl	vec_acosf
.visible .entry vec_acosf(
	.param .u64 vec_acosf_param_0,
	.param .u64 vec_acosf_param_1,
	.param .u64 vec_acosf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<27>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_acosf_param_0];
	ld.param.u64 	%rd1, [vec_acosf_param_1];
	ld.param.u64 	%rd2, [vec_acosf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB26_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p2, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p2;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f8, %f17;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32	%f23, %f20, %f22, %p2;
	setp.lt.f32	%p3, %f1, 0f00000000;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32	%f26, %f25, %f23, %p3;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f26;

BB26_2:
	ret;
}

	// .globl	vec_acoshf
.visible .entry vec_acoshf(
	.param .u64 vec_acoshf_param_0,
	.param .u64 vec_acoshf_param_1,
	.param .u64 vec_acoshf_param_2
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<80>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_acoshf_param_0];
	ld.param.u64 	%rd1, [vec_acoshf_param_1];
	ld.param.u64 	%rd2, [vec_acoshf_param_2];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r3;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB27_10;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	add.f32 	%f2, %f1, 0fBF800000;
	mov.b32 	 %r6, %f2;
	setp.gt.u32	%p2, %r6, 1258291200;
	@%p2 bra 	BB27_6;
	bra.uni 	BB27_2;

BB27_6:
	setp.lt.f32	%p6, %f2, 0f00800000;
	mul.f32 	%f48, %f2, 0f4B000000;
	selp.f32	%f8, %f48, %f2, %p6;
	selp.f32	%f49, 0fC1B80000, 0f00000000, %p6;
	mov.b32 	 %r13, %f8;
	add.s32 	%r14, %r13, -1059760811;
	and.b32  	%r15, %r14, -8388608;
	sub.s32 	%r16, %r13, %r15;
	mov.b32 	 %f50, %r16;
	cvt.rn.f32.s32	%f51, %r15;
	mov.f32 	%f52, 0f34000000;
	fma.rn.f32 	%f53, %f51, %f52, %f49;
	add.f32 	%f54, %f50, 0fBF800000;
	mov.f32 	%f55, 0f3E1039F6;
	mov.f32 	%f56, 0fBE055027;
	fma.rn.f32 	%f57, %f56, %f54, %f55;
	mov.f32 	%f58, 0fBDF8CDCC;
	fma.rn.f32 	%f59, %f57, %f54, %f58;
	mov.f32 	%f60, 0f3E0F2955;
	fma.rn.f32 	%f61, %f59, %f54, %f60;
	mov.f32 	%f62, 0fBE2AD8B9;
	fma.rn.f32 	%f63, %f61, %f54, %f62;
	mov.f32 	%f64, 0f3E4CED0B;
	fma.rn.f32 	%f65, %f63, %f54, %f64;
	mov.f32 	%f66, 0fBE7FFF22;
	fma.rn.f32 	%f67, %f65, %f54, %f66;
	mov.f32 	%f68, 0f3EAAAA78;
	fma.rn.f32 	%f69, %f67, %f54, %f68;
	mov.f32 	%f70, 0fBF000000;
	fma.rn.f32 	%f71, %f69, %f54, %f70;
	mul.f32 	%f72, %f54, %f71;
	fma.rn.f32 	%f73, %f72, %f54, %f54;
	mov.f32 	%f74, 0f3F317218;
	fma.rn.f32 	%f78, %f53, %f74, %f73;
	setp.lt.u32	%p7, %r13, 2139095040;
	@%p7 bra 	BB27_8;

	mov.f32 	%f75, 0f7F800000;
	fma.rn.f32 	%f78, %f8, %f75, %f75;

BB27_8:
	add.f32 	%f76, %f78, 0f3F317218;
	setp.eq.f32	%p8, %f8, 0f00000000;
	selp.f32	%f79, 0fFF800000, %f76, %p8;
	bra.uni 	BB27_9;

BB27_2:
	mul.rz.f32 	%f14, %f1, %f2;
	add.rn.f32 	%f15, %f14, %f2;
	sqrt.rn.f32 	%f16, %f15;
	add.f32 	%f3, %f2, %f16;
	mov.f32 	%f17, 0f3F800000;
	add.rz.f32 	%f18, %f3, %f17;
	mov.b32 	 %r7, %f18;
	add.s32 	%r8, %r7, -1061158912;
	and.b32  	%r9, %r8, -8388608;
	mov.b32 	 %r2, %f3;
	sub.s32 	%r10, %r2, %r9;
	mov.b32 	 %f19, %r10;
	mov.u32 	%r11, 1082130432;
	sub.s32 	%r12, %r11, %r9;
	mov.b32 	 %f20, %r12;
	mov.f32 	%f21, 0fBF800000;
	mov.f32 	%f22, 0f3E800000;
	fma.rn.f32 	%f23, %f22, %f20, %f21;
	add.f32 	%f24, %f23, %f19;
	cvt.rn.f32.s32	%f25, %r9;
	mul.f32 	%f26, %f25, 0f34000000;
	mov.f32 	%f27, 0f3DD80012;
	mov.f32 	%f28, 0fBD39BF78;
	fma.rn.f32 	%f29, %f28, %f24, %f27;
	mov.f32 	%f30, 0fBE0778E0;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0f3E146475;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0fBE2A68DD;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mov.f32 	%f36, 0f3E4CAF9E;
	fma.rn.f32 	%f37, %f35, %f24, %f36;
	mov.f32 	%f38, 0fBE800042;
	fma.rn.f32 	%f39, %f37, %f24, %f38;
	mov.f32 	%f40, 0f3EAAAAE6;
	fma.rn.f32 	%f41, %f39, %f24, %f40;
	mov.f32 	%f42, 0fBF000000;
	fma.rn.f32 	%f43, %f41, %f24, %f42;
	mul.f32 	%f44, %f24, %f43;
	fma.rn.f32 	%f45, %f44, %f24, %f24;
	mov.f32 	%f46, 0f3F317218;
	fma.rn.f32 	%f79, %f26, %f46, %f45;
	setp.lt.u32	%p3, %r2, 2139095040;
	@%p3 bra 	BB27_9;

	setp.lt.s32	%p4, %r2, -1082130431;
	@%p4 bra 	BB27_5;

	mov.f32 	%f47, 0f7F800000;
	fma.rn.f32 	%f79, %f3, %f47, %f47;

BB27_5:
	setp.eq.f32	%p5, %f3, 0f00000000;
	selp.f32	%f79, 0f80000000, %f79, %p5;

BB27_9:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f79;

BB27_10:
	ret;
}

	// .globl	vec_asinf
.visible .entry vec_asinf(
	.param .u64 vec_asinf_param_0,
	.param .u64 vec_asinf_param_1,
	.param .u64 vec_asinf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<26>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_asinf_param_0];
	ld.param.u64 	%rd1, [vec_asinf_param_1];
	ld.param.u64 	%rd2, [vec_asinf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB28_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p2, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p2;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f8, %f17;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32	%f23, %f22, %f19, %p2;
	setp.gtu.f32	%p3, %f23, 0f7F800000;
	mov.b32 	 %r5, %f23;
	mov.b32 	 %r6, %f1;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r5, %r7;
	mov.b32 	 %f24, %r8;
	selp.f32	%f25, %f23, %f24, %p3;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f25;

BB28_2:
	ret;
}

	// .globl	vec_asinhf
.visible .entry vec_asinhf(
	.param .u64 vec_asinhf_param_0,
	.param .u64 vec_asinhf_param_1,
	.param .u64 vec_asinhf_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<53>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_asinhf_param_0];
	ld.param.u64 	%rd1, [vec_asinhf_param_1];
	ld.param.u64 	%rd2, [vec_asinhf_param_2];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r3;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB29_8;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	setp.gt.f32	%p2, %f2, 0f7E800000;
	@%p2 bra 	BB29_6;
	bra.uni 	BB29_2;

BB29_6:
	lg2.approx.f32 	%f46, %f2;
	mul.f32 	%f47, %f46, 0f3F317218;
	mov.f32 	%f48, 0f3F317218;
	add.rn.f32 	%f52, %f48, %f47;
	bra.uni 	BB29_7;

BB29_2:
	rcp.rn.f32 	%f12, %f2;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f12, %f12, %f13;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f11, %f12, %f15;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// inline asm
	fma.rn.f32 	%f3, %f2, %f10, %f2;
	add.rz.f32 	%f16, %f3, %f13;
	mov.b32 	 %r6, %f16;
	add.s32 	%r7, %r6, -1061158912;
	and.b32  	%r8, %r7, -8388608;
	mov.b32 	 %r2, %f3;
	sub.s32 	%r9, %r2, %r8;
	mov.b32 	 %f17, %r9;
	mov.u32 	%r10, 1082130432;
	sub.s32 	%r11, %r10, %r8;
	mov.b32 	 %f18, %r11;
	mov.f32 	%f19, 0fBF800000;
	mov.f32 	%f20, 0f3E800000;
	fma.rn.f32 	%f21, %f20, %f18, %f19;
	add.f32 	%f22, %f21, %f17;
	cvt.rn.f32.s32	%f23, %r8;
	mul.f32 	%f24, %f23, 0f34000000;
	mov.f32 	%f25, 0f3DD80012;
	mov.f32 	%f26, 0fBD39BF78;
	fma.rn.f32 	%f27, %f26, %f22, %f25;
	mov.f32 	%f28, 0fBE0778E0;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mov.f32 	%f30, 0f3E146475;
	fma.rn.f32 	%f31, %f29, %f22, %f30;
	mov.f32 	%f32, 0fBE2A68DD;
	fma.rn.f32 	%f33, %f31, %f22, %f32;
	mov.f32 	%f34, 0f3E4CAF9E;
	fma.rn.f32 	%f35, %f33, %f22, %f34;
	mov.f32 	%f36, 0fBE800042;
	fma.rn.f32 	%f37, %f35, %f22, %f36;
	mov.f32 	%f38, 0f3EAAAAE6;
	fma.rn.f32 	%f39, %f37, %f22, %f38;
	mov.f32 	%f40, 0fBF000000;
	fma.rn.f32 	%f41, %f39, %f22, %f40;
	mul.f32 	%f42, %f22, %f41;
	fma.rn.f32 	%f43, %f42, %f22, %f22;
	mov.f32 	%f44, 0f3F317218;
	fma.rn.f32 	%f52, %f24, %f44, %f43;
	setp.lt.u32	%p3, %r2, 2139095040;
	@%p3 bra 	BB29_7;

	setp.lt.s32	%p4, %r2, -1082130431;
	@%p4 bra 	BB29_5;

	mov.f32 	%f45, 0f7F800000;
	fma.rn.f32 	%f52, %f3, %f45, %f45;

BB29_5:
	setp.eq.f32	%p5, %f3, 0f00000000;
	selp.f32	%f52, 0f80000000, %f52, %p5;

BB29_7:
	cvta.to.global.u64 	%rd8, %rd1;
	mov.b32 	 %r12, %f1;
	and.b32  	%r13, %r12, -2147483648;
	mov.b32 	 %r14, %f52;
	or.b32  	%r15, %r14, %r13;
	mov.b32 	 %f49, %r15;
	setp.gtu.f32	%p6, %f2, 0f7F800000;
	selp.f32	%f50, %f52, %f49, %p6;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f50;

BB29_8:
	ret;
}

	// .globl	vec_atanf
.visible .entry vec_atanf(
	.param .u64 vec_atanf_param_0,
	.param .u64 vec_atanf_param_1,
	.param .u64 vec_atanf_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<26>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_atanf_param_0];
	ld.param.u64 	%rd1, [vec_atanf_param_1];
	ld.param.u64 	%rd2, [vec_atanf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB30_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p2, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p2 bra 	BB30_3;

	rcp.rn.f32 	%f25, %f2;

BB30_3:
	cvta.to.global.u64 	%rd8, %rd1;
	mul.rn.f32 	%f5, %f25, %f25;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f5, %f10;
	mul.f32 	%f12, %f25, %f11;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f25;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32	%p3, %f2, 0f3F800000;
	selp.f32	%f22, %f21, %f19, %p3;
	mov.b32 	 %r5, %f22;
	mov.b32 	 %r6, %f1;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r5, %r7;
	mov.b32 	 %f23, %r8;
	setp.gtu.f32	%p4, %f2, 0f7F800000;
	selp.f32	%f24, %f22, %f23, %p4;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f24;

BB30_4:
	ret;
}

	// .globl	vec_atanhf
.visible .entry vec_atanhf(
	.param .u64 vec_atanhf_param_0,
	.param .u64 vec_atanhf_param_1,
	.param .u64 vec_atanhf_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<50>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_atanhf_param_0];
	ld.param.u64 	%rd1, [vec_atanhf_param_1];
	ld.param.u64 	%rd2, [vec_atanhf_param_2];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r3;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB31_6;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f10, %f1;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f9, %f11, %f10;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	add.f32 	%f12, %f8, %f8;
	mul.f32 	%f13, %f10, %f12;
	setp.gt.f32	%p2, %f10, 0f7E800000;
	selp.f32	%f2, 0fC0000000, %f13, %p2;
	add.rz.f32 	%f14, %f2, %f11;
	mov.b32 	 %r6, %f14;
	add.s32 	%r7, %r6, -1061158912;
	and.b32  	%r8, %r7, -8388608;
	mov.b32 	 %r2, %f2;
	sub.s32 	%r9, %r2, %r8;
	mov.b32 	 %f15, %r9;
	mov.u32 	%r10, 1082130432;
	sub.s32 	%r11, %r10, %r8;
	mov.b32 	 %f16, %r11;
	mov.f32 	%f17, 0fBF800000;
	mov.f32 	%f18, 0f3E800000;
	fma.rn.f32 	%f19, %f18, %f16, %f17;
	add.f32 	%f20, %f19, %f15;
	cvt.rn.f32.s32	%f21, %r8;
	mul.f32 	%f22, %f21, 0f34000000;
	mov.f32 	%f23, 0f3DD80012;
	mov.f32 	%f24, 0fBD39BF78;
	fma.rn.f32 	%f25, %f24, %f20, %f23;
	mov.f32 	%f26, 0fBE0778E0;
	fma.rn.f32 	%f27, %f25, %f20, %f26;
	mov.f32 	%f28, 0f3E146475;
	fma.rn.f32 	%f29, %f27, %f20, %f28;
	mov.f32 	%f30, 0fBE2A68DD;
	fma.rn.f32 	%f31, %f29, %f20, %f30;
	mov.f32 	%f32, 0f3E4CAF9E;
	fma.rn.f32 	%f33, %f31, %f20, %f32;
	mov.f32 	%f34, 0fBE800042;
	fma.rn.f32 	%f35, %f33, %f20, %f34;
	mov.f32 	%f36, 0f3EAAAAE6;
	fma.rn.f32 	%f37, %f35, %f20, %f36;
	mov.f32 	%f38, 0fBF000000;
	fma.rn.f32 	%f39, %f37, %f20, %f38;
	mul.f32 	%f40, %f20, %f39;
	fma.rn.f32 	%f41, %f40, %f20, %f20;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f48, %f22, %f42, %f41;
	setp.lt.u32	%p3, %r2, 2139095040;
	@%p3 bra 	BB31_5;

	setp.lt.s32	%p4, %r2, -1082130431;
	@%p4 bra 	BB31_4;

	mov.f32 	%f43, 0f7F800000;
	fma.rn.f32 	%f48, %f2, %f43, %f43;

BB31_4:
	setp.eq.f32	%p5, %f2, 0f00000000;
	selp.f32	%f48, 0f80000000, %f48, %p5;

BB31_5:
	cvta.to.global.u64 	%rd8, %rd1;
	mul.f32 	%f44, %f48, 0f3F000000;
	abs.f32 	%f45, %f44;
	setp.gtu.f32	%p6, %f45, 0f7F800000;
	mov.b32 	 %r12, %f44;
	mov.b32 	 %r13, %f1;
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r12, %r14;
	mov.b32 	 %f46, %r15;
	selp.f32	%f47, %f44, %f46, %p6;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f47;

BB31_6:
	ret;
}

	// .globl	vec_cbrtf
.visible .entry vec_cbrtf(
	.param .u64 vec_cbrtf_param_0,
	.param .u64 vec_cbrtf_param_1,
	.param .u64 vec_cbrtf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_cbrtf_param_0];
	ld.param.u64 	%rd1, [vec_cbrtf_param_1];
	ld.param.u64 	%rd2, [vec_cbrtf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB32_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f3, [%rd7];
	abs.f32 	%f4, %f3;
	lg2.approx.f32 	%f5, %f4;
	mul.f32 	%f6, %f5, 0f3EAAAAAB;
	ex2.approx.ftz.f32 	%f7, %f6;
	mul.f32 	%f2, %f7, %f7;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	neg.f32 	%f8, %f4;
	fma.rn.f32 	%f9, %f1, %f8, %f7;
	mov.f32 	%f10, 0fBEAAAAAB;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	mov.b32 	 %r5, %f3;
	setp.lt.s32	%p2, %r5, 0;
	neg.f32 	%f12, %f11;
	selp.f32	%f13, %f12, %f11, %p2;
	add.f32 	%f14, %f3, %f3;
	setp.eq.f32	%p3, %f14, %f3;
	selp.f32	%f15, %f14, %f13, %p3;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f15;

BB32_2:
	ret;
}

	// .globl	vec_ceilf
.visible .entry vec_ceilf(
	.param .u64 vec_ceilf_param_0,
	.param .u64 vec_ceilf_param_1,
	.param .u64 vec_ceilf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_ceilf_param_0];
	ld.param.u64 	%rd1, [vec_ceilf_param_1];
	ld.param.u64 	%rd2, [vec_ceilf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB33_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	cvt.rpi.f32.f32	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB33_2:
	ret;
}

	// .globl	vec_cosf
.visible .entry vec_cosf(
	.param .u64 vec_cosf_param_0,
	.param .u64 vec_cosf_param_1,
	.param .u64 vec_cosf_param_2
)
{
	.local .align 4 .b8 	__local_depot34[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<15>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<97>;
	.reg .b64 	%rd<23>;


	mov.u64 	%rd22, __local_depot34;
	cvta.local.u64 	%SP, %rd22;
	ld.param.u64 	%rd9, [vec_cosf_param_0];
	ld.param.u64 	%rd7, [vec_cosf_param_1];
	ld.param.u64 	%rd8, [vec_cosf_param_2];
	mov.u32 	%r38, %ntid.x;
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r40, %tid.x;
	mad.lo.s32 	%r1, %r38, %r39, %r40;
	cvt.s64.s32	%rd10, %r1;
	setp.ge.u64	%p1, %rd10, %rd9;
	@%p1 bra 	BB34_25;

	cvta.to.global.u64 	%rd11, %rd8;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd14;
	ld.global.f32 	%f43, [%rd13];
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p2, %f19, 0f7F800000;
	@%p2 bra 	BB34_3;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB34_3:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r96, %f21;
	cvt.rn.f32.s32	%f22, %r96;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p3, %f29, 0f47CE4780;
	@%p3 bra 	BB34_14;

	mov.b32 	 %r3, %f43;
	shr.u32 	%r4, %r3, 23;
	shl.b32 	%r43, %r3, 8;
	or.b32  	%r5, %r43, -2147483648;
	mov.u32 	%r88, 0;
	mov.u64 	%rd20, __cudart_i2opi_f;
	mov.u32 	%r87, -6;
	mov.u64 	%rd21, %rd1;

BB34_5:
	.pragma "nounroll";
	ld.const.u32 	%r46, [%rd20];
	// inline asm
	{
	mad.lo.cc.u32   %r44, %r46, %r5, %r88;
	madc.hi.u32     %r88, %r46, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd21], %r44;
	add.s64 	%rd21, %rd21, 4;
	add.s64 	%rd20, %rd20, 4;
	add.s32 	%r87, %r87, 1;
	setp.ne.s32	%p4, %r87, 0;
	@%p4 bra 	BB34_5;

	and.b32  	%r49, %r4, 255;
	add.s32 	%r50, %r49, -128;
	shr.u32 	%r51, %r50, 5;
	and.b32  	%r10, %r3, -2147483648;
	st.local.u32 	[%rd1+24], %r88;
	mov.u32 	%r52, 6;
	sub.s32 	%r53, %r52, %r51;
	mul.wide.s32 	%rd16, %r53, 4;
	add.s64 	%rd6, %rd1, %rd16;
	ld.local.u32 	%r89, [%rd6];
	ld.local.u32 	%r90, [%rd6+-4];
	and.b32  	%r13, %r4, 31;
	setp.eq.s32	%p5, %r13, 0;
	@%p5 bra 	BB34_8;

	mov.u32 	%r54, 32;
	sub.s32 	%r55, %r54, %r13;
	shr.u32 	%r56, %r90, %r55;
	shl.b32 	%r57, %r89, %r13;
	add.s32 	%r89, %r56, %r57;
	ld.local.u32 	%r58, [%rd6+-8];
	shr.u32 	%r59, %r58, %r55;
	shl.b32 	%r60, %r90, %r13;
	add.s32 	%r90, %r59, %r60;

BB34_8:
	shr.u32 	%r61, %r90, 30;
	shl.b32 	%r62, %r89, 2;
	add.s32 	%r91, %r61, %r62;
	shl.b32 	%r19, %r90, 2;
	shr.u32 	%r63, %r91, 31;
	shr.u32 	%r64, %r89, 30;
	add.s32 	%r20, %r63, %r64;
	setp.eq.s32	%p6, %r63, 0;
	@%p6 bra 	BB34_9;

	not.b32 	%r65, %r91;
	neg.s32 	%r93, %r19;
	setp.eq.s32	%p7, %r19, 0;
	selp.u32	%r66, 1, 0, %p7;
	add.s32 	%r91, %r66, %r65;
	xor.b32  	%r92, %r10, -2147483648;
	bra.uni 	BB34_11;

BB34_9:
	mov.u32 	%r92, %r10;
	mov.u32 	%r93, %r19;

BB34_11:
	neg.s32 	%r67, %r20;
	setp.eq.s32	%p8, %r10, 0;
	selp.b32	%r96, %r20, %r67, %p8;
	clz.b32 	%r95, %r91;
	setp.eq.s32	%p9, %r95, 0;
	shl.b32 	%r68, %r91, %r95;
	mov.u32 	%r69, 32;
	sub.s32 	%r70, %r69, %r95;
	shr.u32 	%r71, %r93, %r70;
	add.s32 	%r72, %r71, %r68;
	selp.b32	%r29, %r91, %r72, %p9;
	mov.u32 	%r73, -921707870;
	mul.hi.u32 	%r94, %r29, %r73;
	setp.lt.s32	%p10, %r94, 1;
	@%p10 bra 	BB34_13;

	mul.lo.s32 	%r74, %r29, -921707870;
	shr.u32 	%r75, %r74, 31;
	shl.b32 	%r76, %r94, 1;
	add.s32 	%r94, %r75, %r76;
	add.s32 	%r95, %r95, 1;

BB34_13:
	mov.u32 	%r77, 126;
	sub.s32 	%r78, %r77, %r95;
	shl.b32 	%r79, %r78, 23;
	add.s32 	%r80, %r94, 1;
	shr.u32 	%r81, %r80, 7;
	add.s32 	%r82, %r81, 1;
	shr.u32 	%r83, %r82, 1;
	add.s32 	%r84, %r83, %r79;
	or.b32  	%r85, %r84, %r92;
	mov.b32 	 %f44, %r85;

BB34_14:
	mul.rn.f32 	%f7, %f44, %f44;
	add.s32 	%r36, %r96, 1;
	and.b32  	%r37, %r36, 1;
	setp.eq.s32	%p11, %r37, 0;
	@%p11 bra 	BB34_16;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB34_17;

BB34_16:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB34_17:
	@%p11 bra 	BB34_19;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB34_20;

BB34_19:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB34_20:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p11 bra 	BB34_22;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB34_22:
	and.b32  	%r86, %r36, 2;
	setp.eq.s32	%p14, %r86, 0;
	@%p14 bra 	BB34_24;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB34_24:
	cvta.to.global.u64 	%rd17, %rd7;
	add.s64 	%rd19, %rd17, %rd12;
	st.global.f32 	[%rd19], %f47;

BB34_25:
	ret;
}

	// .globl	vec_coshf
.visible .entry vec_coshf(
	.param .u64 vec_coshf_param_0,
	.param .u64 vec_coshf_param_1,
	.param .u64 vec_coshf_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_coshf_param_0];
	ld.param.u64 	%rd1, [vec_coshf_param_1];
	ld.param.u64 	%rd2, [vec_coshf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB35_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	mul.f32 	%f3, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f4, %f3;
	mov.f32 	%f5, 0fBF317200;
	fma.rn.f32 	%f6, %f4, %f5, %f2;
	mov.f32 	%f7, 0fB5BFBE8E;
	fma.rn.f32 	%f8, %f4, %f7, %f6;
	mul.f32 	%f9, %f8, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f10, %f9;
	add.f32 	%f11, %f4, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f10, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32	%p2, %f2, 0f42B40000;
	selp.f32	%f18, %f17, 0f7F800000, %p2;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f18;

BB35_2:
	ret;
}

	// .globl	vec_cospif
.visible .entry vec_cospif(
	.param .u64 vec_cospif_param_0,
	.param .u64 vec_cospif_param_1,
	.param .u64 vec_cospif_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<44>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_cospif_param_0];
	ld.param.u64 	%rd1, [vec_cospif_param_1];
	ld.param.u64 	%rd2, [vec_cospif_param_2];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r4;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB36_14;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f39, [%rd7];
	abs.f32 	%f17, %f39;
	setp.leu.f32	%p2, %f17, 0f4B800000;
	@%p2 bra 	BB36_3;

	mov.f32 	%f18, 0f00000000;
	mul.rn.f32 	%f39, %f39, %f18;

BB36_3:
	add.f32 	%f19, %f39, %f39;
	cvt.rni.f32.f32	%f20, %f19;
	cvt.rzi.s32.f32	%r7, %f20;
	neg.f32 	%f21, %f20;
	mov.f32 	%f22, 0f3F000000;
	fma.rn.f32 	%f23, %f21, %f22, %f39;
	mul.f32 	%f24, %f23, 0f34222169;
	mov.f32 	%f25, 0f40490FDA;
	fma.rn.f32 	%f4, %f23, %f25, %f24;
	add.s32 	%r2, %r7, 1;
	mul.rn.f32 	%f5, %f4, %f4;
	and.b32  	%r3, %r2, 1;
	setp.eq.s32	%p3, %r3, 0;
	@%p3 bra 	BB36_5;

	mov.f32 	%f26, 0fBAB6061A;
	mov.f32 	%f27, 0f37CCF5CE;
	fma.rn.f32 	%f40, %f27, %f5, %f26;
	bra.uni 	BB36_6;

BB36_5:
	mov.f32 	%f28, 0f3C08839E;
	mov.f32 	%f29, 0fB94CA1F9;
	fma.rn.f32 	%f40, %f29, %f5, %f28;

BB36_6:
	@%p3 bra 	BB36_8;

	mov.f32 	%f30, 0f3D2AAAA5;
	fma.rn.f32 	%f31, %f40, %f5, %f30;
	mov.f32 	%f32, 0fBF000000;
	fma.rn.f32 	%f41, %f31, %f5, %f32;
	bra.uni 	BB36_9;

BB36_8:
	mov.f32 	%f33, 0fBE2AAAA3;
	fma.rn.f32 	%f34, %f40, %f5, %f33;
	mov.f32 	%f35, 0f00000000;
	fma.rn.f32 	%f41, %f34, %f5, %f35;

BB36_9:
	fma.rn.f32 	%f42, %f41, %f4, %f4;
	@%p3 bra 	BB36_11;

	mov.f32 	%f36, 0f3F800000;
	fma.rn.f32 	%f42, %f41, %f5, %f36;

BB36_11:
	and.b32  	%r8, %r2, 2;
	setp.eq.s32	%p6, %r8, 0;
	@%p6 bra 	BB36_13;

	mov.f32 	%f37, 0f00000000;
	mov.f32 	%f38, 0fBF800000;
	fma.rn.f32 	%f42, %f42, %f38, %f37;

BB36_13:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f42;

BB36_14:
	ret;
}

	// .globl	vec_erfcf
.visible .entry vec_erfcf(
	.param .u64 vec_erfcf_param_0,
	.param .u64 vec_erfcf_param_1,
	.param .u64 vec_erfcf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<63>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_erfcf_param_0];
	ld.param.u64 	%rd1, [vec_erfcf_param_1];
	ld.param.u64 	%rd2, [vec_erfcf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB37_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f5, [%rd7];
	abs.f32 	%f6, %f5;
	add.f32 	%f2, %f6, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f7, %f6, 0fC0800000;
	mul.rn.f32 	%f8, %f7, %f1;
	add.f32 	%f9, %f8, 0f3F800000;
	mov.f32 	%f10, 0fC0800000;
	fma.rn.f32 	%f11, %f10, %f9, %f6;
	neg.f32 	%f12, %f8;
	fma.rn.f32 	%f13, %f12, %f6, %f11;
	fma.rn.f32 	%f14, %f1, %f13, %f8;
	mov.f32 	%f15, 0f3BE6E05B;
	mov.f32 	%f16, 0f3A69A091;
	fma.rn.f32 	%f17, %f16, %f14, %f15;
	mov.f32 	%f18, 0fBC81FB4B;
	fma.rn.f32 	%f19, %f17, %f14, %f18;
	mov.f32 	%f20, 0f3D15373B;
	fma.rn.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0fBD887C5A;
	fma.rn.f32 	%f23, %f21, %f14, %f22;
	mov.f32 	%f24, 0f3DC021D5;
	fma.rn.f32 	%f25, %f23, %f14, %f24;
	mov.f32 	%f26, 0fBDCED424;
	fma.rn.f32 	%f27, %f25, %f14, %f26;
	mov.f32 	%f28, 0f3D8B74DE;
	fma.rn.f32 	%f29, %f27, %f14, %f28;
	mov.f32 	%f30, 0f3C7BF170;
	fma.rn.f32 	%f31, %f29, %f14, %f30;
	mov.f32 	%f32, 0fBE0EF8D4;
	fma.rn.f32 	%f33, %f31, %f14, %f32;
	mov.f32 	%f34, 0f3F9DD2C9;
	fma.rn.f32 	%f35, %f33, %f14, %f34;
	mov.f32 	%f36, 0f3F800000;
	mov.f32 	%f37, 0f40000000;
	fma.rn.f32 	%f4, %f37, %f6, %f36;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	mul.rn.f32 	%f38, %f35, %f3;
	mul.f32 	%f39, %f38, 0fC0000000;
	fma.rn.f32 	%f40, %f6, %f39, %f35;
	sub.f32 	%f41, %f40, %f38;
	fma.rn.f32 	%f42, %f41, %f3, %f38;
	mul.f32 	%f43, %f6, %f6;
	neg.f32 	%f44, %f43;
	mul.f32 	%f45, %f43, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f46, %f45;
	mov.f32 	%f47, 0fBF317200;
	fma.rn.f32 	%f48, %f46, %f47, %f44;
	mov.f32 	%f49, 0fB5BFBE8E;
	fma.rn.f32 	%f50, %f46, %f49, %f48;
	mul.f32 	%f51, %f50, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f52, %f51;
	add.f32 	%f53, %f46, 0f00000000;
	ex2.approx.f32 	%f54, %f53;
	mul.f32 	%f55, %f52, %f54;
	neg.f32 	%f56, %f6;
	fma.rn.f32 	%f57, %f56, %f6, %f43;
	fma.rn.f32 	%f58, %f55, %f57, %f55;
	mul.f32 	%f59, %f42, %f58;
	setp.gt.f32	%p2, %f6, 0f4120E148;
	selp.f32	%f60, 0f00000000, %f59, %p2;
	setp.lt.f32	%p3, %f5, 0f00000000;
	sub.f32 	%f61, %f37, %f60;
	selp.f32	%f62, %f61, %f60, %p3;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f62;

BB37_2:
	ret;
}

	// .globl	vec_erfcinvf
.visible .entry vec_erfcinvf(
	.param .u64 vec_erfcinvf_param_0,
	.param .u64 vec_erfcinvf_param_1,
	.param .u64 vec_erfcinvf_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<55>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_erfcinvf_param_0];
	ld.param.u64 	%rd1, [vec_erfcinvf_param_1];
	ld.param.u64 	%rd2, [vec_erfcinvf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB38_5;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	neg.f32 	%f2, %f1;
	mov.f32 	%f7, 0f40000000;
	add.rn.f32 	%f3, %f7, %f2;
	setp.le.f32	%p2, %f1, 0f3FFF9097;
	setp.ge.f32	%p3, %f1, 0f3B5ED289;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB38_3;
	bra.uni 	BB38_2;

BB38_3:
	mul.rn.f32 	%f32, %f3, %f1;
	lg2.approx.ftz.f32 	%f33, %f32;
	neg.f32 	%f34, %f33;
	mov.f32 	%f35, 0f3221F645;
	mov.f32 	%f36, 0fAF8A6370;
	fma.rn.f32 	%f37, %f36, %f34, %f35;
	mov.f32 	%f38, 0fB4016FDA;
	fma.rn.f32 	%f39, %f37, %f34, %f38;
	mov.f32 	%f40, 0f3468F846;
	fma.rn.f32 	%f41, %f39, %f34, %f40;
	mov.f32 	%f42, 0f370742AA;
	fma.rn.f32 	%f43, %f41, %f34, %f42;
	mov.f32 	%f44, 0fB804DB4D;
	fma.rn.f32 	%f45, %f43, %f34, %f44;
	mov.f32 	%f46, 0fBA4AFEA1;
	fma.rn.f32 	%f47, %f45, %f34, %f46;
	mov.f32 	%f48, 0f3BB5C027;
	fma.rn.f32 	%f49, %f47, %f34, %f48;
	mov.f32 	%f50, 0f3E24AE0F;
	fma.rn.f32 	%f51, %f49, %f34, %f50;
	mov.f32 	%f52, 0f3F62DFC4;
	fma.rn.f32 	%f53, %f51, %f34, %f52;
	fma.rn.f32 	%f54, %f53, %f2, %f53;
	bra.uni 	BB38_4;

BB38_2:
	setp.gt.f32	%p5, %f1, 0f3F800000;
	selp.f32	%f10, %f3, %f1, %p5;
	lg2.approx.f32 	%f11, %f10;
	neg.f32 	%f12, %f11;
	rsqrt.approx.ftz.f32 	%f9, %f12;
	mov.f32 	%f13, 0f42FEF829;
	mov.f32 	%f14, 0fC27C73F1;
	fma.rn.f32 	%f15, %f14, %f9, %f13;
	mov.f32 	%f16, 0fC2E4361C;
	fma.rn.f32 	%f17, %f15, %f9, %f16;
	mov.f32 	%f18, 0f42714D9B;
	fma.rn.f32 	%f19, %f17, %f9, %f18;
	mov.f32 	%f20, 0fC1AE51B3;
	fma.rn.f32 	%f21, %f19, %f9, %f20;
	mov.f32 	%f22, 0f40CEF504;
	fma.rn.f32 	%f23, %f21, %f9, %f22;
	mov.f32 	%f24, 0fBFEA9E05;
	fma.rn.f32 	%f25, %f23, %f9, %f24;
	mov.f32 	%f26, 0fBCF871F4;
	fma.rn.f32 	%f27, %f25, %f9, %f26;
	mov.f32 	%f28, 0f3F553775;
	fma.rn.f32 	%f29, %f27, %f9, %f28;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mul.rn.f32 	%f30, %f29, %f8;
	neg.f32 	%f31, %f30;
	selp.f32	%f54, %f31, %f30, %p5;

BB38_4:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f54;

BB38_5:
	ret;
}

	// .globl	vec_erfcxf
.visible .entry vec_erfcxf(
	.param .u64 vec_erfcxf_param_0,
	.param .u64 vec_erfcxf_param_1,
	.param .u64 vec_erfcxf_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<82>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_erfcxf_param_0];
	ld.param.u64 	%rd1, [vec_erfcxf_param_1];
	ld.param.u64 	%rd2, [vec_erfcxf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB39_7;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p2, %f2, 0f4120E148;
	@%p2 bra 	BB39_3;
	bra.uni 	BB39_2;

BB39_3:
	add.f32 	%f23, %f2, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f26, %f2, 0fC0800000;
	mul.rn.f32 	%f27, %f26, %f22;
	add.f32 	%f28, %f27, 0f3F800000;
	mov.f32 	%f29, 0fC0800000;
	fma.rn.f32 	%f30, %f29, %f28, %f2;
	neg.f32 	%f31, %f27;
	fma.rn.f32 	%f32, %f31, %f2, %f30;
	fma.rn.f32 	%f33, %f22, %f32, %f27;
	mov.f32 	%f34, 0f3BE6E05B;
	mov.f32 	%f35, 0f3A69A091;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0fBC81FB4B;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mov.f32 	%f39, 0f3D15373B;
	fma.rn.f32 	%f40, %f38, %f33, %f39;
	mov.f32 	%f41, 0fBD887C5A;
	fma.rn.f32 	%f42, %f40, %f33, %f41;
	mov.f32 	%f43, 0f3DC021D5;
	fma.rn.f32 	%f44, %f42, %f33, %f43;
	mov.f32 	%f45, 0fBDCED424;
	fma.rn.f32 	%f46, %f44, %f33, %f45;
	mov.f32 	%f47, 0f3D8B74DE;
	fma.rn.f32 	%f48, %f46, %f33, %f47;
	mov.f32 	%f49, 0f3C7BF170;
	fma.rn.f32 	%f50, %f48, %f33, %f49;
	mov.f32 	%f51, 0fBE0EF8D4;
	fma.rn.f32 	%f52, %f50, %f33, %f51;
	mov.f32 	%f53, 0f3F9DD2C9;
	fma.rn.f32 	%f54, %f52, %f33, %f53;
	mov.f32 	%f55, 0f3F800000;
	mov.f32 	%f56, 0f40000000;
	fma.rn.f32 	%f25, %f56, %f2, %f55;
	// inline asm
	rcp.approx.ftz.f32 %f24,%f25;
	// inline asm
	mul.rn.f32 	%f57, %f54, %f24;
	mul.f32 	%f58, %f57, 0fC0000000;
	fma.rn.f32 	%f59, %f2, %f58, %f54;
	sub.f32 	%f60, %f59, %f57;
	fma.rn.f32 	%f80, %f60, %f24, %f57;
	bra.uni 	BB39_4;

BB39_2:
	mul.f32 	%f8, %f2, 0f3E800000;
	mov.f32 	%f9, 0f3E800000;
	div.approx.f32 	%f10, %f9, %f8;
	mul.f32 	%f11, %f10, %f10;
	mov.f32 	%f12, 0fBFF00000;
	mov.f32 	%f13, 0f40D20000;
	fma.rn.f32 	%f14, %f13, %f11, %f12;
	mov.f32 	%f15, 0f3F400000;
	fma.rn.f32 	%f16, %f14, %f11, %f15;
	mov.f32 	%f17, 0fBF000000;
	fma.rn.f32 	%f18, %f16, %f11, %f17;
	mov.f32 	%f19, 0f3F800000;
	fma.rn.f32 	%f20, %f18, %f11, %f19;
	mul.f32 	%f21, %f10, 0f3F106EBB;
	mul.f32 	%f80, %f21, %f20;

BB39_4:
	setp.geu.f32	%p3, %f1, 0f00000000;
	@%p3 bra 	BB39_6;

	mul.rz.f32 	%f61, %f2, %f2;
	neg.f32 	%f62, %f61;
	fma.rn.f32 	%f63, %f2, %f2, %f62;
	mul.f32 	%f64, %f61, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f65, %f64;
	mov.f32 	%f66, 0fBF317200;
	fma.rn.f32 	%f67, %f65, %f66, %f61;
	mov.f32 	%f68, 0fB5BFBE8E;
	fma.rn.f32 	%f69, %f65, %f68, %f67;
	mul.f32 	%f70, %f69, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f71, %f70;
	add.f32 	%f72, %f65, 0f00000000;
	ex2.approx.f32 	%f73, %f72;
	mul.f32 	%f74, %f71, %f73;
	setp.lt.f32	%p4, %f61, 0fC2D20000;
	selp.f32	%f75, 0f00000000, %f74, %p4;
	setp.gt.f32	%p5, %f61, 0f42D20000;
	selp.f32	%f76, 0f7F800000, %f75, %p5;
	add.f32 	%f77, %f76, %f76;
	fma.rn.f32 	%f78, %f77, %f63, %f77;
	sub.f32 	%f79, %f78, %f80;
	setp.eq.f32	%p6, %f77, 0f7F800000;
	selp.f32	%f80, %f77, %f79, %p6;

BB39_6:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f80;

BB39_7:
	ret;
}

	// .globl	vec_erff
.visible .entry vec_erff(
	.param .u64 vec_erff_param_0,
	.param .u64 vec_erff_param_1,
	.param .u64 vec_erff_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_erff_param_0];
	ld.param.u64 	%rd1, [vec_erff_param_1];
	ld.param.u64 	%rd2, [vec_erff_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB40_5;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F800000;
	@%p2 bra 	BB40_3;
	bra.uni 	BB40_2;

BB40_3:
	mul.f32 	%f24, %f1, %f1;
	mov.f32 	%f25, 0f3BA0C9F8;
	mov.f32 	%f26, 0fBA1268FB;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0fBCDABFD4;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3DE70331;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0fBEC09330;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0f3F906EBA;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mul.f32 	%f36, %f1, %f35;
	bra.uni 	BB40_4;

BB40_2:
	mov.f32 	%f6, 0f3A03BB71;
	mov.f32 	%f7, 0fB7B730FB;
	fma.rn.f32 	%f8, %f7, %f2, %f6;
	mov.f32 	%f9, 0fBBACA3B3;
	fma.rn.f32 	%f10, %f8, %f2, %f9;
	mov.f32 	%f11, 0f3D0A7445;
	fma.rn.f32 	%f12, %f10, %f2, %f11;
	mov.f32 	%f13, 0fBE1B3B75;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0fBF6B385A;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0fBFD0316E;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fBA031CCE;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	ex2.approx.ftz.f32 	%f21, %f20;
	mov.f32 	%f22, 0f3F800000;
	sub.f32 	%f23, %f22, %f21;
	mov.b32 	 %r5, %f23;
	setp.ltu.f32	%p3, %f2, 0f407AD445;
	selp.b32	%r6, %r5, 1065353216, %p3;
	mov.b32 	 %r7, %f1;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r6, %r8;
	mov.b32 	 %f36, %r9;

BB40_4:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f36;

BB40_5:
	ret;
}

	// .globl	vec_erfinvf
.visible .entry vec_erfinvf(
	.param .u64 vec_erfinvf_param_0,
	.param .u64 vec_erfinvf_param_1,
	.param .u64 vec_erfinvf_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<44>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_erfinvf_param_0];
	ld.param.u64 	%rd1, [vec_erfinvf_param_1];
	ld.param.u64 	%rd2, [vec_erfinvf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB41_5;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	neg.f32 	%f6, %f1;
	mov.f32 	%f7, 0f3F800000;
	fma.rn.f32 	%f8, %f1, %f6, %f7;
	lg2.approx.ftz.f32 	%f9, %f8;
	neg.f32 	%f2, %f9;
	setp.lt.f32	%p2, %f9, 0fC1033333;
	@%p2 bra 	BB41_3;
	bra.uni 	BB41_2;

BB41_3:
	rsqrt.approx.ftz.f32 	%f29, %f2;
	mov.f32 	%f30, 0fBF29BAA5;
	mov.f32 	%f31, 0fBF1704A1;
	fma.rn.f32 	%f32, %f31, %f29, %f30;
	mov.f32 	%f33, 0f3FCC6ADC;
	fma.rn.f32 	%f34, %f32, %f29, %f33;
	mov.f32 	%f35, 0fBF2CDAED;
	fma.rn.f32 	%f36, %f34, %f29, %f35;
	mov.f32 	%f37, 0fBDC30537;
	fma.rn.f32 	%f38, %f36, %f29, %f37;
	mov.f32 	%f39, 0f3F55D9B9;
	fma.rn.f32 	%f40, %f38, %f29, %f39;
	rcp.rn.f32 	%f41, %f29;
	mul.f32 	%f42, %f40, %f41;
	mov.b32 	 %r5, %f42;
	mov.b32 	 %r6, %f1;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r5, %r7;
	mov.b32 	 %f43, %r8;
	bra.uni 	BB41_4;

BB41_2:
	mov.f32 	%f10, 0f3221F645;
	mov.f32 	%f11, 0fAF8A6370;
	fma.rn.f32 	%f12, %f11, %f2, %f10;
	mov.f32 	%f13, 0fB4016FDA;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0f3468F846;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0f370742AA;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fB804DB4D;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA4AFEA1;
	fma.rn.f32 	%f22, %f20, %f2, %f21;
	mov.f32 	%f23, 0f3BB5C027;
	fma.rn.f32 	%f24, %f22, %f2, %f23;
	mov.f32 	%f25, 0f3E24AE0F;
	fma.rn.f32 	%f26, %f24, %f2, %f25;
	mov.f32 	%f27, 0f3F62DFC4;
	fma.rn.f32 	%f28, %f26, %f2, %f27;
	mul.f32 	%f43, %f1, %f28;

BB41_4:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f43;

BB41_5:
	ret;
}

	// .globl	vec_exp10f
.visible .entry vec_exp10f(
	.param .u64 vec_exp10f_param_0,
	.param .u64 vec_exp10f_param_1,
	.param .u64 vec_exp10f_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_exp10f_param_0];
	ld.param.u64 	%rd1, [vec_exp10f_param_1];
	ld.param.u64 	%rd2, [vec_exp10f_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB42_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	mul.f32 	%f2, %f1, 0f40549A78;
	cvt.rzi.f32.f32	%f3, %f2;
	mov.f32 	%f4, 0fBE9A2080;
	fma.rn.f32 	%f5, %f3, %f4, %f1;
	mov.f32 	%f6, 0fB55427DE;
	fma.rn.f32 	%f7, %f3, %f6, %f5;
	mul.f32 	%f8, %f7, 0f40549A78;
	ex2.approx.ftz.f32 	%f9, %f8;
	ex2.approx.f32 	%f10, %f3;
	mul.f32 	%f11, %f9, %f10;
	setp.lt.f32	%p2, %f1, 0fC2380000;
	selp.f32	%f12, 0f00000000, %f11, %p2;
	setp.gt.f32	%p3, %f1, 0f42380000;
	selp.f32	%f13, 0f7F800000, %f12, %p3;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f13;

BB42_2:
	ret;
}

	// .globl	vec_exp2f
.visible .entry vec_exp2f(
	.param .u64 vec_exp2f_param_0,
	.param .u64 vec_exp2f_param_1,
	.param .u64 vec_exp2f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_exp2f_param_0];
	ld.param.u64 	%rd1, [vec_exp2f_param_1];
	ld.param.u64 	%rd2, [vec_exp2f_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB43_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	ex2.approx.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB43_2:
	ret;
}

	// .globl	vec_expf
.visible .entry vec_expf(
	.param .u64 vec_expf_param_0,
	.param .u64 vec_expf_param_1,
	.param .u64 vec_expf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<15>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_expf_param_0];
	ld.param.u64 	%rd1, [vec_expf_param_1];
	ld.param.u64 	%rd2, [vec_expf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB44_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f3, %f2;
	mov.f32 	%f4, 0fBF317200;
	fma.rn.f32 	%f5, %f3, %f4, %f1;
	mov.f32 	%f6, 0fB5BFBE8E;
	fma.rn.f32 	%f7, %f3, %f6, %f5;
	mul.f32 	%f8, %f7, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f9, %f8;
	add.f32 	%f10, %f3, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f9, %f11;
	setp.lt.f32	%p2, %f1, 0fC2D20000;
	selp.f32	%f13, 0f00000000, %f12, %p2;
	setp.gt.f32	%p3, %f1, 0f42D20000;
	selp.f32	%f14, 0f7F800000, %f13, %p3;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f14;

BB44_2:
	ret;
}

	// .globl	vec_expm1f
.visible .entry vec_expm1f(
	.param .u64 vec_expm1f_param_0,
	.param .u64 vec_expm1f_param_1,
	.param .u64 vec_expm1f_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_expm1f_param_0];
	ld.param.u64 	%rd1, [vec_expm1f_param_1];
	ld.param.u64 	%rd2, [vec_expm1f_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB45_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p2, %f4, 0f3ED1EB85;
	selp.f32	%f5, 0f00000000, %f3, %p2;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32	%p3, %f5, 0f43000000;
	add.f32 	%f11, %f5, 0fBF800000;
	selp.f32	%f12, %f11, %f5, %p3;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.f32 	%f22, %f10, %f21;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.f32 	%f27, %f26, %f26;
	selp.f32	%f28, %f27, %f26, %p3;
	setp.gt.f32	%p4, %f12, 0f43000000;
	selp.f32	%f29, 0f7F800000, %f28, %p4;
	setp.lt.f32	%p5, %f12, 0fC1C80000;
	selp.f32	%f30, 0fBF800000, %f29, %p5;
	setp.eq.f32	%p6, %f1, 0f00000000;
	add.f32 	%f31, %f1, %f1;
	selp.f32	%f32, %f31, %f30, %p6;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f32;

BB45_2:
	ret;
}

	// .globl	vec_fabsf
.visible .entry vec_fabsf(
	.param .u64 vec_fabsf_param_0,
	.param .u64 vec_fabsf_param_1,
	.param .u64 vec_fabsf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_fabsf_param_0];
	ld.param.u64 	%rd1, [vec_fabsf_param_1];
	ld.param.u64 	%rd2, [vec_fabsf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB46_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB46_2:
	ret;
}

	// .globl	vec_floorf
.visible .entry vec_floorf(
	.param .u64 vec_floorf_param_0,
	.param .u64 vec_floorf_param_1,
	.param .u64 vec_floorf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_floorf_param_0];
	ld.param.u64 	%rd1, [vec_floorf_param_1];
	ld.param.u64 	%rd2, [vec_floorf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB47_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	cvt.rmi.f32.f32	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB47_2:
	ret;
}

	// .globl	vec_j0f
.visible .entry vec_j0f(
	.param .u64 vec_j0f_param_0,
	.param .u64 vec_j0f_param_1,
	.param .u64 vec_j0f_param_2
)
{
	.local .align 4 .b8 	__local_depot48[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .f32 	%f<130>;
	.reg .b32 	%r<187>;
	.reg .b64 	%rd<35>;


	mov.u64 	%rd34, __local_depot48;
	cvta.local.u64 	%SP, %rd34;
	ld.param.u64 	%rd15, [vec_j0f_param_0];
	ld.param.u64 	%rd13, [vec_j0f_param_1];
	ld.param.u64 	%rd14, [vec_j0f_param_2];
	mov.u32 	%r72, %ntid.x;
	mov.u32 	%r73, %ctaid.x;
	mov.u32 	%r74, %tid.x;
	mad.lo.s32 	%r1, %r72, %r73, %r74;
	cvt.s64.s32	%rd16, %r1;
	setp.ge.u64	%p1, %rd16, %rd15;
	@%p1 bra 	BB48_40;

	cvta.to.global.u64 	%rd17, %rd14;
	mul.wide.s32 	%rd18, %r1, 4;
	add.s64 	%rd19, %rd17, %rd18;
	add.u64 	%rd20, %SP, 0;
	cvta.to.local.u64 	%rd33, %rd20;
	ld.global.f32 	%f28, [%rd19];
	abs.f32 	%f1, %f28;
	setp.gtu.f32	%p2, %f1, 0f41000000;
	@%p2 bra 	BB48_3;
	bra.uni 	BB48_2;

BB48_3:
	abs.f32 	%f65, %f1;
	mov.f32 	%f129, 0f00000000;
	setp.eq.f32	%p3, %f65, 0f7F800000;
	@%p3 bra 	BB48_39;

	// inline asm
	rcp.approx.ftz.f32 %f66,%f1;
	// inline asm
	mul.f32 	%f68, %f66, %f66;
	mov.f32 	%f69, 0fBF03B7C2;
	mov.f32 	%f70, 0f4056FE93;
	fma.rn.f32 	%f71, %f70, %f68, %f69;
	mov.f32 	%f72, 0f3DD3B3F3;
	fma.rn.f32 	%f73, %f71, %f68, %f72;
	mov.f32 	%f74, 0fBD7FFFB6;
	fma.rn.f32 	%f75, %f73, %f68, %f74;
	mov.f32 	%f76, 0f3F800000;
	fma.rn.f32 	%f77, %f75, %f68, %f76;
	mov.f32 	%f78, 0fBE52412D;
	mov.f32 	%f79, 0f3F91E009;
	fma.rn.f32 	%f80, %f79, %f68, %f78;
	mov.f32 	%f81, 0f3D854ED1;
	fma.rn.f32 	%f82, %f80, %f68, %f81;
	mov.f32 	%f83, 0fBDFFFFFF;
	fma.rn.f32 	%f84, %f82, %f68, %f83;
	fma.rn.f32 	%f3, %f84, %f66, %f1;
	rsqrt.approx.f32 	%f85, %f1;
	mul.f32 	%f86, %f85, 0f3F4C422A;
	mul.f32 	%f4, %f77, %f86;
	mul.f32 	%f87, %f3, 0f3F22F983;
	cvt.rni.s32.f32	%r176, %f87;
	cvt.rn.f32.s32	%f88, %r176;
	neg.f32 	%f89, %f88;
	mov.f32 	%f90, 0f3FC90FDA;
	fma.rn.f32 	%f91, %f89, %f90, %f3;
	mov.f32 	%f92, 0f33A22168;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mov.f32 	%f94, 0f27C234C5;
	fma.rn.f32 	%f122, %f89, %f94, %f93;
	abs.f32 	%f95, %f3;
	setp.leu.f32	%p4, %f95, 0f47CE4780;
	@%p4 bra 	BB48_15;

	add.s64 	%rd2, %rd33, 24;
	mov.b32 	 %r3, %f3;
	shr.u32 	%r4, %r3, 23;
	shl.b32 	%r77, %r3, 8;
	or.b32  	%r5, %r77, -2147483648;
	mov.u32 	%r168, 0;
	mov.u64 	%rd30, __cudart_i2opi_f;
	mov.u32 	%r167, -6;
	mov.u64 	%rd31, %rd33;

BB48_6:
	.pragma "nounroll";
	ld.const.u32 	%r80, [%rd30];
	// inline asm
	{
	mad.lo.cc.u32   %r78, %r80, %r5, %r168;
	madc.hi.u32     %r168, %r80, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd31], %r78;
	add.s64 	%rd31, %rd31, 4;
	add.s64 	%rd30, %rd30, 4;
	add.s32 	%r167, %r167, 1;
	setp.ne.s32	%p5, %r167, 0;
	@%p5 bra 	BB48_6;

	and.b32  	%r83, %r4, 255;
	add.s32 	%r84, %r83, -128;
	shr.u32 	%r85, %r84, 5;
	and.b32  	%r10, %r3, -2147483648;
	st.local.u32 	[%rd2], %r168;
	mov.u32 	%r86, 6;
	sub.s32 	%r87, %r86, %r85;
	mul.wide.s32 	%rd22, %r87, 4;
	add.s64 	%rd7, %rd33, %rd22;
	ld.local.u32 	%r169, [%rd7];
	ld.local.u32 	%r170, [%rd7+-4];
	and.b32  	%r13, %r4, 31;
	setp.eq.s32	%p6, %r13, 0;
	@%p6 bra 	BB48_9;

	mov.u32 	%r88, 32;
	sub.s32 	%r89, %r88, %r13;
	shr.u32 	%r90, %r170, %r89;
	shl.b32 	%r91, %r169, %r13;
	add.s32 	%r169, %r90, %r91;
	ld.local.u32 	%r92, [%rd7+-8];
	shr.u32 	%r93, %r92, %r89;
	shl.b32 	%r94, %r170, %r13;
	add.s32 	%r170, %r93, %r94;

BB48_9:
	shr.u32 	%r95, %r170, 30;
	shl.b32 	%r96, %r169, 2;
	add.s32 	%r171, %r95, %r96;
	shl.b32 	%r19, %r170, 2;
	shr.u32 	%r97, %r171, 31;
	shr.u32 	%r98, %r169, 30;
	add.s32 	%r20, %r97, %r98;
	setp.eq.s32	%p7, %r97, 0;
	@%p7 bra 	BB48_10;

	not.b32 	%r99, %r171;
	neg.s32 	%r173, %r19;
	setp.eq.s32	%p8, %r19, 0;
	selp.u32	%r100, 1, 0, %p8;
	add.s32 	%r171, %r100, %r99;
	xor.b32  	%r172, %r10, -2147483648;
	bra.uni 	BB48_12;

BB48_2:
	add.f32 	%f29, %f1, 0fC019E8A9;
	add.f32 	%f30, %f29, 0fB3E971B3;
	mov.f32 	%f31, 0fA9ACA9B3;
	mov.f32 	%f32, 0fA6B3B8E7;
	fma.rn.f32 	%f33, %f32, %f30, %f31;
	mov.f32 	%f34, 0f2C3F0E18;
	fma.rn.f32 	%f35, %f33, %f30, %f34;
	mov.f32 	%f36, 0fACD41781;
	fma.rn.f32 	%f37, %f35, %f30, %f36;
	mov.f32 	%f38, 0fAFE90F38;
	fma.rn.f32 	%f39, %f37, %f30, %f38;
	mov.f32 	%f40, 0f3020305B;
	fma.rn.f32 	%f41, %f39, %f30, %f40;
	mov.f32 	%f42, 0f33797143;
	fma.rn.f32 	%f43, %f41, %f30, %f42;
	mov.f32 	%f44, 0f30F76F85;
	fma.rn.f32 	%f45, %f43, %f30, %f44;
	mov.f32 	%f46, 0fB6B6DFC6;
	fma.rn.f32 	%f47, %f45, %f30, %f46;
	mov.f32 	%f48, 0fB6F665C9;
	fma.rn.f32 	%f49, %f47, %f30, %f48;
	mov.f32 	%f50, 0f399E2DEB;
	fma.rn.f32 	%f51, %f49, %f30, %f50;
	mov.f32 	%f52, 0f3A4AE334;
	fma.rn.f32 	%f53, %f51, %f30, %f52;
	mov.f32 	%f54, 0fBBEEAA1B;
	fma.rn.f32 	%f55, %f53, %f30, %f54;
	mov.f32 	%f56, 0fBCDA7747;
	fma.rn.f32 	%f57, %f55, %f30, %f56;
	mul.f32 	%f58, %f30, %f57;
	add.f32 	%f59, %f1, 0fC0B0A47B;
	add.f32 	%f60, %f59, 0f339A7A37;
	mul.f32 	%f61, %f60, %f58;
	add.f32 	%f62, %f1, 0fC10A75AB;
	add.f32 	%f63, %f62, 0fB4CCCDED;
	mul.f32 	%f129, %f63, %f61;
	bra.uni 	BB48_39;

BB48_10:
	mov.u32 	%r172, %r10;
	mov.u32 	%r173, %r19;

BB48_12:
	neg.s32 	%r101, %r20;
	setp.eq.s32	%p9, %r10, 0;
	selp.b32	%r176, %r20, %r101, %p9;
	clz.b32 	%r175, %r171;
	setp.eq.s32	%p10, %r175, 0;
	shl.b32 	%r102, %r171, %r175;
	mov.u32 	%r103, 32;
	sub.s32 	%r104, %r103, %r175;
	shr.u32 	%r105, %r173, %r104;
	add.s32 	%r106, %r105, %r102;
	selp.b32	%r29, %r171, %r106, %p10;
	mov.u32 	%r107, -921707870;
	mul.hi.u32 	%r174, %r29, %r107;
	setp.lt.s32	%p11, %r174, 1;
	@%p11 bra 	BB48_14;

	mul.lo.s32 	%r108, %r29, -921707870;
	shr.u32 	%r109, %r108, 31;
	shl.b32 	%r110, %r174, 1;
	add.s32 	%r174, %r109, %r110;
	add.s32 	%r175, %r175, 1;

BB48_14:
	mov.u32 	%r111, 126;
	sub.s32 	%r112, %r111, %r175;
	shl.b32 	%r113, %r112, 23;
	add.s32 	%r114, %r174, 1;
	shr.u32 	%r115, %r114, 7;
	add.s32 	%r116, %r115, 1;
	shr.u32 	%r117, %r116, 1;
	add.s32 	%r118, %r117, %r113;
	or.b32  	%r119, %r118, %r172;
	mov.b32 	 %f122, %r119;

BB48_15:
	and.b32  	%r120, %r176, 3;
	cvt.rn.f32.s32	%f96, %r120;
	add.f32 	%f97, %f122, 0fBF490FDB;
	fma.rn.f32 	%f123, %f96, 0f3FC90FDB, %f97;
	abs.f32 	%f98, %f123;
	setp.neu.f32	%p12, %f98, 0f7F800000;
	@%p12 bra 	BB48_17;

	mov.f32 	%f99, 0f00000000;
	mul.rn.f32 	%f123, %f123, %f99;

BB48_17:
	mul.f32 	%f100, %f123, 0f3F22F983;
	cvt.rni.s32.f32	%r186, %f100;
	cvt.rn.f32.s32	%f101, %r186;
	neg.f32 	%f102, %f101;
	fma.rn.f32 	%f104, %f102, %f90, %f123;
	fma.rn.f32 	%f106, %f102, %f92, %f104;
	fma.rn.f32 	%f124, %f102, %f94, %f106;
	abs.f32 	%f108, %f123;
	setp.leu.f32	%p13, %f108, 0f47CE4780;
	@%p13 bra 	BB48_28;

	mov.b32 	 %r37, %f123;
	shr.u32 	%r38, %r37, 23;
	shl.b32 	%r123, %r37, 8;
	or.b32  	%r39, %r123, -2147483648;
	mov.u32 	%r178, 0;
	mov.u64 	%rd32, __cudart_i2opi_f;
	mov.u32 	%r177, -6;

BB48_19:
	.pragma "nounroll";
	ld.const.u32 	%r126, [%rd32];
	// inline asm
	{
	mad.lo.cc.u32   %r124, %r126, %r39, %r178;
	madc.hi.u32     %r178, %r126, %r39,  0;
	}
	// inline asm
	st.local.u32 	[%rd33], %r124;
	add.s64 	%rd33, %rd33, 4;
	add.s64 	%rd32, %rd32, 4;
	add.s32 	%r177, %r177, 1;
	setp.ne.s32	%p14, %r177, 0;
	@%p14 bra 	BB48_19;

	and.b32  	%r129, %r38, 255;
	add.s32 	%r130, %r129, -128;
	shr.u32 	%r131, %r130, 5;
	and.b32  	%r44, %r37, -2147483648;
	cvta.to.local.u64 	%rd25, %rd20;
	st.local.u32 	[%rd25+24], %r178;
	mov.u32 	%r132, 6;
	sub.s32 	%r133, %r132, %r131;
	mul.wide.s32 	%rd26, %r133, 4;
	add.s64 	%rd12, %rd25, %rd26;
	ld.local.u32 	%r179, [%rd12];
	ld.local.u32 	%r180, [%rd12+-4];
	and.b32  	%r47, %r38, 31;
	setp.eq.s32	%p15, %r47, 0;
	@%p15 bra 	BB48_22;

	mov.u32 	%r134, 32;
	sub.s32 	%r135, %r134, %r47;
	shr.u32 	%r136, %r180, %r135;
	shl.b32 	%r137, %r179, %r47;
	add.s32 	%r179, %r136, %r137;
	ld.local.u32 	%r138, [%rd12+-8];
	shr.u32 	%r139, %r138, %r135;
	shl.b32 	%r140, %r180, %r47;
	add.s32 	%r180, %r139, %r140;

BB48_22:
	shr.u32 	%r141, %r180, 30;
	shl.b32 	%r142, %r179, 2;
	add.s32 	%r181, %r141, %r142;
	shl.b32 	%r53, %r180, 2;
	shr.u32 	%r143, %r181, 31;
	shr.u32 	%r144, %r179, 30;
	add.s32 	%r54, %r143, %r144;
	setp.eq.s32	%p16, %r143, 0;
	@%p16 bra 	BB48_23;

	not.b32 	%r145, %r181;
	neg.s32 	%r183, %r53;
	setp.eq.s32	%p17, %r53, 0;
	selp.u32	%r146, 1, 0, %p17;
	add.s32 	%r181, %r146, %r145;
	xor.b32  	%r182, %r44, -2147483648;
	bra.uni 	BB48_25;

BB48_23:
	mov.u32 	%r182, %r44;
	mov.u32 	%r183, %r53;

BB48_25:
	neg.s32 	%r147, %r54;
	setp.eq.s32	%p18, %r44, 0;
	selp.b32	%r186, %r54, %r147, %p18;
	clz.b32 	%r185, %r181;
	setp.eq.s32	%p19, %r185, 0;
	shl.b32 	%r148, %r181, %r185;
	mov.u32 	%r149, 32;
	sub.s32 	%r150, %r149, %r185;
	shr.u32 	%r151, %r183, %r150;
	add.s32 	%r152, %r151, %r148;
	selp.b32	%r63, %r181, %r152, %p19;
	mov.u32 	%r153, -921707870;
	mul.hi.u32 	%r184, %r63, %r153;
	setp.lt.s32	%p20, %r184, 1;
	@%p20 bra 	BB48_27;

	mul.lo.s32 	%r154, %r63, -921707870;
	shr.u32 	%r155, %r154, 31;
	shl.b32 	%r156, %r184, 1;
	add.s32 	%r184, %r155, %r156;
	add.s32 	%r185, %r185, 1;

BB48_27:
	mov.u32 	%r157, 126;
	sub.s32 	%r158, %r157, %r185;
	shl.b32 	%r159, %r158, 23;
	add.s32 	%r160, %r184, 1;
	shr.u32 	%r161, %r160, 7;
	add.s32 	%r162, %r161, 1;
	shr.u32 	%r163, %r162, 1;
	add.s32 	%r164, %r163, %r159;
	or.b32  	%r165, %r164, %r182;
	mov.b32 	 %f124, %r165;

BB48_28:
	mul.rn.f32 	%f14, %f124, %f124;
	add.s32 	%r70, %r186, 1;
	and.b32  	%r71, %r70, 1;
	setp.eq.s32	%p21, %r71, 0;
	@%p21 bra 	BB48_30;

	mov.f32 	%f109, 0fBAB6061A;
	mov.f32 	%f110, 0f37CCF5CE;
	fma.rn.f32 	%f125, %f110, %f14, %f109;
	bra.uni 	BB48_31;

BB48_30:
	mov.f32 	%f111, 0f3C08839E;
	mov.f32 	%f112, 0fB94CA1F9;
	fma.rn.f32 	%f125, %f112, %f14, %f111;

BB48_31:
	@%p21 bra 	BB48_33;

	mov.f32 	%f113, 0f3D2AAAA5;
	fma.rn.f32 	%f114, %f125, %f14, %f113;
	mov.f32 	%f115, 0fBF000000;
	fma.rn.f32 	%f126, %f114, %f14, %f115;
	bra.uni 	BB48_34;

BB48_33:
	mov.f32 	%f116, 0fBE2AAAA3;
	fma.rn.f32 	%f117, %f125, %f14, %f116;
	mov.f32 	%f118, 0f00000000;
	fma.rn.f32 	%f126, %f117, %f14, %f118;

BB48_34:
	fma.rn.f32 	%f127, %f126, %f124, %f124;
	@%p21 bra 	BB48_36;

	fma.rn.f32 	%f127, %f126, %f14, %f76;

BB48_36:
	and.b32  	%r166, %r70, 2;
	setp.eq.s32	%p24, %r166, 0;
	@%p24 bra 	BB48_38;

	mov.f32 	%f120, 0f00000000;
	mov.f32 	%f121, 0fBF800000;
	fma.rn.f32 	%f127, %f127, %f121, %f120;

BB48_38:
	mul.f32 	%f129, %f4, %f127;

BB48_39:
	cvta.to.global.u64 	%rd27, %rd13;
	add.s64 	%rd29, %rd27, %rd18;
	st.global.f32 	[%rd29], %f129;

BB48_40:
	ret;
}

	// .globl	vec_j1f
.visible .entry vec_j1f(
	.param .u64 vec_j1f_param_0,
	.param .u64 vec_j1f_param_1,
	.param .u64 vec_j1f_param_2
)
{
	.local .align 4 .b8 	__local_depot49[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<27>;
	.reg .f32 	%f<130>;
	.reg .b32 	%r<195>;
	.reg .b64 	%rd<39>;


	mov.u64 	%rd38, __local_depot49;
	cvta.local.u64 	%SP, %rd38;
	ld.param.u64 	%rd16, [vec_j1f_param_0];
	ld.param.u64 	%rd14, [vec_j1f_param_1];
	ld.param.u64 	%rd15, [vec_j1f_param_2];
	mov.u32 	%r71, %ntid.x;
	mov.u32 	%r72, %ctaid.x;
	mov.u32 	%r73, %tid.x;
	mad.lo.s32 	%r1, %r71, %r72, %r73;
	cvt.s64.s32	%rd17, %r1;
	setp.ge.u64	%p1, %rd17, %rd16;
	@%p1 bra 	BB49_40;

	cvta.to.global.u64 	%rd18, %rd15;
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd20, %rd18, %rd19;
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd35, %rd21;
	ld.global.f32 	%f1, [%rd20];
	abs.f32 	%f2, %f1;
	setp.gtu.f32	%p2, %f2, 0f40FB3333;
	@%p2 bra 	BB49_3;
	bra.uni 	BB49_2;

BB49_3:
	abs.f32 	%f61, %f2;
	mov.f32 	%f129, 0f00000000;
	setp.eq.f32	%p3, %f61, 0f7F800000;
	@%p3 bra 	BB49_39;

	// inline asm
	rcp.approx.ftz.f32 %f62,%f2;
	// inline asm
	mul.f32 	%f64, %f62, %f62;
	mov.f32 	%f65, 0f3F3FF7E9;
	mov.f32 	%f66, 0fC082CB37;
	fma.rn.f32 	%f67, %f66, %f64, %f65;
	mov.f32 	%f68, 0fBE458BAE;
	fma.rn.f32 	%f69, %f67, %f64, %f68;
	mov.f32 	%f70, 0f3E3FFF8B;
	fma.rn.f32 	%f71, %f69, %f64, %f70;
	mov.f32 	%f72, 0f3F800000;
	fma.rn.f32 	%f73, %f71, %f64, %f72;
	mov.f32 	%f74, 0f3EB914AD;
	mov.f32 	%f75, 0fBFCA3BA2;
	fma.rn.f32 	%f76, %f75, %f64, %f74;
	mov.f32 	%f77, 0fBE27F2EC;
	fma.rn.f32 	%f78, %f76, %f64, %f77;
	mov.f32 	%f79, 0f3EBFFFFD;
	fma.rn.f32 	%f80, %f78, %f64, %f79;
	fma.rn.f32 	%f4, %f80, %f62, %f2;
	rsqrt.approx.f32 	%f81, %f2;
	mul.f32 	%f82, %f81, 0f3F4C422A;
	mul.f32 	%f5, %f73, %f82;
	mul.f32 	%f83, %f4, 0f3F22F983;
	cvt.rni.s32.f32	%r184, %f83;
	cvt.rn.f32.s32	%f84, %r184;
	neg.f32 	%f85, %f84;
	mov.f32 	%f86, 0f3FC90FDA;
	fma.rn.f32 	%f87, %f85, %f86, %f4;
	mov.f32 	%f88, 0f33A22168;
	fma.rn.f32 	%f89, %f85, %f88, %f87;
	mov.f32 	%f90, 0f27C234C5;
	fma.rn.f32 	%f122, %f85, %f90, %f89;
	abs.f32 	%f91, %f4;
	setp.leu.f32	%p4, %f91, 0f47CE4780;
	@%p4 bra 	BB49_15;

	add.s64 	%rd2, %rd35, 24;
	mov.b32 	 %r3, %f4;
	shl.b32 	%r76, %r3, 8;
	or.b32  	%r4, %r76, -2147483648;
	mov.u32 	%r176, 0;
	mov.u64 	%rd34, __cudart_i2opi_f;
	mov.u32 	%r175, -6;

BB49_6:
	.pragma "nounroll";
	ld.const.u32 	%r79, [%rd34];
	// inline asm
	{
	mad.lo.cc.u32   %r77, %r79, %r4, %r176;
	madc.hi.u32     %r176, %r79, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd35], %r77;
	add.s64 	%rd35, %rd35, 4;
	add.s64 	%rd34, %rd34, 4;
	add.s32 	%r175, %r175, 1;
	setp.ne.s32	%p5, %r175, 0;
	@%p5 bra 	BB49_6;

	bfe.u32 	%r82, %r3, 23, 8;
	add.s32 	%r83, %r82, -128;
	shr.u32 	%r84, %r83, 5;
	and.b32  	%r9, %r3, -2147483648;
	st.local.u32 	[%rd2], %r176;
	bfe.u32 	%r10, %r3, 23, 5;
	mov.u32 	%r85, 6;
	sub.s32 	%r86, %r85, %r84;
	cvta.to.local.u64 	%rd24, %rd21;
	mul.wide.s32 	%rd25, %r86, 4;
	add.s64 	%rd7, %rd24, %rd25;
	ld.local.u32 	%r177, [%rd7];
	ld.local.u32 	%r178, [%rd7+-4];
	setp.eq.s32	%p6, %r10, 0;
	@%p6 bra 	BB49_9;

	mov.u32 	%r87, 32;
	sub.s32 	%r88, %r87, %r10;
	shr.u32 	%r89, %r178, %r88;
	shl.b32 	%r90, %r177, %r10;
	add.s32 	%r177, %r89, %r90;
	ld.local.u32 	%r91, [%rd7+-8];
	shr.u32 	%r92, %r91, %r88;
	shl.b32 	%r93, %r178, %r10;
	add.s32 	%r178, %r92, %r93;

BB49_9:
	shr.u32 	%r94, %r178, 30;
	shl.b32 	%r95, %r177, 2;
	add.s32 	%r179, %r94, %r95;
	shl.b32 	%r18, %r178, 2;
	shr.u32 	%r96, %r179, 31;
	shr.u32 	%r97, %r177, 30;
	add.s32 	%r19, %r96, %r97;
	setp.eq.s32	%p7, %r96, 0;
	@%p7 bra 	BB49_10;

	not.b32 	%r98, %r179;
	neg.s32 	%r181, %r18;
	setp.eq.s32	%p8, %r18, 0;
	selp.u32	%r99, 1, 0, %p8;
	add.s32 	%r179, %r99, %r98;
	xor.b32  	%r180, %r9, -2147483648;
	bra.uni 	BB49_12;

BB49_2:
	add.f32 	%f29, %f2, 0fC0753AAC;
	add.f32 	%f30, %f29, 0f33A5090F;
	mov.f32 	%f31, 0f2B81BF42;
	mov.f32 	%f32, 0f29AF3463;
	fma.rn.f32 	%f33, %f32, %f30, %f31;
	mov.f32 	%f34, 0fADE21EC1;
	fma.rn.f32 	%f35, %f33, %f30, %f34;
	mov.f32 	%f36, 0fAF5DDEFF;
	fma.rn.f32 	%f37, %f35, %f30, %f36;
	mov.f32 	%f38, 0f319B0C9D;
	fma.rn.f32 	%f39, %f37, %f30, %f38;
	mov.f32 	%f40, 0f32E81173;
	fma.rn.f32 	%f41, %f39, %f30, %f40;
	mov.f32 	%f42, 0fB50F8DC8;
	fma.rn.f32 	%f43, %f41, %f30, %f42;
	mov.f32 	%f44, 0fB61E653D;
	fma.rn.f32 	%f45, %f43, %f30, %f44;
	mov.f32 	%f46, 0f382CD9C5;
	fma.rn.f32 	%f47, %f45, %f30, %f46;
	mov.f32 	%f48, 0f38F9EB10;
	fma.rn.f32 	%f49, %f47, %f30, %f48;
	mov.f32 	%f50, 0fBAECEB9C;
	fma.rn.f32 	%f51, %f49, %f30, %f50;
	mov.f32 	%f52, 0fBB276FFD;
	fma.rn.f32 	%f53, %f51, %f30, %f52;
	mov.f32 	%f54, 0f3D073993;
	fma.rn.f32 	%f55, %f53, %f30, %f54;
	add.f32 	%f56, %f2, 0fC0E07FB0;
	add.f32 	%f57, %f56, 0f3444B8DB;
	mul.f32 	%f58, %f57, %f55;
	mul.f32 	%f59, %f30, %f58;
	mul.f32 	%f129, %f2, %f59;
	bra.uni 	BB49_39;

BB49_10:
	mov.u32 	%r180, %r9;
	mov.u32 	%r181, %r18;

BB49_12:
	neg.s32 	%r100, %r19;
	setp.eq.s32	%p9, %r9, 0;
	selp.b32	%r184, %r19, %r100, %p9;
	clz.b32 	%r183, %r179;
	setp.eq.s32	%p10, %r183, 0;
	shl.b32 	%r101, %r179, %r183;
	mov.u32 	%r102, 32;
	sub.s32 	%r103, %r102, %r183;
	shr.u32 	%r104, %r181, %r103;
	add.s32 	%r105, %r104, %r101;
	selp.b32	%r28, %r179, %r105, %p10;
	mov.u32 	%r106, -921707870;
	mul.hi.u32 	%r182, %r28, %r106;
	setp.lt.s32	%p11, %r182, 1;
	@%p11 bra 	BB49_14;

	mul.lo.s32 	%r107, %r28, -921707870;
	shr.u32 	%r108, %r107, 31;
	shl.b32 	%r109, %r182, 1;
	add.s32 	%r182, %r108, %r109;
	add.s32 	%r183, %r183, 1;

BB49_14:
	mov.u32 	%r110, 126;
	sub.s32 	%r111, %r110, %r183;
	shl.b32 	%r112, %r111, 23;
	add.s32 	%r113, %r182, 1;
	shr.u32 	%r114, %r113, 7;
	add.s32 	%r115, %r114, 1;
	shr.u32 	%r116, %r115, 1;
	add.s32 	%r117, %r116, %r112;
	or.b32  	%r118, %r117, %r180;
	mov.b32 	 %f122, %r118;

BB49_15:
	and.b32  	%r119, %r184, 3;
	cvt.rn.f32.s32	%f92, %r119;
	add.f32 	%f93, %f122, 0fC016CBE4;
	fma.rn.f32 	%f123, %f92, 0f3FC90FDB, %f93;
	abs.f32 	%f94, %f123;
	setp.neu.f32	%p12, %f94, 0f7F800000;
	@%p12 bra 	BB49_17;

	mov.f32 	%f95, 0f00000000;
	mul.rn.f32 	%f123, %f123, %f95;

BB49_17:
	mul.f32 	%f96, %f123, 0f3F22F983;
	cvt.rni.s32.f32	%r194, %f96;
	cvt.rn.f32.s32	%f97, %r194;
	neg.f32 	%f98, %f97;
	fma.rn.f32 	%f100, %f98, %f86, %f123;
	fma.rn.f32 	%f102, %f98, %f88, %f100;
	fma.rn.f32 	%f124, %f98, %f90, %f102;
	abs.f32 	%f104, %f123;
	setp.leu.f32	%p13, %f104, 0f47CE4780;
	@%p13 bra 	BB49_28;

	mov.b32 	 %r36, %f123;
	shr.u32 	%r37, %r36, 23;
	shl.b32 	%r122, %r36, 8;
	or.b32  	%r38, %r122, -2147483648;
	cvta.to.local.u64 	%rd37, %rd21;
	mov.u32 	%r186, 0;
	mov.u64 	%rd36, __cudart_i2opi_f;
	mov.u32 	%r185, -6;

BB49_19:
	.pragma "nounroll";
	ld.const.u32 	%r125, [%rd36];
	// inline asm
	{
	mad.lo.cc.u32   %r123, %r125, %r38, %r186;
	madc.hi.u32     %r186, %r125, %r38,  0;
	}
	// inline asm
	st.local.u32 	[%rd37], %r123;
	add.s64 	%rd37, %rd37, 4;
	add.s64 	%rd36, %rd36, 4;
	add.s32 	%r185, %r185, 1;
	setp.ne.s32	%p14, %r185, 0;
	@%p14 bra 	BB49_19;

	and.b32  	%r128, %r37, 255;
	add.s32 	%r129, %r128, -128;
	shr.u32 	%r130, %r129, 5;
	and.b32  	%r43, %r36, -2147483648;
	cvta.to.local.u64 	%rd29, %rd21;
	st.local.u32 	[%rd29+24], %r186;
	mov.u32 	%r131, 6;
	sub.s32 	%r132, %r131, %r130;
	mul.wide.s32 	%rd30, %r132, 4;
	add.s64 	%rd13, %rd29, %rd30;
	ld.local.u32 	%r187, [%rd13];
	ld.local.u32 	%r188, [%rd13+-4];
	and.b32  	%r46, %r37, 31;
	setp.eq.s32	%p15, %r46, 0;
	@%p15 bra 	BB49_22;

	mov.u32 	%r133, 32;
	sub.s32 	%r134, %r133, %r46;
	shr.u32 	%r135, %r188, %r134;
	shl.b32 	%r136, %r187, %r46;
	add.s32 	%r187, %r135, %r136;
	ld.local.u32 	%r137, [%rd13+-8];
	shr.u32 	%r138, %r137, %r134;
	shl.b32 	%r139, %r188, %r46;
	add.s32 	%r188, %r138, %r139;

BB49_22:
	shr.u32 	%r140, %r188, 30;
	shl.b32 	%r141, %r187, 2;
	add.s32 	%r189, %r140, %r141;
	shl.b32 	%r52, %r188, 2;
	shr.u32 	%r142, %r189, 31;
	shr.u32 	%r143, %r187, 30;
	add.s32 	%r53, %r142, %r143;
	setp.eq.s32	%p16, %r142, 0;
	@%p16 bra 	BB49_23;

	not.b32 	%r144, %r189;
	neg.s32 	%r191, %r52;
	setp.eq.s32	%p17, %r52, 0;
	selp.u32	%r145, 1, 0, %p17;
	add.s32 	%r189, %r145, %r144;
	xor.b32  	%r190, %r43, -2147483648;
	bra.uni 	BB49_25;

BB49_23:
	mov.u32 	%r190, %r43;
	mov.u32 	%r191, %r52;

BB49_25:
	neg.s32 	%r146, %r53;
	setp.eq.s32	%p18, %r43, 0;
	selp.b32	%r194, %r53, %r146, %p18;
	clz.b32 	%r193, %r189;
	setp.eq.s32	%p19, %r193, 0;
	shl.b32 	%r147, %r189, %r193;
	mov.u32 	%r148, 32;
	sub.s32 	%r149, %r148, %r193;
	shr.u32 	%r150, %r191, %r149;
	add.s32 	%r151, %r150, %r147;
	selp.b32	%r62, %r189, %r151, %p19;
	mov.u32 	%r152, -921707870;
	mul.hi.u32 	%r192, %r62, %r152;
	setp.lt.s32	%p20, %r192, 1;
	@%p20 bra 	BB49_27;

	mul.lo.s32 	%r153, %r62, -921707870;
	shr.u32 	%r154, %r153, 31;
	shl.b32 	%r155, %r192, 1;
	add.s32 	%r192, %r154, %r155;
	add.s32 	%r193, %r193, 1;

BB49_27:
	mov.u32 	%r156, 126;
	sub.s32 	%r157, %r156, %r193;
	shl.b32 	%r158, %r157, 23;
	add.s32 	%r159, %r192, 1;
	shr.u32 	%r160, %r159, 7;
	add.s32 	%r161, %r160, 1;
	shr.u32 	%r162, %r161, 1;
	add.s32 	%r163, %r162, %r158;
	or.b32  	%r164, %r163, %r190;
	mov.b32 	 %f124, %r164;

BB49_28:
	mul.rn.f32 	%f15, %f124, %f124;
	add.s32 	%r69, %r194, 1;
	and.b32  	%r70, %r69, 1;
	setp.eq.s32	%p21, %r70, 0;
	@%p21 bra 	BB49_30;

	mov.f32 	%f105, 0fBAB6061A;
	mov.f32 	%f106, 0f37CCF5CE;
	fma.rn.f32 	%f125, %f106, %f15, %f105;
	bra.uni 	BB49_31;

BB49_30:
	mov.f32 	%f107, 0f3C08839E;
	mov.f32 	%f108, 0fB94CA1F9;
	fma.rn.f32 	%f125, %f108, %f15, %f107;

BB49_31:
	@%p21 bra 	BB49_33;

	mov.f32 	%f109, 0f3D2AAAA5;
	fma.rn.f32 	%f110, %f125, %f15, %f109;
	mov.f32 	%f111, 0fBF000000;
	fma.rn.f32 	%f126, %f110, %f15, %f111;
	bra.uni 	BB49_34;

BB49_33:
	mov.f32 	%f112, 0fBE2AAAA3;
	fma.rn.f32 	%f113, %f125, %f15, %f112;
	mov.f32 	%f114, 0f00000000;
	fma.rn.f32 	%f126, %f113, %f15, %f114;

BB49_34:
	fma.rn.f32 	%f127, %f126, %f124, %f124;
	@%p21 bra 	BB49_36;

	fma.rn.f32 	%f127, %f126, %f15, %f72;

BB49_36:
	and.b32  	%r165, %r69, 2;
	setp.eq.s32	%p24, %r165, 0;
	@%p24 bra 	BB49_38;

	mov.f32 	%f116, 0f00000000;
	mov.f32 	%f117, 0fBF800000;
	fma.rn.f32 	%f127, %f127, %f117, %f116;

BB49_38:
	mul.f32 	%f129, %f5, %f127;

BB49_39:
	neg.f32 	%f118, %f129;
	setp.lt.f32	%p25, %f1, 0f00000000;
	selp.f32	%f119, %f118, %f129, %p25;
	mov.b32 	 %r166, %f1;
	and.b32  	%r167, %r166, -2147483648;
	mov.b32 	 %r168, %f119;
	and.b32  	%r169, %r168, 2147483647;
	or.b32  	%r170, %r169, %r167;
	mov.b32 	 %f120, %r170;
	setp.lt.f32	%p26, %f2, 0f0DA24260;
	selp.f32	%f121, %f120, %f119, %p26;
	cvta.to.global.u64 	%rd31, %rd14;
	add.s64 	%rd33, %rd31, %rd19;
	st.global.f32 	[%rd33], %f121;

BB49_40:
	ret;
}

	// .globl	vec_lgammaf
.visible .entry vec_lgammaf(
	.param .u64 vec_lgammaf_param_0,
	.param .u64 vec_lgammaf_param_1,
	.param .u64 vec_lgammaf_param_2
)
{
	.reg .pred 	%p<26>;
	.reg .f32 	%f<283>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_lgammaf_param_0];
	ld.param.u64 	%rd1, [vec_lgammaf_param_1];
	ld.param.u64 	%rd2, [vec_lgammaf_param_2];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r4;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB50_35;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f40400000;
	@%p2 bra 	BB50_7;
	bra.uni 	BB50_2;

BB50_7:
	setp.ltu.f32	%p8, %f2, 0f3FC00000;
	@%p8 bra 	BB50_9;
	bra.uni 	BB50_8;

BB50_9:
	setp.ltu.f32	%p9, %f2, 0f3F333333;
	@%p9 bra 	BB50_11;
	bra.uni 	BB50_10;

BB50_11:
	mov.f32 	%f147, 0fBBB34878;
	mov.f32 	%f148, 0f3B6B1C86;
	fma.rn.f32 	%f149, %f148, %f2, %f147;
	mov.f32 	%f150, 0fBD36CAEF;
	fma.rn.f32 	%f151, %f149, %f2, %f150;
	mov.f32 	%f152, 0f3E2B5555;
	fma.rn.f32 	%f153, %f151, %f2, %f152;
	mov.f32 	%f154, 0fBD2C96C7;
	fma.rn.f32 	%f155, %f153, %f2, %f154;
	mov.f32 	%f156, 0fBF27E6EB;
	fma.rn.f32 	%f157, %f155, %f2, %f156;
	mov.f32 	%f158, 0f3F13C463;
	fma.rn.f32 	%f159, %f157, %f2, %f158;
	mul.f32 	%f160, %f2, %f159;
	fma.rn.f32 	%f161, %f160, %f2, %f2;
	setp.lt.f32	%p10, %f161, 0f00800000;
	mul.f32 	%f162, %f161, 0f4B000000;
	selp.f32	%f12, %f162, %f161, %p10;
	selp.f32	%f163, 0fC1B80000, 0f00000000, %p10;
	mov.b32 	 %r11, %f12;
	add.s32 	%r12, %r11, -1059760811;
	and.b32  	%r13, %r12, -8388608;
	sub.s32 	%r14, %r11, %r13;
	mov.b32 	 %f164, %r14;
	cvt.rn.f32.s32	%f165, %r13;
	mov.f32 	%f166, 0f34000000;
	fma.rn.f32 	%f167, %f165, %f166, %f163;
	add.f32 	%f168, %f164, 0fBF800000;
	mov.f32 	%f169, 0f3E1039F6;
	mov.f32 	%f170, 0fBE055027;
	fma.rn.f32 	%f171, %f170, %f168, %f169;
	mov.f32 	%f172, 0fBDF8CDCC;
	fma.rn.f32 	%f173, %f171, %f168, %f172;
	mov.f32 	%f174, 0f3E0F2955;
	fma.rn.f32 	%f175, %f173, %f168, %f174;
	mov.f32 	%f176, 0fBE2AD8B9;
	fma.rn.f32 	%f177, %f175, %f168, %f176;
	mov.f32 	%f178, 0f3E4CED0B;
	fma.rn.f32 	%f179, %f177, %f168, %f178;
	mov.f32 	%f180, 0fBE7FFF22;
	fma.rn.f32 	%f181, %f179, %f168, %f180;
	mov.f32 	%f182, 0f3EAAAA78;
	fma.rn.f32 	%f183, %f181, %f168, %f182;
	mov.f32 	%f184, 0fBF000000;
	fma.rn.f32 	%f185, %f183, %f168, %f184;
	mul.f32 	%f186, %f168, %f185;
	fma.rn.f32 	%f187, %f186, %f168, %f168;
	mov.f32 	%f188, 0f3F317218;
	fma.rn.f32 	%f274, %f167, %f188, %f187;
	setp.lt.u32	%p11, %r11, 2139095040;
	@%p11 bra 	BB50_13;

	mov.f32 	%f189, 0f7F800000;
	fma.rn.f32 	%f274, %f12, %f189, %f189;

BB50_13:
	neg.f32 	%f190, %f274;
	setp.eq.f32	%p12, %f12, 0f00000000;
	selp.f32	%f275, 0f7F800000, %f190, %p12;
	bra.uni 	BB50_14;

BB50_2:
	setp.ltu.f32	%p3, %f2, 0f40F9999A;
	@%p3 bra 	BB50_6;
	bra.uni 	BB50_3;

BB50_6:
	add.f32 	%f88, %f2, 0fC0400000;
	mov.f32 	%f89, 0fC640F6F8;
	mov.f32 	%f90, 0fC43B38FB;
	fma.rn.f32 	%f91, %f90, %f88, %f89;
	mov.f32 	%f92, 0fC7206560;
	fma.rn.f32 	%f93, %f91, %f88, %f92;
	mov.f32 	%f94, 0fC73CB6AA;
	fma.rn.f32 	%f95, %f93, %f88, %f94;
	mov.f32 	%f96, 0fC80BAE5A;
	fma.rn.f32 	%f97, %f95, %f88, %f96;
	add.f32 	%f98, %f88, 0fC381A020;
	mov.f32 	%f99, 0fC62864B8;
	fma.rn.f32 	%f100, %f98, %f88, %f99;
	mov.f32 	%f101, 0fC7B50686;
	fma.rn.f32 	%f102, %f100, %f88, %f101;
	mov.f32 	%f103, 0fC8498465;
	fma.rn.f32 	%f87, %f102, %f88, %f103;
	// inline asm
	rcp.approx.ftz.f32 %f86,%f87;
	// inline asm
	fma.rn.f32 	%f275, %f97, %f86, %f88;
	bra.uni 	BB50_14;

BB50_8:
	add.f32 	%f104, %f2, 0fC0000000;
	mov.f32 	%f105, 0fB967A002;
	mov.f32 	%f106, 0f385007FA;
	fma.rn.f32 	%f107, %f106, %f104, %f105;
	mov.f32 	%f108, 0f3A0DE6FC;
	fma.rn.f32 	%f109, %f107, %f104, %f108;
	mov.f32 	%f110, 0fBA9DE0E2;
	fma.rn.f32 	%f111, %f109, %f104, %f110;
	mov.f32 	%f112, 0f3B3D05B7;
	fma.rn.f32 	%f113, %f111, %f104, %f112;
	mov.f32 	%f114, 0fBBF1EB10;
	fma.rn.f32 	%f115, %f113, %f104, %f114;
	mov.f32 	%f116, 0f3CA89A28;
	fma.rn.f32 	%f117, %f115, %f104, %f116;
	mov.f32 	%f118, 0fBD89F01A;
	fma.rn.f32 	%f119, %f117, %f104, %f118;
	mov.f32 	%f120, 0f3EA51A66;
	fma.rn.f32 	%f121, %f119, %f104, %f120;
	mov.f32 	%f122, 0f3ED87730;
	fma.rn.f32 	%f123, %f121, %f104, %f122;
	mul.f32 	%f275, %f104, %f123;
	bra.uni 	BB50_14;

BB50_3:
	// inline asm
	rcp.approx.ftz.f32 %f42,%f2;
	// inline asm
	mul.f32 	%f44, %f42, %f42;
	mov.f32 	%f45, 0fBB360953;
	mov.f32 	%f46, 0f3A4BE755;
	fma.rn.f32 	%f47, %f46, %f44, %f45;
	mov.f32 	%f48, 0f3DAAAAA3;
	fma.rn.f32 	%f49, %f47, %f44, %f48;
	mov.f32 	%f50, 0f3F6B3F8E;
	fma.rn.f32 	%f3, %f49, %f42, %f50;
	mul.f32 	%f51, %f2, 0f4B000000;
	setp.lt.f32	%p4, %f2, 0f00800000;
	selp.f32	%f4, %f51, %f2, %p4;
	selp.f32	%f52, 0fC1B80000, 0f00000000, %p4;
	mov.b32 	 %r7, %f4;
	add.s32 	%r8, %r7, -1059760811;
	and.b32  	%r9, %r8, -8388608;
	sub.s32 	%r10, %r7, %r9;
	mov.b32 	 %f53, %r10;
	cvt.rn.f32.s32	%f54, %r9;
	mov.f32 	%f55, 0f34000000;
	fma.rn.f32 	%f56, %f54, %f55, %f52;
	add.f32 	%f57, %f53, 0fBF800000;
	mov.f32 	%f58, 0f3E1039F6;
	mov.f32 	%f59, 0fBE055027;
	fma.rn.f32 	%f60, %f59, %f57, %f58;
	mov.f32 	%f61, 0fBDF8CDCC;
	fma.rn.f32 	%f62, %f60, %f57, %f61;
	mov.f32 	%f63, 0f3E0F2955;
	fma.rn.f32 	%f64, %f62, %f57, %f63;
	mov.f32 	%f65, 0fBE2AD8B9;
	fma.rn.f32 	%f66, %f64, %f57, %f65;
	mov.f32 	%f67, 0f3E4CED0B;
	fma.rn.f32 	%f68, %f66, %f57, %f67;
	mov.f32 	%f69, 0fBE7FFF22;
	fma.rn.f32 	%f70, %f68, %f57, %f69;
	mov.f32 	%f71, 0f3EAAAA78;
	fma.rn.f32 	%f72, %f70, %f57, %f71;
	mov.f32 	%f73, 0fBF000000;
	fma.rn.f32 	%f74, %f72, %f57, %f73;
	mul.f32 	%f75, %f57, %f74;
	fma.rn.f32 	%f76, %f75, %f57, %f57;
	mov.f32 	%f77, 0f3F317218;
	fma.rn.f32 	%f273, %f56, %f77, %f76;
	setp.lt.u32	%p5, %r7, 2139095040;
	@%p5 bra 	BB50_5;

	mov.f32 	%f78, 0f7F800000;
	fma.rn.f32 	%f273, %f4, %f78, %f78;

BB50_5:
	mul.f32 	%f79, %f273, 0f3F000000;
	setp.eq.f32	%p6, %f4, 0f00000000;
	selp.f32	%f80, 0fFF800000, %f79, %p6;
	add.f32 	%f81, %f2, 0fBF000000;
	mul.rn.f32 	%f82, %f80, %f81;
	sub.f32 	%f83, %f82, %f2;
	add.rn.f32 	%f84, %f82, %f3;
	add.f32 	%f85, %f83, %f84;
	setp.eq.f32	%p7, %f2, 0f7F800000;
	selp.f32	%f275, %f2, %f85, %p7;
	bra.uni 	BB50_14;

BB50_10:
	mov.f32 	%f124, 0f3F800000;
	sub.f32 	%f125, %f124, %f2;
	mov.f32 	%f126, 0f3DD47577;
	mov.f32 	%f127, 0f3D3BEF76;
	fma.rn.f32 	%f128, %f127, %f125, %f126;
	mov.f32 	%f129, 0f3DFB8079;
	fma.rn.f32 	%f130, %f128, %f125, %f129;
	mov.f32 	%f131, 0f3E0295B5;
	fma.rn.f32 	%f132, %f130, %f125, %f131;
	mov.f32 	%f133, 0f3E12A765;
	fma.rn.f32 	%f134, %f132, %f125, %f133;
	mov.f32 	%f135, 0f3E2D6867;
	fma.rn.f32 	%f136, %f134, %f125, %f135;
	mov.f32 	%f137, 0f3E5462BF;
	fma.rn.f32 	%f138, %f136, %f125, %f137;
	mov.f32 	%f139, 0f3E8A8A72;
	fma.rn.f32 	%f140, %f138, %f125, %f139;
	mov.f32 	%f141, 0f3ECD26A4;
	fma.rn.f32 	%f142, %f140, %f125, %f141;
	mov.f32 	%f143, 0f3F528D32;
	fma.rn.f32 	%f144, %f142, %f125, %f143;
	mov.f32 	%f145, 0f3F13C468;
	fma.rn.f32 	%f146, %f144, %f125, %f145;
	mul.f32 	%f275, %f125, %f146;

BB50_14:
	setp.ge.f32	%p13, %f1, 0f00000000;
	@%p13 bra 	BB50_15;

	cvt.rmi.f32.f32	%f192, %f2;
	setp.eq.f32	%p14, %f2, %f192;
	mov.f32 	%f282, 0f7F800000;
	@%p14 bra 	BB50_34;

	setp.lt.f32	%p15, %f2, 0f1FEC1E4A;
	@%p15 bra 	BB50_31;
	bra.uni 	BB50_18;

BB50_31:
	setp.lt.f32	%p23, %f2, 0f00800000;
	mul.f32 	%f244, %f2, 0f4B000000;
	selp.f32	%f36, %f244, %f2, %p23;
	selp.f32	%f245, 0fC1B80000, 0f00000000, %p23;
	mov.b32 	 %r20, %f36;
	add.s32 	%r21, %r20, -1059760811;
	and.b32  	%r22, %r21, -8388608;
	sub.s32 	%r23, %r20, %r22;
	mov.b32 	 %f246, %r23;
	cvt.rn.f32.s32	%f247, %r22;
	mov.f32 	%f248, 0f34000000;
	fma.rn.f32 	%f249, %f247, %f248, %f245;
	add.f32 	%f250, %f246, 0fBF800000;
	mov.f32 	%f251, 0f3E1039F6;
	mov.f32 	%f252, 0fBE055027;
	fma.rn.f32 	%f253, %f252, %f250, %f251;
	mov.f32 	%f254, 0fBDF8CDCC;
	fma.rn.f32 	%f255, %f253, %f250, %f254;
	mov.f32 	%f256, 0f3E0F2955;
	fma.rn.f32 	%f257, %f255, %f250, %f256;
	mov.f32 	%f258, 0fBE2AD8B9;
	fma.rn.f32 	%f259, %f257, %f250, %f258;
	mov.f32 	%f260, 0f3E4CED0B;
	fma.rn.f32 	%f261, %f259, %f250, %f260;
	mov.f32 	%f262, 0fBE7FFF22;
	fma.rn.f32 	%f263, %f261, %f250, %f262;
	mov.f32 	%f264, 0f3EAAAA78;
	fma.rn.f32 	%f265, %f263, %f250, %f264;
	mov.f32 	%f266, 0fBF000000;
	fma.rn.f32 	%f267, %f265, %f250, %f266;
	mul.f32 	%f268, %f250, %f267;
	fma.rn.f32 	%f269, %f268, %f250, %f250;
	mov.f32 	%f270, 0f3F317218;
	fma.rn.f32 	%f281, %f249, %f270, %f269;
	setp.lt.u32	%p24, %r20, 2139095040;
	@%p24 bra 	BB50_33;

	mov.f32 	%f271, 0f7F800000;
	fma.rn.f32 	%f281, %f36, %f271, %f271;

BB50_33:
	neg.f32 	%f272, %f281;
	setp.eq.f32	%p25, %f36, 0f00000000;
	selp.f32	%f282, 0f7F800000, %f272, %p25;
	bra.uni 	BB50_34;

BB50_15:
	mov.f32 	%f282, %f275;

BB50_34:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f282;

BB50_35:
	ret;

BB50_18:
	add.f32 	%f193, %f2, %f2;
	cvt.rni.f32.f32	%f194, %f193;
	cvt.rzi.s32.f32	%r2, %f194;
	neg.f32 	%f195, %f194;
	mov.f32 	%f196, 0f3F000000;
	fma.rn.f32 	%f197, %f195, %f196, %f2;
	mul.f32 	%f18, %f197, 0f40490FDB;
	mul.rn.f32 	%f19, %f18, %f18;
	and.b32  	%r3, %r2, 1;
	setp.eq.s32	%p16, %r3, 0;
	@%p16 bra 	BB50_20;

	mov.f32 	%f198, 0fBAB6061A;
	mov.f32 	%f199, 0f37CCF5CE;
	fma.rn.f32 	%f276, %f199, %f19, %f198;
	bra.uni 	BB50_21;

BB50_20:
	mov.f32 	%f200, 0f3C08839E;
	mov.f32 	%f201, 0fB94CA1F9;
	fma.rn.f32 	%f276, %f201, %f19, %f200;

BB50_21:
	@%p16 bra 	BB50_23;

	mov.f32 	%f202, 0f3D2AAAA5;
	fma.rn.f32 	%f203, %f276, %f19, %f202;
	mov.f32 	%f204, 0fBF000000;
	fma.rn.f32 	%f277, %f203, %f19, %f204;
	bra.uni 	BB50_24;

BB50_23:
	mov.f32 	%f205, 0fBE2AAAA3;
	fma.rn.f32 	%f206, %f276, %f19, %f205;
	mov.f32 	%f207, 0f00000000;
	fma.rn.f32 	%f277, %f206, %f19, %f207;

BB50_24:
	fma.rn.f32 	%f278, %f277, %f18, %f18;
	@%p16 bra 	BB50_26;

	mov.f32 	%f208, 0f3F800000;
	fma.rn.f32 	%f278, %f277, %f19, %f208;

BB50_26:
	and.b32  	%r15, %r2, 2;
	setp.eq.s32	%p19, %r15, 0;
	@%p19 bra 	BB50_28;

	mov.f32 	%f209, 0f00000000;
	mov.f32 	%f210, 0fBF800000;
	fma.rn.f32 	%f278, %f278, %f210, %f209;

BB50_28:
	abs.f32 	%f211, %f278;
	mul.f32 	%f212, %f2, %f211;
	setp.lt.f32	%p20, %f212, 0f00800000;
	mul.f32 	%f213, %f212, 0f4B000000;
	selp.f32	%f31, %f213, %f212, %p20;
	selp.f32	%f214, 0fC1B80000, 0f00000000, %p20;
	mov.b32 	 %r16, %f31;
	add.s32 	%r17, %r16, -1059760811;
	and.b32  	%r18, %r17, -8388608;
	sub.s32 	%r19, %r16, %r18;
	mov.b32 	 %f215, %r19;
	cvt.rn.f32.s32	%f216, %r18;
	mov.f32 	%f217, 0f34000000;
	fma.rn.f32 	%f218, %f216, %f217, %f214;
	add.f32 	%f219, %f215, 0fBF800000;
	mov.f32 	%f220, 0f3E1039F6;
	mov.f32 	%f221, 0fBE055027;
	fma.rn.f32 	%f222, %f221, %f219, %f220;
	mov.f32 	%f223, 0fBDF8CDCC;
	fma.rn.f32 	%f224, %f222, %f219, %f223;
	mov.f32 	%f225, 0f3E0F2955;
	fma.rn.f32 	%f226, %f224, %f219, %f225;
	mov.f32 	%f227, 0fBE2AD8B9;
	fma.rn.f32 	%f228, %f226, %f219, %f227;
	mov.f32 	%f229, 0f3E4CED0B;
	fma.rn.f32 	%f230, %f228, %f219, %f229;
	mov.f32 	%f231, 0fBE7FFF22;
	fma.rn.f32 	%f232, %f230, %f219, %f231;
	mov.f32 	%f233, 0f3EAAAA78;
	fma.rn.f32 	%f234, %f232, %f219, %f233;
	mov.f32 	%f235, 0fBF000000;
	fma.rn.f32 	%f236, %f234, %f219, %f235;
	mul.f32 	%f237, %f236, %f219;
	fma.rn.f32 	%f238, %f237, %f219, %f219;
	mov.f32 	%f239, 0f3F317218;
	fma.rn.f32 	%f280, %f218, %f239, %f238;
	setp.lt.u32	%p21, %r16, 2139095040;
	@%p21 bra 	BB50_30;

	mov.f32 	%f240, 0f7F800000;
	fma.rn.f32 	%f280, %f31, %f240, %f240;

BB50_30:
	mov.f32 	%f241, 0f3F928682;
	sub.f32 	%f242, %f241, %f280;
	setp.eq.f32	%p22, %f31, 0f00000000;
	selp.f32	%f243, 0f7F800000, %f242, %p22;
	sub.f32 	%f282, %f243, %f275;
	bra.uni 	BB50_34;
}

	// .globl	vec_log10f
.visible .entry vec_log10f(
	.param .u64 vec_log10f_param_0,
	.param .u64 vec_log10f_param_1,
	.param .u64 vec_log10f_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_log10f_param_0];
	ld.param.u64 	%rd1, [vec_log10f_param_1];
	ld.param.u64 	%rd2, [vec_log10f_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB51_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f5, [%rd7];
	setp.lt.f32	%p2, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32	%f1, %f6, %f5, %p2;
	selp.f32	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	 %r5, %f1;
	add.s32 	%r6, %r5, -1059760811;
	and.b32  	%r7, %r6, -8388608;
	sub.s32 	%r8, %r5, %r7;
	mov.b32 	 %f8, %r8;
	cvt.rn.f32.s32	%f9, %r7;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0f3E1039F6;
	mov.f32 	%f14, 0fBE055027;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0fBDF8CDCC;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0f3E0F2955;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0fBE2AD8B9;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0f3E4CED0B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0fBE7FFF22;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0f3EAAAA78;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0fBF000000;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mul.f32 	%f30, %f12, %f29;
	fma.rn.f32 	%f31, %f30, %f12, %f12;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.f32 	%f36, %f11, %f32, %f31;
	setp.lt.u32	%p3, %r5, 2139095040;
	@%p3 bra 	BB51_3;

	mov.f32 	%f33, 0f7F800000;
	fma.rn.f32 	%f36, %f1, %f33, %f33;

BB51_3:
	cvta.to.global.u64 	%rd8, %rd1;
	mul.f32 	%f34, %f36, 0f3EDE5BD9;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f35, 0fFF800000, %f34, %p4;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f35;

BB51_4:
	ret;
}

	// .globl	vec_log1pf
.visible .entry vec_log1pf(
	.param .u64 vec_log1pf_param_0,
	.param .u64 vec_log1pf_param_1,
	.param .u64 vec_log1pf_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_log1pf_param_0];
	ld.param.u64 	%rd1, [vec_log1pf_param_1];
	ld.param.u64 	%rd2, [vec_log1pf_param_2];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r3;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB52_6;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	mov.f32 	%f7, 0f3F800000;
	add.rz.f32 	%f8, %f1, %f7;
	mov.b32 	 %r6, %f8;
	add.s32 	%r7, %r6, -1061158912;
	and.b32  	%r8, %r7, -8388608;
	mov.b32 	 %r2, %f1;
	sub.s32 	%r9, %r2, %r8;
	mov.b32 	 %f9, %r9;
	mov.u32 	%r10, 1082130432;
	sub.s32 	%r11, %r10, %r8;
	mov.b32 	 %f10, %r11;
	mov.f32 	%f11, 0fBF800000;
	mov.f32 	%f12, 0f3E800000;
	fma.rn.f32 	%f13, %f12, %f10, %f11;
	add.f32 	%f14, %f13, %f9;
	cvt.rn.f32.s32	%f15, %r8;
	mul.f32 	%f16, %f15, 0f34000000;
	mov.f32 	%f17, 0f3DD80012;
	mov.f32 	%f18, 0fBD39BF78;
	fma.rn.f32 	%f19, %f18, %f14, %f17;
	mov.f32 	%f20, 0fBE0778E0;
	fma.rn.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0f3E146475;
	fma.rn.f32 	%f23, %f21, %f14, %f22;
	mov.f32 	%f24, 0fBE2A68DD;
	fma.rn.f32 	%f25, %f23, %f14, %f24;
	mov.f32 	%f26, 0f3E4CAF9E;
	fma.rn.f32 	%f27, %f25, %f14, %f26;
	mov.f32 	%f28, 0fBE800042;
	fma.rn.f32 	%f29, %f27, %f14, %f28;
	mov.f32 	%f30, 0f3EAAAAE6;
	fma.rn.f32 	%f31, %f29, %f14, %f30;
	mov.f32 	%f32, 0fBF000000;
	fma.rn.f32 	%f33, %f31, %f14, %f32;
	mul.f32 	%f34, %f14, %f33;
	fma.rn.f32 	%f35, %f34, %f14, %f14;
	mov.f32 	%f36, 0f3F317218;
	fma.rn.f32 	%f38, %f16, %f36, %f35;
	setp.lt.u32	%p2, %r2, 2139095040;
	@%p2 bra 	BB52_5;

	setp.lt.s32	%p3, %r2, -1082130431;
	@%p3 bra 	BB52_4;

	mov.f32 	%f37, 0f7F800000;
	fma.rn.f32 	%f38, %f1, %f37, %f37;

BB52_4:
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f38, 0f80000000, %f38, %p4;

BB52_5:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f38;

BB52_6:
	ret;
}

	// .globl	vec_log2f
.visible .entry vec_log2f(
	.param .u64 vec_log2f_param_0,
	.param .u64 vec_log2f_param_1,
	.param .u64 vec_log2f_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<39>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_log2f_param_0];
	ld.param.u64 	%rd1, [vec_log2f_param_1];
	ld.param.u64 	%rd2, [vec_log2f_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB53_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f5, [%rd7];
	setp.lt.f32	%p2, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32	%f1, %f6, %f5, %p2;
	selp.f32	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	 %r5, %f1;
	add.s32 	%r6, %r5, -1060439283;
	and.b32  	%r7, %r6, -8388608;
	sub.s32 	%r8, %r5, %r7;
	mov.b32 	 %f8, %r8;
	cvt.rn.f32.s32	%f9, %r7;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0fBE2C7F30;
	mov.f32 	%f14, 0f3DC6B27F;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0f3E2FCF2A;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0fBE374E43;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0f3E520BF4;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0fBE763C8B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0f3E93BF99;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0fBEB8AA49;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0f3EF6384A;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mov.f32 	%f30, 0fBF38AA3B;
	fma.rn.f32 	%f31, %f29, %f12, %f30;
	mul.f32 	%f32, %f12, %f31;
	mul.f32 	%f33, %f12, %f32;
	mov.f32 	%f34, 0f3FB8AA3B;
	fma.rn.f32 	%f35, %f12, %f34, %f33;
	add.f32 	%f38, %f11, %f35;
	setp.lt.u32	%p3, %r5, 2139095040;
	@%p3 bra 	BB53_3;

	mov.f32 	%f36, 0f7F800000;
	fma.rn.f32 	%f38, %f1, %f36, %f36;

BB53_3:
	cvta.to.global.u64 	%rd8, %rd1;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f37, 0fFF800000, %f38, %p4;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f37;

BB53_4:
	ret;
}

	// .globl	vec_logbf
.visible .entry vec_logbf(
	.param .u64 vec_logbf_param_0,
	.param .u64 vec_logbf_param_1,
	.param .u64 vec_logbf_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_logbf_param_0];
	ld.param.u64 	%rd1, [vec_logbf_param_1];
	ld.param.u64 	%rd2, [vec_logbf_param_2];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r3;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB54_5;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f5, %f1;
	mov.b32 	 %r2, %f5;
	setp.lt.u32	%p2, %r2, 8388608;
	@%p2 bra 	BB54_3;
	bra.uni 	BB54_2;

BB54_3:
	clz.b32 	%r8, %r2;
	mov.u32 	%r9, -118;
	sub.s32 	%r10, %r9, %r8;
	cvt.rn.f32.s32	%f8, %r10;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f9, 0fFF800000, %f8, %p4;
	bra.uni 	BB54_4;

BB54_2:
	shr.u32 	%r6, %r2, 23;
	add.s32 	%r7, %r6, -127;
	cvt.rn.f32.s32	%f6, %r7;
	mul.f32 	%f7, %f1, %f1;
	setp.gt.u32	%p3, %r2, 2139095039;
	selp.f32	%f9, %f7, %f6, %p3;

BB54_4:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f9;

BB54_5:
	ret;
}

	// .globl	vec_logf
.visible .entry vec_logf(
	.param .u64 vec_logf_param_0,
	.param .u64 vec_logf_param_1,
	.param .u64 vec_logf_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_logf_param_0];
	ld.param.u64 	%rd1, [vec_logf_param_1];
	ld.param.u64 	%rd2, [vec_logf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB55_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f5, [%rd7];
	setp.lt.f32	%p2, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32	%f1, %f6, %f5, %p2;
	selp.f32	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	 %r5, %f1;
	add.s32 	%r6, %r5, -1059760811;
	and.b32  	%r7, %r6, -8388608;
	sub.s32 	%r8, %r5, %r7;
	mov.b32 	 %f8, %r8;
	cvt.rn.f32.s32	%f9, %r7;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0f3E1039F6;
	mov.f32 	%f14, 0fBE055027;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0fBDF8CDCC;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0f3E0F2955;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0fBE2AD8B9;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0f3E4CED0B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0fBE7FFF22;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0f3EAAAA78;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0fBF000000;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mul.f32 	%f30, %f12, %f29;
	fma.rn.f32 	%f31, %f30, %f12, %f12;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.f32 	%f35, %f11, %f32, %f31;
	setp.lt.u32	%p3, %r5, 2139095040;
	@%p3 bra 	BB55_3;

	mov.f32 	%f33, 0f7F800000;
	fma.rn.f32 	%f35, %f1, %f33, %f33;

BB55_3:
	cvta.to.global.u64 	%rd8, %rd1;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f34, 0fFF800000, %f35, %p4;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f34;

BB55_4:
	ret;
}

	// .globl	vec_normcdff
.visible .entry vec_normcdff(
	.param .u64 vec_normcdff_param_0,
	.param .u64 vec_normcdff_param_1,
	.param .u64 vec_normcdff_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<81>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_normcdff_param_0];
	ld.param.u64 	%rd1, [vec_normcdff_param_1];
	ld.param.u64 	%rd2, [vec_normcdff_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB56_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f11, [%rd7];
	abs.f32 	%f12, %f11;
	setp.gt.f32	%p2, %f12, 0f41680000;
	mov.b32 	 %r5, %f11;
	and.b32  	%r6, %r5, -2147483648;
	or.b32  	%r7, %r6, 1097334784;
	mov.b32 	 %f13, %r7;
	selp.f32	%f14, %f13, %f11, %p2;
	mov.f32 	%f15, 0fBF3504F3;
	mul.rn.f32 	%f1, %f14, %f15;
	neg.f32 	%f16, %f1;
	fma.rn.f32 	%f17, %f14, %f15, %f16;
	mov.f32 	%f18, 0fB24FE77A;
	fma.rn.f32 	%f2, %f14, %f18, %f17;
	add.rn.f32 	%f3, %f1, %f2;
	abs.f32 	%f19, %f3;
	add.f32 	%f8, %f19, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f7,%f8;
	// inline asm
	add.f32 	%f20, %f19, 0fC0800000;
	mul.rn.f32 	%f21, %f20, %f7;
	add.f32 	%f22, %f21, 0f3F800000;
	mov.f32 	%f23, 0fC0800000;
	fma.rn.f32 	%f24, %f23, %f22, %f19;
	neg.f32 	%f25, %f21;
	fma.rn.f32 	%f26, %f25, %f19, %f24;
	fma.rn.f32 	%f27, %f7, %f26, %f21;
	mov.f32 	%f28, 0f3BE6E05B;
	mov.f32 	%f29, 0f3A69A091;
	fma.rn.f32 	%f30, %f29, %f27, %f28;
	mov.f32 	%f31, 0fBC81FB4B;
	fma.rn.f32 	%f32, %f30, %f27, %f31;
	mov.f32 	%f33, 0f3D15373B;
	fma.rn.f32 	%f34, %f32, %f27, %f33;
	mov.f32 	%f35, 0fBD887C5A;
	fma.rn.f32 	%f36, %f34, %f27, %f35;
	mov.f32 	%f37, 0f3DC021D5;
	fma.rn.f32 	%f38, %f36, %f27, %f37;
	mov.f32 	%f39, 0fBDCED424;
	fma.rn.f32 	%f40, %f38, %f27, %f39;
	mov.f32 	%f41, 0f3D8B74DE;
	fma.rn.f32 	%f42, %f40, %f27, %f41;
	mov.f32 	%f43, 0f3C7BF170;
	fma.rn.f32 	%f44, %f42, %f27, %f43;
	mov.f32 	%f45, 0fBE0EF8D4;
	fma.rn.f32 	%f46, %f44, %f27, %f45;
	mov.f32 	%f47, 0f3F9DD2C9;
	fma.rn.f32 	%f48, %f46, %f27, %f47;
	mov.f32 	%f49, 0f3F800000;
	mov.f32 	%f50, 0f40000000;
	fma.rn.f32 	%f10, %f50, %f19, %f49;
	// inline asm
	rcp.approx.ftz.f32 %f9,%f10;
	// inline asm
	mul.rn.f32 	%f51, %f48, %f9;
	mul.f32 	%f52, %f51, 0fC0000000;
	fma.rn.f32 	%f53, %f19, %f52, %f48;
	sub.f32 	%f54, %f53, %f51;
	fma.rn.f32 	%f55, %f54, %f9, %f51;
	mul.f32 	%f56, %f19, %f19;
	neg.f32 	%f57, %f56;
	mul.f32 	%f58, %f56, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f59, %f58;
	mov.f32 	%f60, 0fBF317200;
	fma.rn.f32 	%f61, %f59, %f60, %f57;
	mov.f32 	%f62, 0fB5BFBE8E;
	fma.rn.f32 	%f63, %f59, %f62, %f61;
	mul.f32 	%f64, %f63, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f65, %f64;
	add.f32 	%f66, %f59, 0f00000000;
	ex2.approx.f32 	%f67, %f66;
	mul.f32 	%f68, %f65, %f67;
	neg.f32 	%f69, %f19;
	fma.rn.f32 	%f70, %f69, %f19, %f56;
	fma.rn.f32 	%f71, %f68, %f70, %f68;
	mul.f32 	%f72, %f55, %f71;
	setp.gt.f32	%p3, %f19, 0f4120E148;
	selp.f32	%f73, 0f00000000, %f72, %p3;
	setp.lt.f32	%p4, %f3, 0f00000000;
	sub.f32 	%f74, %f50, %f73;
	selp.f32	%f80, %f74, %f73, %p4;
	setp.geu.f32	%p5, %f14, 0fBF800000;
	@%p5 bra 	BB56_3;

	sub.f32 	%f75, %f1, %f3;
	add.rn.f32 	%f76, %f75, %f2;
	mul.f32 	%f77, %f3, 0fC0000000;
	mul.f32 	%f78, %f77, %f80;
	fma.rn.f32 	%f80, %f78, %f76, %f80;

BB56_3:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	mul.f32 	%f79, %f80, 0f3F000000;
	st.global.f32 	[%rd10], %f79;

BB56_4:
	ret;
}

	// .globl	vec_normcdfinvf
.visible .entry vec_normcdfinvf(
	.param .u64 vec_normcdfinvf_param_0,
	.param .u64 vec_normcdfinvf_param_1,
	.param .u64 vec_normcdfinvf_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<59>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_normcdfinvf_param_0];
	ld.param.u64 	%rd1, [vec_normcdfinvf_param_1];
	ld.param.u64 	%rd2, [vec_normcdfinvf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB57_5;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f7, [%rd7];
	add.f32 	%f1, %f7, %f7;
	neg.f32 	%f2, %f1;
	mov.f32 	%f8, 0f40000000;
	add.rn.f32 	%f3, %f8, %f2;
	setp.le.f32	%p2, %f1, 0f3FFF9097;
	setp.ge.f32	%p3, %f1, 0f3B5ED289;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB57_3;
	bra.uni 	BB57_2;

BB57_3:
	mul.rn.f32 	%f33, %f3, %f1;
	lg2.approx.ftz.f32 	%f34, %f33;
	neg.f32 	%f35, %f34;
	mov.f32 	%f36, 0f3221F645;
	mov.f32 	%f37, 0fAF8A6370;
	fma.rn.f32 	%f38, %f37, %f35, %f36;
	mov.f32 	%f39, 0fB4016FDA;
	fma.rn.f32 	%f40, %f38, %f35, %f39;
	mov.f32 	%f41, 0f3468F846;
	fma.rn.f32 	%f42, %f40, %f35, %f41;
	mov.f32 	%f43, 0f370742AA;
	fma.rn.f32 	%f44, %f42, %f35, %f43;
	mov.f32 	%f45, 0fB804DB4D;
	fma.rn.f32 	%f46, %f44, %f35, %f45;
	mov.f32 	%f47, 0fBA4AFEA1;
	fma.rn.f32 	%f48, %f46, %f35, %f47;
	mov.f32 	%f49, 0f3BB5C027;
	fma.rn.f32 	%f50, %f48, %f35, %f49;
	mov.f32 	%f51, 0f3E24AE0F;
	fma.rn.f32 	%f52, %f50, %f35, %f51;
	mov.f32 	%f53, 0f3F62DFC4;
	fma.rn.f32 	%f54, %f52, %f35, %f53;
	fma.rn.f32 	%f58, %f54, %f2, %f54;
	bra.uni 	BB57_4;

BB57_2:
	setp.gt.f32	%p5, %f1, 0f3F800000;
	selp.f32	%f11, %f3, %f1, %p5;
	lg2.approx.f32 	%f12, %f11;
	neg.f32 	%f13, %f12;
	rsqrt.approx.ftz.f32 	%f10, %f13;
	mov.f32 	%f14, 0f42FEF829;
	mov.f32 	%f15, 0fC27C73F1;
	fma.rn.f32 	%f16, %f15, %f10, %f14;
	mov.f32 	%f17, 0fC2E4361C;
	fma.rn.f32 	%f18, %f16, %f10, %f17;
	mov.f32 	%f19, 0f42714D9B;
	fma.rn.f32 	%f20, %f18, %f10, %f19;
	mov.f32 	%f21, 0fC1AE51B3;
	fma.rn.f32 	%f22, %f20, %f10, %f21;
	mov.f32 	%f23, 0f40CEF504;
	fma.rn.f32 	%f24, %f22, %f10, %f23;
	mov.f32 	%f25, 0fBFEA9E05;
	fma.rn.f32 	%f26, %f24, %f10, %f25;
	mov.f32 	%f27, 0fBCF871F4;
	fma.rn.f32 	%f28, %f26, %f10, %f27;
	mov.f32 	%f29, 0f3F553775;
	fma.rn.f32 	%f30, %f28, %f10, %f29;
	// inline asm
	rcp.approx.ftz.f32 %f9,%f10;
	// inline asm
	mul.rn.f32 	%f31, %f30, %f9;
	neg.f32 	%f32, %f31;
	selp.f32	%f58, %f32, %f31, %p5;

BB57_4:
	cvta.to.global.u64 	%rd8, %rd1;
	mul.f32 	%f55, %f58, 0fBFB504F3;
	mov.f32 	%f56, 0f00000000;
	add.rn.f32 	%f57, %f55, %f56;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f57;

BB57_5:
	ret;
}

	// .globl	vec_rcbrtf
.visible .entry vec_rcbrtf(
	.param .u64 vec_rcbrtf_param_0,
	.param .u64 vec_rcbrtf_param_1,
	.param .u64 vec_rcbrtf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_rcbrtf_param_0];
	ld.param.u64 	%rd1, [vec_rcbrtf_param_1];
	ld.param.u64 	%rd2, [vec_rcbrtf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB58_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f5, %f1;
	lg2.approx.f32 	%f6, %f5;
	mul.f32 	%f7, %f6, 0fBEAAAAAB;
	ex2.approx.ftz.f32 	%f8, %f7;
	mul.f32 	%f9, %f5, %f8;
	neg.f32 	%f10, %f9;
	mul.f32 	%f11, %f8, %f8;
	mov.f32 	%f12, 0f3F800000;
	fma.rn.f32 	%f13, %f11, %f10, %f12;
	mul.f32 	%f14, %f8, 0f3EAAAAAB;
	fma.rn.f32 	%f15, %f13, %f14, %f8;
	mov.b32 	 %r5, %f1;
	setp.lt.s32	%p2, %r5, 0;
	neg.f32 	%f16, %f15;
	selp.f32	%f20, %f16, %f15, %p2;
	add.f32 	%f17, %f1, %f1;
	setp.neu.f32	%p3, %f17, %f1;
	@%p3 bra 	BB58_3;

	// inline asm
	rcp.approx.ftz.f32 %f20,%f1;
	// inline asm

BB58_3:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f20;

BB58_4:
	ret;
}

	// .globl	vec_rintf
.visible .entry vec_rintf(
	.param .u64 vec_rintf_param_0,
	.param .u64 vec_rintf_param_1,
	.param .u64 vec_rintf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_rintf_param_0];
	ld.param.u64 	%rd1, [vec_rintf_param_1];
	ld.param.u64 	%rd2, [vec_rintf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB59_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	cvt.rni.f32.f32	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB59_2:
	ret;
}

	// .globl	vec_roundf
.visible .entry vec_roundf(
	.param .u64 vec_roundf_param_0,
	.param .u64 vec_roundf_param_1,
	.param .u64 vec_roundf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_roundf_param_0];
	ld.param.u64 	%rd1, [vec_roundf_param_1];
	ld.param.u64 	%rd2, [vec_roundf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB60_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f5, %f1;
	mov.b32 	 %r5, %f1;
	and.b32  	%r6, %r5, -2147483648;
	or.b32  	%r7, %r6, 1056964608;
	mov.b32 	 %f6, %r7;
	add.f32 	%f7, %f1, %f6;
	cvt.rzi.f32.f32	%f8, %f7;
	setp.gt.f32	%p2, %f5, 0f4B000000;
	selp.f32	%f9, %f1, %f8, %p2;
	setp.geu.f32	%p3, %f5, 0f3F000000;
	@%p3 bra 	BB60_3;

	cvt.rzi.f32.f32	%f9, %f1;

BB60_3:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f9;

BB60_4:
	ret;
}

	// .globl	vec_rsqrtf
.visible .entry vec_rsqrtf(
	.param .u64 vec_rsqrtf_param_0,
	.param .u64 vec_rsqrtf_param_1,
	.param .u64 vec_rsqrtf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_rsqrtf_param_0];
	ld.param.u64 	%rd1, [vec_rsqrtf_param_1];
	ld.param.u64 	%rd2, [vec_rsqrtf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB61_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	rsqrt.approx.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB61_2:
	ret;
}

	// .globl	vec_sinf
.visible .entry vec_sinf(
	.param .u64 vec_sinf_param_0,
	.param .u64 vec_sinf_param_1,
	.param .u64 vec_sinf_param_2
)
{
	.local .align 4 .b8 	__local_depot62[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<15>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<96>;
	.reg .b64 	%rd<23>;


	mov.u64 	%rd22, __local_depot62;
	cvta.local.u64 	%SP, %rd22;
	ld.param.u64 	%rd9, [vec_sinf_param_0];
	ld.param.u64 	%rd7, [vec_sinf_param_1];
	ld.param.u64 	%rd8, [vec_sinf_param_2];
	mov.u32 	%r37, %ntid.x;
	mov.u32 	%r38, %ctaid.x;
	mov.u32 	%r39, %tid.x;
	mad.lo.s32 	%r1, %r37, %r38, %r39;
	cvt.s64.s32	%rd10, %r1;
	setp.ge.u64	%p1, %rd10, %rd9;
	@%p1 bra 	BB62_25;

	cvta.to.global.u64 	%rd11, %rd8;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd14;
	ld.global.f32 	%f43, [%rd13];
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p2, %f19, 0f7F800000;
	@%p2 bra 	BB62_3;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB62_3:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r95, %f21;
	cvt.rn.f32.s32	%f22, %r95;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p3, %f29, 0f47CE4780;
	@%p3 bra 	BB62_14;

	mov.b32 	 %r3, %f43;
	shr.u32 	%r4, %r3, 23;
	shl.b32 	%r42, %r3, 8;
	or.b32  	%r5, %r42, -2147483648;
	mov.u32 	%r87, 0;
	mov.u64 	%rd20, __cudart_i2opi_f;
	mov.u32 	%r86, -6;
	mov.u64 	%rd21, %rd1;

BB62_5:
	.pragma "nounroll";
	ld.const.u32 	%r45, [%rd20];
	// inline asm
	{
	mad.lo.cc.u32   %r43, %r45, %r5, %r87;
	madc.hi.u32     %r87, %r45, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd21], %r43;
	add.s64 	%rd21, %rd21, 4;
	add.s64 	%rd20, %rd20, 4;
	add.s32 	%r86, %r86, 1;
	setp.ne.s32	%p4, %r86, 0;
	@%p4 bra 	BB62_5;

	and.b32  	%r48, %r4, 255;
	add.s32 	%r49, %r48, -128;
	shr.u32 	%r50, %r49, 5;
	and.b32  	%r10, %r3, -2147483648;
	st.local.u32 	[%rd1+24], %r87;
	mov.u32 	%r51, 6;
	sub.s32 	%r52, %r51, %r50;
	mul.wide.s32 	%rd16, %r52, 4;
	add.s64 	%rd6, %rd1, %rd16;
	ld.local.u32 	%r88, [%rd6];
	ld.local.u32 	%r89, [%rd6+-4];
	and.b32  	%r13, %r4, 31;
	setp.eq.s32	%p5, %r13, 0;
	@%p5 bra 	BB62_8;

	mov.u32 	%r53, 32;
	sub.s32 	%r54, %r53, %r13;
	shr.u32 	%r55, %r89, %r54;
	shl.b32 	%r56, %r88, %r13;
	add.s32 	%r88, %r55, %r56;
	ld.local.u32 	%r57, [%rd6+-8];
	shr.u32 	%r58, %r57, %r54;
	shl.b32 	%r59, %r89, %r13;
	add.s32 	%r89, %r58, %r59;

BB62_8:
	shr.u32 	%r60, %r89, 30;
	shl.b32 	%r61, %r88, 2;
	add.s32 	%r90, %r60, %r61;
	shl.b32 	%r19, %r89, 2;
	shr.u32 	%r62, %r90, 31;
	shr.u32 	%r63, %r88, 30;
	add.s32 	%r20, %r62, %r63;
	setp.eq.s32	%p6, %r62, 0;
	@%p6 bra 	BB62_9;

	not.b32 	%r64, %r90;
	neg.s32 	%r92, %r19;
	setp.eq.s32	%p7, %r19, 0;
	selp.u32	%r65, 1, 0, %p7;
	add.s32 	%r90, %r65, %r64;
	xor.b32  	%r91, %r10, -2147483648;
	bra.uni 	BB62_11;

BB62_9:
	mov.u32 	%r91, %r10;
	mov.u32 	%r92, %r19;

BB62_11:
	neg.s32 	%r66, %r20;
	setp.eq.s32	%p8, %r10, 0;
	selp.b32	%r95, %r20, %r66, %p8;
	clz.b32 	%r94, %r90;
	setp.eq.s32	%p9, %r94, 0;
	shl.b32 	%r67, %r90, %r94;
	mov.u32 	%r68, 32;
	sub.s32 	%r69, %r68, %r94;
	shr.u32 	%r70, %r92, %r69;
	add.s32 	%r71, %r70, %r67;
	selp.b32	%r29, %r90, %r71, %p9;
	mov.u32 	%r72, -921707870;
	mul.hi.u32 	%r93, %r29, %r72;
	setp.lt.s32	%p10, %r93, 1;
	@%p10 bra 	BB62_13;

	mul.lo.s32 	%r73, %r29, -921707870;
	shr.u32 	%r74, %r73, 31;
	shl.b32 	%r75, %r93, 1;
	add.s32 	%r93, %r74, %r75;
	add.s32 	%r94, %r94, 1;

BB62_13:
	mov.u32 	%r76, 126;
	sub.s32 	%r77, %r76, %r94;
	shl.b32 	%r78, %r77, 23;
	add.s32 	%r79, %r93, 1;
	shr.u32 	%r80, %r79, 7;
	add.s32 	%r81, %r80, 1;
	shr.u32 	%r82, %r81, 1;
	add.s32 	%r83, %r82, %r78;
	or.b32  	%r84, %r83, %r91;
	mov.b32 	 %f44, %r84;

BB62_14:
	mul.rn.f32 	%f7, %f44, %f44;
	and.b32  	%r36, %r95, 1;
	setp.eq.s32	%p11, %r36, 0;
	@%p11 bra 	BB62_16;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB62_17;

BB62_16:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB62_17:
	@%p11 bra 	BB62_19;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB62_20;

BB62_19:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB62_20:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p11 bra 	BB62_22;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB62_22:
	and.b32  	%r85, %r95, 2;
	setp.eq.s32	%p14, %r85, 0;
	@%p14 bra 	BB62_24;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB62_24:
	cvta.to.global.u64 	%rd17, %rd7;
	add.s64 	%rd19, %rd17, %rd12;
	st.global.f32 	[%rd19], %f47;

BB62_25:
	ret;
}

	// .globl	vec_sinhf
.visible .entry vec_sinhf(
	.param .u64 vec_sinhf_param_0,
	.param .u64 vec_sinhf_param_1,
	.param .u64 vec_sinhf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<32>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_sinhf_param_0];
	ld.param.u64 	%rd1, [vec_sinhf_param_1];
	ld.param.u64 	%rd2, [vec_sinhf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB63_5;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F800000;
	@%p2 bra 	BB63_3;
	bra.uni 	BB63_2;

BB63_3:
	mul.f32 	%f22, %f1, %f1;
	mov.f32 	%f23, 0f394FFF49;
	mov.f32 	%f24, 0f363D0ADA;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3C08889A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0f3E2AAAAB;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f22, %f29;
	fma.rn.f32 	%f31, %f30, %f1, %f1;
	bra.uni 	BB63_4;

BB63_2:
	mul.f32 	%f6, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f7, %f6;
	mov.f32 	%f8, 0fBF317200;
	fma.rn.f32 	%f9, %f7, %f8, %f2;
	mov.f32 	%f10, 0fB5BFBE8E;
	fma.rn.f32 	%f11, %f7, %f10, %f9;
	mul.f32 	%f12, %f11, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f13, %f12;
	add.f32 	%f14, %f7, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f13, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.b32 	 %r5, %f21;
	setp.ltu.f32	%p3, %f2, 0f42B40000;
	selp.b32	%r6, %r5, 2139095040, %p3;
	mov.b32 	 %r7, %f1;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r6, %r8;
	mov.b32 	 %f31, %r9;

BB63_4:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f31;

BB63_5:
	ret;
}

	// .globl	vec_sinpif
.visible .entry vec_sinpif(
	.param .u64 vec_sinpif_param_0,
	.param .u64 vec_sinpif_param_1,
	.param .u64 vec_sinpif_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<44>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_sinpif_param_0];
	ld.param.u64 	%rd1, [vec_sinpif_param_1];
	ld.param.u64 	%rd2, [vec_sinpif_param_2];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r4;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB64_14;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	add.f32 	%f17, %f1, %f1;
	cvt.rni.f32.f32	%f18, %f17;
	cvt.rzi.s32.f32	%r2, %f18;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f3F000000;
	fma.rn.f32 	%f21, %f19, %f20, %f1;
	mul.f32 	%f22, %f21, 0f34222169;
	mov.f32 	%f23, 0f40490FDA;
	fma.rn.f32 	%f2, %f21, %f23, %f22;
	mul.rn.f32 	%f3, %f2, %f2;
	and.b32  	%r3, %r2, 1;
	setp.eq.s32	%p2, %r3, 0;
	@%p2 bra 	BB64_3;

	mov.f32 	%f24, 0fBAB6061A;
	mov.f32 	%f25, 0f37CCF5CE;
	fma.rn.f32 	%f39, %f25, %f3, %f24;
	bra.uni 	BB64_4;

BB64_3:
	mov.f32 	%f26, 0f3C08839E;
	mov.f32 	%f27, 0fB94CA1F9;
	fma.rn.f32 	%f39, %f27, %f3, %f26;

BB64_4:
	@%p2 bra 	BB64_6;

	mov.f32 	%f28, 0f3D2AAAA5;
	fma.rn.f32 	%f29, %f39, %f3, %f28;
	mov.f32 	%f30, 0fBF000000;
	fma.rn.f32 	%f40, %f29, %f3, %f30;
	bra.uni 	BB64_7;

BB64_6:
	mov.f32 	%f31, 0fBE2AAAA3;
	fma.rn.f32 	%f32, %f39, %f3, %f31;
	mov.f32 	%f33, 0f00000000;
	fma.rn.f32 	%f40, %f32, %f3, %f33;

BB64_7:
	fma.rn.f32 	%f43, %f40, %f2, %f2;
	@%p2 bra 	BB64_9;

	mov.f32 	%f34, 0f3F800000;
	fma.rn.f32 	%f43, %f40, %f3, %f34;

BB64_9:
	and.b32  	%r7, %r2, 2;
	setp.eq.s32	%p5, %r7, 0;
	@%p5 bra 	BB64_11;

	mov.f32 	%f35, 0f00000000;
	mov.f32 	%f36, 0fBF800000;
	fma.rn.f32 	%f43, %f43, %f36, %f35;

BB64_11:
	cvt.rzi.f32.f32	%f37, %f1;
	setp.neu.f32	%p6, %f37, %f1;
	@%p6 bra 	BB64_13;

	mov.f32 	%f38, 0f00000000;
	mul.rn.f32 	%f43, %f1, %f38;

BB64_13:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f43;

BB64_14:
	ret;
}

	// .globl	vec_sqrtf
.visible .entry vec_sqrtf(
	.param .u64 vec_sqrtf_param_0,
	.param .u64 vec_sqrtf_param_1,
	.param .u64 vec_sqrtf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_sqrtf_param_0];
	ld.param.u64 	%rd1, [vec_sqrtf_param_1];
	ld.param.u64 	%rd2, [vec_sqrtf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB65_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	sqrt.rn.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB65_2:
	ret;
}

	// .globl	vec_tanf
.visible .entry vec_tanf(
	.param .u64 vec_tanf_param_0,
	.param .u64 vec_tanf_param_1,
	.param .u64 vec_tanf_param_2
)
{
	.local .align 4 .b8 	__local_depot66[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<95>;
	.reg .b64 	%rd<23>;


	mov.u64 	%rd22, __local_depot66;
	cvta.local.u64 	%SP, %rd22;
	ld.param.u64 	%rd9, [vec_tanf_param_0];
	ld.param.u64 	%rd7, [vec_tanf_param_1];
	ld.param.u64 	%rd8, [vec_tanf_param_2];
	mov.u32 	%r36, %ntid.x;
	mov.u32 	%r37, %ctaid.x;
	mov.u32 	%r38, %tid.x;
	mad.lo.s32 	%r1, %r36, %r37, %r38;
	cvt.s64.s32	%rd10, %r1;
	setp.ge.u64	%p1, %rd10, %rd9;
	@%p1 bra 	BB66_17;

	cvta.to.global.u64 	%rd11, %rd8;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd14;
	ld.global.f32 	%f30, [%rd13];
	abs.f32 	%f10, %f30;
	setp.neu.f32	%p2, %f10, 0f7F800000;
	@%p2 bra 	BB66_3;

	mov.f32 	%f11, 0f00000000;
	mul.rn.f32 	%f30, %f30, %f11;

BB66_3:
	mul.f32 	%f12, %f30, 0f3F22F983;
	cvt.rni.s32.f32	%r94, %f12;
	cvt.rn.f32.s32	%f13, %r94;
	neg.f32 	%f14, %f13;
	mov.f32 	%f15, 0f3FC90FDA;
	fma.rn.f32 	%f16, %f14, %f15, %f30;
	mov.f32 	%f17, 0f33A22168;
	fma.rn.f32 	%f18, %f14, %f17, %f16;
	mov.f32 	%f19, 0f27C234C5;
	fma.rn.f32 	%f31, %f14, %f19, %f18;
	abs.f32 	%f20, %f30;
	setp.leu.f32	%p3, %f20, 0f47CE4780;
	@%p3 bra 	BB66_14;

	mov.b32 	 %r3, %f30;
	shr.u32 	%r4, %r3, 23;
	shl.b32 	%r41, %r3, 8;
	or.b32  	%r5, %r41, -2147483648;
	mov.u32 	%r86, 0;
	mov.u64 	%rd20, __cudart_i2opi_f;
	mov.u32 	%r85, -6;
	mov.u64 	%rd21, %rd1;

BB66_5:
	.pragma "nounroll";
	ld.const.u32 	%r44, [%rd20];
	// inline asm
	{
	mad.lo.cc.u32   %r42, %r44, %r5, %r86;
	madc.hi.u32     %r86, %r44, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd21], %r42;
	add.s64 	%rd21, %rd21, 4;
	add.s64 	%rd20, %rd20, 4;
	add.s32 	%r85, %r85, 1;
	setp.ne.s32	%p4, %r85, 0;
	@%p4 bra 	BB66_5;

	and.b32  	%r47, %r4, 255;
	add.s32 	%r48, %r47, -128;
	shr.u32 	%r49, %r48, 5;
	and.b32  	%r10, %r3, -2147483648;
	st.local.u32 	[%rd1+24], %r86;
	mov.u32 	%r50, 6;
	sub.s32 	%r51, %r50, %r49;
	mul.wide.s32 	%rd16, %r51, 4;
	add.s64 	%rd6, %rd1, %rd16;
	ld.local.u32 	%r87, [%rd6];
	ld.local.u32 	%r88, [%rd6+-4];
	and.b32  	%r13, %r4, 31;
	setp.eq.s32	%p5, %r13, 0;
	@%p5 bra 	BB66_8;

	mov.u32 	%r52, 32;
	sub.s32 	%r53, %r52, %r13;
	shr.u32 	%r54, %r88, %r53;
	shl.b32 	%r55, %r87, %r13;
	add.s32 	%r87, %r54, %r55;
	ld.local.u32 	%r56, [%rd6+-8];
	shr.u32 	%r57, %r56, %r53;
	shl.b32 	%r58, %r88, %r13;
	add.s32 	%r88, %r57, %r58;

BB66_8:
	shr.u32 	%r59, %r88, 30;
	shl.b32 	%r60, %r87, 2;
	add.s32 	%r89, %r59, %r60;
	shl.b32 	%r19, %r88, 2;
	shr.u32 	%r61, %r89, 31;
	shr.u32 	%r62, %r87, 30;
	add.s32 	%r20, %r61, %r62;
	setp.eq.s32	%p6, %r61, 0;
	@%p6 bra 	BB66_9;

	not.b32 	%r63, %r89;
	neg.s32 	%r91, %r19;
	setp.eq.s32	%p7, %r19, 0;
	selp.u32	%r64, 1, 0, %p7;
	add.s32 	%r89, %r64, %r63;
	xor.b32  	%r90, %r10, -2147483648;
	bra.uni 	BB66_11;

BB66_9:
	mov.u32 	%r90, %r10;
	mov.u32 	%r91, %r19;

BB66_11:
	neg.s32 	%r65, %r20;
	setp.eq.s32	%p8, %r10, 0;
	selp.b32	%r94, %r20, %r65, %p8;
	clz.b32 	%r93, %r89;
	setp.eq.s32	%p9, %r93, 0;
	shl.b32 	%r66, %r89, %r93;
	mov.u32 	%r67, 32;
	sub.s32 	%r68, %r67, %r93;
	shr.u32 	%r69, %r91, %r68;
	add.s32 	%r70, %r69, %r66;
	selp.b32	%r29, %r89, %r70, %p9;
	mov.u32 	%r71, -921707870;
	mul.hi.u32 	%r92, %r29, %r71;
	setp.lt.s32	%p10, %r92, 1;
	@%p10 bra 	BB66_13;

	mul.lo.s32 	%r72, %r29, -921707870;
	shr.u32 	%r73, %r72, 31;
	shl.b32 	%r74, %r92, 1;
	add.s32 	%r92, %r73, %r74;
	add.s32 	%r93, %r93, 1;

BB66_13:
	mov.u32 	%r75, 126;
	sub.s32 	%r76, %r75, %r93;
	shl.b32 	%r77, %r76, 23;
	add.s32 	%r78, %r92, 1;
	shr.u32 	%r79, %r78, 7;
	add.s32 	%r80, %r79, 1;
	shr.u32 	%r81, %r80, 1;
	add.s32 	%r82, %r81, %r77;
	or.b32  	%r83, %r82, %r90;
	mov.b32 	 %f31, %r83;

BB66_14:
	mul.f32 	%f21, %f31, %f31;
	mov.f32 	%f22, 0fBF52B7F4;
	mov.f32 	%f23, 0f3B86D46D;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	add.f32 	%f25, %f21, 0fC01E09D0;
	rcp.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f24, %f26;
	mul.f32 	%f28, %f21, %f27;
	fma.rn.f32 	%f32, %f28, %f31, %f31;
	and.b32  	%r84, %r94, 1;
	setp.eq.b32	%p11, %r84, 1;
	@!%p11 bra 	BB66_16;
	bra.uni 	BB66_15;

BB66_15:
	mov.f32 	%f29, 0fBF800000;
	div.rn.f32 	%f32, %f29, %f32;

BB66_16:
	cvta.to.global.u64 	%rd17, %rd7;
	add.s64 	%rd19, %rd17, %rd12;
	st.global.f32 	[%rd19], %f32;

BB66_17:
	ret;
}

	// .globl	vec_tanhf
.visible .entry vec_tanhf(
	.param .u64 vec_tanhf_param_0,
	.param .u64 vec_tanhf_param_1,
	.param .u64 vec_tanhf_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_tanhf_param_0];
	ld.param.u64 	%rd1, [vec_tanhf_param_1];
	ld.param.u64 	%rd2, [vec_tanhf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB67_5;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F0CCCCD;
	@%p2 bra 	BB67_3;
	bra.uni 	BB67_2;

BB67_3:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f21, %f28;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f32, %f31, %f30, %p4;
	bra.uni 	BB67_4;

BB67_2:
	add.f32 	%f8, %f2, %f2;
	mul.f32 	%f9, %f8, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f10, %f9;
	mov.f32 	%f11, 0fBF317200;
	fma.rn.f32 	%f12, %f10, %f11, %f8;
	mov.f32 	%f13, 0fB5BFBE8E;
	fma.rn.f32 	%f14, %f10, %f13, %f12;
	mul.f32 	%f15, %f14, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f16, %f15;
	ex2.approx.f32 	%f17, %f10;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f7, %f16, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f6,%f7;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f6, %f19, %f18;
	mov.b32 	 %r5, %f20;
	setp.ltu.f32	%p3, %f2, 0f42B00000;
	selp.b32	%r6, %r5, 1065353216, %p3;
	mov.b32 	 %r7, %f1;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r6, %r8;
	mov.b32 	 %f32, %r9;

BB67_4:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f32;

BB67_5:
	ret;
}

	// .globl	vec_tgammaf
.visible .entry vec_tgammaf(
	.param .u64 vec_tgammaf_param_0,
	.param .u64 vec_tgammaf_param_1,
	.param .u64 vec_tgammaf_param_2
)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<92>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [vec_tgammaf_param_0];
	ld.param.u64 	%rd1, [vec_tgammaf_param_1];
	ld.param.u64 	%rd2, [vec_tgammaf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB68_11;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	setp.ltu.f32	%p2, %f1, 0f00000000;
	@%p2 bra 	BB68_5;
	bra.uni 	BB68_2;

BB68_5:
	cvt.rmi.f32.f32	%f50, %f1;
	setp.eq.f32	%p10, %f50, %f1;
	selp.f32	%f51, 0f7FFFFFFF, %f1, %p10;
	setp.lt.f32	%p11, %f51, 0fC2246666;
	selp.f32	%f14, 0fC2246666, %f51, %p11;
	setp.lt.f32	%p12, %f14, 0fC2081EB8;
	add.f32 	%f52, %f14, 0f40C00000;
	selp.f32	%f89, %f52, %f14, %p12;
	mov.f32 	%f90, %f89;
	setp.geu.f32	%p13, %f89, 0fBF000000;
	@%p13 bra 	BB68_7;

BB68_6:
	add.f32 	%f90, %f90, 0f3F800000;
	mul.f32 	%f89, %f89, %f90;
	setp.lt.f32	%p14, %f90, 0fBF000000;
	@%p14 bra 	BB68_6;

BB68_7:
	mov.f32 	%f53, 0f3BE86AA4;
	mov.f32 	%f54, 0fBA8AA19E;
	fma.rn.f32 	%f55, %f54, %f90, %f53;
	mov.f32 	%f56, 0fBC1E2998;
	fma.rn.f32 	%f57, %f55, %f90, %f56;
	mov.f32 	%f58, 0fBD2CBE4A;
	fma.rn.f32 	%f59, %f57, %f90, %f58;
	mov.f32 	%f60, 0f3E2A8A17;
	fma.rn.f32 	%f61, %f59, %f90, %f60;
	mov.f32 	%f62, 0fBD2C0CBB;
	fma.rn.f32 	%f63, %f61, %f90, %f62;
	mov.f32 	%f64, 0fBF27E7A3;
	fma.rn.f32 	%f65, %f63, %f90, %f64;
	mov.f32 	%f66, 0f3F13C468;
	fma.rn.f32 	%f67, %f65, %f90, %f66;
	mov.f32 	%f68, 0f3F800000;
	fma.rn.f32 	%f69, %f67, %f90, %f68;
	mul.f32 	%f70, %f89, %f69;
	rcp.rn.f32 	%f91, %f70;
	setp.geu.f32	%p15, %f14, 0fC2081EB8;
	@%p15 bra 	BB68_10;

	add.f32 	%f71, %f14, 0f3F800000;
	mul.f32 	%f72, %f14, %f71;
	add.f32 	%f73, %f14, 0f40000000;
	mul.f32 	%f74, %f73, %f72;
	add.f32 	%f75, %f14, 0f40400000;
	mul.f32 	%f76, %f75, %f74;
	add.f32 	%f77, %f14, 0f40800000;
	mul.f32 	%f78, %f77, %f76;
	add.f32 	%f79, %f14, 0f40A00000;
	mul.f32 	%f80, %f79, %f78;
	rcp.rn.f32 	%f81, %f80;
	mul.f32 	%f91, %f91, %f81;
	setp.geu.f32	%p16, %f1, 0fC2280000;
	@%p16 bra 	BB68_10;

	cvt.rzi.s32.f32	%r5, %f1;
	and.b32  	%r6, %r5, 1;
	setp.eq.b32	%p17, %r6, 1;
	not.pred 	%p18, %p17;
	selp.f32	%f91, 0f80000000, %f91, %p18;
	bra.uni 	BB68_10;

BB68_2:
	setp.gt.f32	%p3, %f1, 0f42100000;
	selp.f32	%f2, 0f42100000, %f1, %p3;
	setp.gt.f32	%p4, %f2, 0f42081EB8;
	add.f32 	%f3, %f2, 0fBF800000;
	selp.f32	%f86, %f3, %f2, %p4;
	add.f32 	%f84, %f86, 0fBF800000;
	mov.f32 	%f27, 0f3F800000;
	mov.f32 	%f85, %f27;
	setp.leu.f32	%p5, %f86, 0f3FC00000;
	@%p5 bra 	BB68_4;

BB68_3:
	mov.f32 	%f86, %f84;
	mul.f32 	%f85, %f86, %f85;
	add.f32 	%f84, %f86, 0fBF800000;
	setp.gt.f32	%p6, %f86, 0f3FC00000;
	@%p6 bra 	BB68_3;

BB68_4:
	setp.ltu.f32	%p7, %f2, 0f3F000000;
	selp.f32	%f28, %f86, %f84, %p7;
	mov.f32 	%f29, 0f3BE86AA4;
	mov.f32 	%f30, 0fBA8AA19E;
	fma.rn.f32 	%f31, %f30, %f28, %f29;
	mov.f32 	%f32, 0fBC1E2998;
	fma.rn.f32 	%f33, %f31, %f28, %f32;
	mov.f32 	%f34, 0fBD2CBE4A;
	fma.rn.f32 	%f35, %f33, %f28, %f34;
	mov.f32 	%f36, 0f3E2A8A17;
	fma.rn.f32 	%f37, %f35, %f28, %f36;
	mov.f32 	%f38, 0fBD2C0CBB;
	fma.rn.f32 	%f39, %f37, %f28, %f38;
	mov.f32 	%f40, 0fBF27E7A3;
	fma.rn.f32 	%f41, %f39, %f28, %f40;
	mov.f32 	%f42, 0f3F13C468;
	fma.rn.f32 	%f43, %f41, %f28, %f42;
	fma.rn.f32 	%f45, %f43, %f28, %f27;
	mul.f32 	%f46, %f2, %f45;
	setp.lt.f32	%p8, %f2, 0f3F000000;
	selp.f32	%f47, %f46, %f45, %p8;
	div.approx.f32 	%f48, %f85, %f47;
	mul.f32 	%f49, %f3, %f48;
	selp.f32	%f91, %f49, %f48, %p4;

BB68_10:
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd10, %rd8, %rd6;
	st.global.f32 	[%rd10], %f91;

BB68_11:
	ret;
}

	// .globl	vec_truncf
.visible .entry vec_truncf(
	.param .u64 vec_truncf_param_0,
	.param .u64 vec_truncf_param_1,
	.param .u64 vec_truncf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [vec_truncf_param_0];
	ld.param.u64 	%rd1, [vec_truncf_param_1];
	ld.param.u64 	%rd2, [vec_truncf_param_2];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd4, %r1;
	setp.ge.u64	%p1, %rd4, %rd3;
	@%p1 bra 	BB69_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	cvt.rzi.f32.f32	%f2, %f1;
	cvta.to.global.u64 	%rd8, %rd1;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f2;

BB69_2:
	ret;
}

	// .globl	vec_y0f
.visible .entry vec_y0f(
	.param .u64 vec_y0f_param_0,
	.param .u64 vec_y0f_param_1,
	.param .u64 vec_y0f_param_2
)
{
	.local .align 4 .b8 	__local_depot70[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<55>;
	.reg .f32 	%f<342>;
	.reg .b32 	%r<377>;
	.reg .b64 	%rd<61>;


	mov.u64 	%rd60, __local_depot70;
	cvta.local.u64 	%SP, %rd60;
	ld.param.u64 	%rd27, [vec_y0f_param_0];
	ld.param.u64 	%rd25, [vec_y0f_param_1];
	ld.param.u64 	%rd26, [vec_y0f_param_2];
	mov.u32 	%r142, %ntid.x;
	mov.u32 	%r143, %ctaid.x;
	mov.u32 	%r144, %tid.x;
	mad.lo.s32 	%r1, %r142, %r143, %r144;
	cvt.s64.s32	%rd28, %r1;
	setp.ge.u64	%p1, %rd28, %rd27;
	@%p1 bra 	BB70_88;

	cvta.to.global.u64 	%rd29, %rd26;
	mul.wide.s32 	%rd30, %r1, 4;
	add.s64 	%rd31, %rd29, %rd30;
	ld.global.f32 	%f1, [%rd31];
	abs.f32 	%f2, %f1;
	setp.gtu.f32	%p2, %f2, 0f3EE4C176;
	add.u64 	%rd32, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd32;
	@%p2 bra 	BB70_43;
	bra.uni 	BB70_2;

BB70_43:
	setp.gtu.f32	%p29, %f2, 0f3FF67AF8;
	@%p29 bra 	BB70_45;
	bra.uni 	BB70_44;

BB70_45:
	setp.gtu.f32	%p30, %f2, 0f40B0B31E;
	@%p30 bra 	BB70_47;
	bra.uni 	BB70_46;

BB70_47:
	setp.gtu.f32	%p31, %f2, 0f410A7798;
	@%p31 bra 	BB70_49;
	bra.uni 	BB70_48;

BB70_49:
	abs.f32 	%f270, %f2;
	mov.f32 	%f340, 0f00000000;
	setp.eq.f32	%p32, %f270, 0f7F800000;
	@%p32 bra 	BB70_85;

	// inline asm
	rcp.approx.ftz.f32 %f271,%f2;
	// inline asm
	mul.f32 	%f273, %f271, %f271;
	mov.f32 	%f274, 0f3DD0D5F0;
	mov.f32 	%f275, 0fBECC69F3;
	fma.rn.f32 	%f276, %f275, %f273, %f274;
	mov.f32 	%f277, 0fBD7FF855;
	fma.rn.f32 	%f278, %f276, %f273, %f277;
	mov.f32 	%f279, 0f3F800000;
	fma.rn.f32 	%f40, %f278, %f273, %f279;
	mov.f32 	%f280, 0fBE50D31C;
	mov.f32 	%f281, 0f3F8CCD61;
	fma.rn.f32 	%f282, %f281, %f273, %f280;
	mov.f32 	%f283, 0f3D854783;
	fma.rn.f32 	%f284, %f282, %f273, %f283;
	mov.f32 	%f285, 0fBDFFFFFB;
	fma.rn.f32 	%f286, %f284, %f273, %f285;
	fma.rn.f32 	%f41, %f286, %f271, %f2;
	rsqrt.approx.f32 	%f42, %f2;
	mul.f32 	%f287, %f41, 0f3F22F983;
	cvt.rni.s32.f32	%r366, %f287;
	cvt.rn.f32.s32	%f288, %r366;
	neg.f32 	%f289, %f288;
	mov.f32 	%f290, 0f3FC90FDA;
	fma.rn.f32 	%f291, %f289, %f290, %f41;
	mov.f32 	%f292, 0f33A22168;
	fma.rn.f32 	%f293, %f289, %f292, %f291;
	mov.f32 	%f294, 0f27C234C5;
	fma.rn.f32 	%f333, %f289, %f294, %f293;
	abs.f32 	%f295, %f41;
	setp.leu.f32	%p33, %f295, 0f47CE4780;
	@%p33 bra 	BB70_61;

	add.s64 	%rd13, %rd1, 24;
	mov.b32 	 %r73, %f41;
	shr.u32 	%r74, %r73, 23;
	shl.b32 	%r243, %r73, 8;
	or.b32  	%r75, %r243, -2147483648;
	mov.u32 	%r358, 0;
	mov.u64 	%rd56, __cudart_i2opi_f;
	mov.u32 	%r357, -6;
	mov.u64 	%rd57, %rd1;

BB70_52:
	.pragma "nounroll";
	ld.const.u32 	%r246, [%rd56];
	// inline asm
	{
	mad.lo.cc.u32   %r244, %r246, %r75, %r358;
	madc.hi.u32     %r358, %r246, %r75,  0;
	}
	// inline asm
	st.local.u32 	[%rd57], %r244;
	add.s64 	%rd57, %rd57, 4;
	add.s64 	%rd56, %rd56, 4;
	add.s32 	%r357, %r357, 1;
	setp.ne.s32	%p34, %r357, 0;
	@%p34 bra 	BB70_52;

	and.b32  	%r249, %r74, 255;
	add.s32 	%r250, %r249, -128;
	shr.u32 	%r251, %r250, 5;
	and.b32  	%r80, %r73, -2147483648;
	st.local.u32 	[%rd13], %r358;
	mov.u32 	%r252, 6;
	sub.s32 	%r253, %r252, %r251;
	mul.wide.s32 	%rd43, %r253, 4;
	add.s64 	%rd18, %rd1, %rd43;
	ld.local.u32 	%r359, [%rd18];
	ld.local.u32 	%r360, [%rd18+-4];
	and.b32  	%r83, %r74, 31;
	setp.eq.s32	%p35, %r83, 0;
	@%p35 bra 	BB70_55;

	mov.u32 	%r254, 32;
	sub.s32 	%r255, %r254, %r83;
	shr.u32 	%r256, %r360, %r255;
	shl.b32 	%r257, %r359, %r83;
	add.s32 	%r359, %r256, %r257;
	ld.local.u32 	%r258, [%rd18+-8];
	shr.u32 	%r259, %r258, %r255;
	shl.b32 	%r260, %r360, %r83;
	add.s32 	%r360, %r259, %r260;

BB70_55:
	shr.u32 	%r261, %r360, 30;
	shl.b32 	%r262, %r359, 2;
	add.s32 	%r361, %r261, %r262;
	shl.b32 	%r89, %r360, 2;
	shr.u32 	%r263, %r361, 31;
	shr.u32 	%r264, %r359, 30;
	add.s32 	%r90, %r263, %r264;
	setp.eq.s32	%p36, %r263, 0;
	@%p36 bra 	BB70_56;

	not.b32 	%r265, %r361;
	neg.s32 	%r363, %r89;
	setp.eq.s32	%p37, %r89, 0;
	selp.u32	%r266, 1, 0, %p37;
	add.s32 	%r361, %r266, %r265;
	xor.b32  	%r362, %r80, -2147483648;
	bra.uni 	BB70_58;

BB70_2:
	mul.f32 	%f69, %f2, %f2;
	mov.f32 	%f70, 0fB71F49B6;
	mov.f32 	%f71, 0f33DBE5AC;
	fma.rn.f32 	%f72, %f71, %f69, %f70;
	mov.f32 	%f73, 0f3A0D3100;
	fma.rn.f32 	%f74, %f72, %f69, %f73;
	mov.f32 	%f75, 0fBC83AD8E;
	fma.rn.f32 	%f76, %f74, %f69, %f75;
	mov.f32 	%f77, 0f3E35DE5A;
	fma.rn.f32 	%f78, %f76, %f69, %f77;
	mov.f32 	%f79, 0fBD9726B5;
	fma.rn.f32 	%f3, %f78, %f69, %f79;
	mul.f32 	%f80, %f2, 0f4B000000;
	setp.lt.f32	%p3, %f2, 0f00800000;
	selp.f32	%f4, %f80, %f2, %p3;
	selp.f32	%f81, 0fC1B80000, 0f00000000, %p3;
	mov.b32 	 %r145, %f4;
	add.s32 	%r146, %r145, -1059760811;
	and.b32  	%r147, %r146, -8388608;
	sub.s32 	%r148, %r145, %r147;
	mov.b32 	 %f82, %r148;
	cvt.rn.f32.s32	%f83, %r147;
	mov.f32 	%f84, 0f34000000;
	fma.rn.f32 	%f85, %f83, %f84, %f81;
	add.f32 	%f86, %f82, 0fBF800000;
	mov.f32 	%f87, 0f3E1039F6;
	mov.f32 	%f88, 0fBE055027;
	fma.rn.f32 	%f89, %f88, %f86, %f87;
	mov.f32 	%f90, 0fBDF8CDCC;
	fma.rn.f32 	%f91, %f89, %f86, %f90;
	mov.f32 	%f92, 0f3E0F2955;
	fma.rn.f32 	%f93, %f91, %f86, %f92;
	mov.f32 	%f94, 0fBE2AD8B9;
	fma.rn.f32 	%f95, %f93, %f86, %f94;
	mov.f32 	%f96, 0f3E4CED0B;
	fma.rn.f32 	%f97, %f95, %f86, %f96;
	mov.f32 	%f98, 0fBE7FFF22;
	fma.rn.f32 	%f99, %f97, %f86, %f98;
	mov.f32 	%f100, 0f3EAAAA78;
	fma.rn.f32 	%f101, %f99, %f86, %f100;
	mov.f32 	%f102, 0fBF000000;
	fma.rn.f32 	%f103, %f101, %f86, %f102;
	mul.f32 	%f104, %f86, %f103;
	fma.rn.f32 	%f105, %f104, %f86, %f86;
	mov.f32 	%f106, 0f3F317218;
	fma.rn.f32 	%f324, %f85, %f106, %f105;
	setp.lt.u32	%p4, %r145, 2139095040;
	@%p4 bra 	BB70_4;

	mov.f32 	%f107, 0f7F800000;
	fma.rn.f32 	%f324, %f4, %f107, %f107;

BB70_4:
	mul.f32 	%f108, %f324, 0f3F22F983;
	setp.eq.f32	%p5, %f4, 0f00000000;
	selp.f32	%f8, 0fFF800000, %f108, %p5;
	abs.f32 	%f9, %f2;
	setp.gtu.f32	%p6, %f9, 0f41000000;
	@%p6 bra 	BB70_6;
	bra.uni 	BB70_5;

BB70_6:
	abs.f32 	%f145, %f9;
	mov.f32 	%f332, 0f00000000;
	setp.eq.f32	%p7, %f145, 0f7F800000;
	@%p7 bra 	BB70_42;

	// inline asm
	rcp.approx.ftz.f32 %f146,%f9;
	// inline asm
	mul.f32 	%f148, %f146, %f146;
	mov.f32 	%f149, 0fBF03B7C2;
	mov.f32 	%f150, 0f4056FE93;
	fma.rn.f32 	%f151, %f150, %f148, %f149;
	mov.f32 	%f152, 0f3DD3B3F3;
	fma.rn.f32 	%f153, %f151, %f148, %f152;
	mov.f32 	%f154, 0fBD7FFFB6;
	fma.rn.f32 	%f155, %f153, %f148, %f154;
	mov.f32 	%f156, 0f3F800000;
	fma.rn.f32 	%f157, %f155, %f148, %f156;
	mov.f32 	%f158, 0fBE52412D;
	mov.f32 	%f159, 0f3F91E009;
	fma.rn.f32 	%f160, %f159, %f148, %f158;
	mov.f32 	%f161, 0f3D854ED1;
	fma.rn.f32 	%f162, %f160, %f148, %f161;
	mov.f32 	%f163, 0fBDFFFFFF;
	fma.rn.f32 	%f164, %f162, %f148, %f163;
	fma.rn.f32 	%f11, %f164, %f146, %f9;
	rsqrt.approx.f32 	%f165, %f9;
	mul.f32 	%f166, %f165, 0f3F4C422A;
	mul.f32 	%f12, %f157, %f166;
	mul.f32 	%f167, %f11, 0f3F22F983;
	cvt.rni.s32.f32	%r346, %f167;
	cvt.rn.f32.s32	%f168, %r346;
	neg.f32 	%f169, %f168;
	mov.f32 	%f170, 0f3FC90FDA;
	fma.rn.f32 	%f171, %f169, %f170, %f11;
	mov.f32 	%f172, 0f33A22168;
	fma.rn.f32 	%f173, %f169, %f172, %f171;
	mov.f32 	%f174, 0f27C234C5;
	fma.rn.f32 	%f325, %f169, %f174, %f173;
	abs.f32 	%f175, %f11;
	setp.leu.f32	%p8, %f175, 0f47CE4780;
	@%p8 bra 	BB70_18;

	mov.b32 	 %r3, %f11;
	shr.u32 	%r4, %r3, 23;
	shl.b32 	%r151, %r3, 8;
	or.b32  	%r5, %r151, -2147483648;
	mov.u32 	%r338, 0;
	mov.u64 	%rd52, __cudart_i2opi_f;
	mov.u32 	%r337, -6;

BB70_9:
	.pragma "nounroll";
	ld.const.u32 	%r154, [%rd52];
	// inline asm
	{
	mad.lo.cc.u32   %r152, %r154, %r5, %r338;
	madc.hi.u32     %r338, %r154, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd1], %r152;
	add.s64 	%rd1, %rd1, 4;
	add.s64 	%rd52, %rd52, 4;
	add.s32 	%r337, %r337, 1;
	setp.ne.s32	%p9, %r337, 0;
	@%p9 bra 	BB70_9;

	and.b32  	%r157, %r4, 255;
	add.s32 	%r158, %r157, -128;
	shr.u32 	%r159, %r158, 5;
	and.b32  	%r10, %r3, -2147483648;
	cvta.to.local.u64 	%rd35, %rd32;
	st.local.u32 	[%rd35+24], %r338;
	mov.u32 	%r160, 6;
	sub.s32 	%r161, %r160, %r159;
	mul.wide.s32 	%rd36, %r161, 4;
	add.s64 	%rd6, %rd35, %rd36;
	ld.local.u32 	%r339, [%rd6];
	ld.local.u32 	%r340, [%rd6+-4];
	and.b32  	%r13, %r4, 31;
	setp.eq.s32	%p10, %r13, 0;
	@%p10 bra 	BB70_12;

	mov.u32 	%r162, 32;
	sub.s32 	%r163, %r162, %r13;
	shr.u32 	%r164, %r340, %r163;
	shl.b32 	%r165, %r339, %r13;
	add.s32 	%r339, %r164, %r165;
	ld.local.u32 	%r166, [%rd6+-8];
	shr.u32 	%r167, %r166, %r163;
	shl.b32 	%r168, %r340, %r13;
	add.s32 	%r340, %r167, %r168;

BB70_12:
	shr.u32 	%r169, %r340, 30;
	shl.b32 	%r170, %r339, 2;
	add.s32 	%r341, %r169, %r170;
	shl.b32 	%r19, %r340, 2;
	shr.u32 	%r171, %r341, 31;
	shr.u32 	%r172, %r339, 30;
	add.s32 	%r20, %r171, %r172;
	setp.eq.s32	%p11, %r171, 0;
	@%p11 bra 	BB70_13;

	not.b32 	%r173, %r341;
	neg.s32 	%r343, %r19;
	setp.eq.s32	%p12, %r19, 0;
	selp.u32	%r174, 1, 0, %p12;
	add.s32 	%r341, %r174, %r173;
	xor.b32  	%r342, %r10, -2147483648;
	bra.uni 	BB70_15;

BB70_44:
	add.f32 	%f202, %f2, 0fBF64C176;
	add.f32 	%f203, %f202, 0f32657D03;
	mov.f32 	%f204, 0fBE02574C;
	mov.f32 	%f205, 0f3CDDC8B3;
	fma.rn.f32 	%f206, %f205, %f203, %f204;
	mov.f32 	%f207, 0f3E7F2CC9;
	fma.rn.f32 	%f208, %f206, %f203, %f207;
	mov.f32 	%f209, 0fBE8BF29B;
	fma.rn.f32 	%f210, %f208, %f203, %f209;
	mov.f32 	%f211, 0f3E5BCE93;
	fma.rn.f32 	%f212, %f210, %f203, %f211;
	mov.f32 	%f213, 0fBE38C4FF;
	fma.rn.f32 	%f214, %f212, %f203, %f213;
	mov.f32 	%f215, 0f3E42774D;
	fma.rn.f32 	%f216, %f214, %f203, %f215;
	mov.f32 	%f217, 0fBE525CB2;
	fma.rn.f32 	%f218, %f216, %f203, %f217;
	mov.f32 	%f219, 0f3E60F43D;
	fma.rn.f32 	%f220, %f218, %f203, %f219;
	mov.f32 	%f221, 0fBE679145;
	fma.rn.f32 	%f222, %f220, %f203, %f221;
	mov.f32 	%f223, 0f3E61D24A;
	fma.rn.f32 	%f224, %f222, %f203, %f223;
	mov.f32 	%f225, 0fBEFBF1AD;
	fma.rn.f32 	%f226, %f224, %f203, %f225;
	mov.f32 	%f227, 0f3F6121BB;
	fma.rn.f32 	%f228, %f226, %f203, %f227;
	mul.f32 	%f340, %f203, %f228;
	bra.uni 	BB70_85;

BB70_5:
	add.f32 	%f109, %f9, 0fC019E8A9;
	add.f32 	%f110, %f109, 0fB3E971B3;
	mov.f32 	%f111, 0fA9ACA9B3;
	mov.f32 	%f112, 0fA6B3B8E7;
	fma.rn.f32 	%f113, %f112, %f110, %f111;
	mov.f32 	%f114, 0f2C3F0E18;
	fma.rn.f32 	%f115, %f113, %f110, %f114;
	mov.f32 	%f116, 0fACD41781;
	fma.rn.f32 	%f117, %f115, %f110, %f116;
	mov.f32 	%f118, 0fAFE90F38;
	fma.rn.f32 	%f119, %f117, %f110, %f118;
	mov.f32 	%f120, 0f3020305B;
	fma.rn.f32 	%f121, %f119, %f110, %f120;
	mov.f32 	%f122, 0f33797143;
	fma.rn.f32 	%f123, %f121, %f110, %f122;
	mov.f32 	%f124, 0f30F76F85;
	fma.rn.f32 	%f125, %f123, %f110, %f124;
	mov.f32 	%f126, 0fB6B6DFC6;
	fma.rn.f32 	%f127, %f125, %f110, %f126;
	mov.f32 	%f128, 0fB6F665C9;
	fma.rn.f32 	%f129, %f127, %f110, %f128;
	mov.f32 	%f130, 0f399E2DEB;
	fma.rn.f32 	%f131, %f129, %f110, %f130;
	mov.f32 	%f132, 0f3A4AE334;
	fma.rn.f32 	%f133, %f131, %f110, %f132;
	mov.f32 	%f134, 0fBBEEAA1B;
	fma.rn.f32 	%f135, %f133, %f110, %f134;
	mov.f32 	%f136, 0fBCDA7747;
	fma.rn.f32 	%f137, %f135, %f110, %f136;
	mul.f32 	%f138, %f110, %f137;
	add.f32 	%f139, %f9, 0fC0B0A47B;
	add.f32 	%f140, %f139, 0f339A7A37;
	mul.f32 	%f141, %f140, %f138;
	add.f32 	%f142, %f9, 0fC10A75AB;
	add.f32 	%f143, %f142, 0fB4CCCDED;
	mul.f32 	%f332, %f143, %f141;
	bra.uni 	BB70_42;

BB70_46:
	add.f32 	%f229, %f2, 0fC07D4A9A;
	add.f32 	%f230, %f229, 0fB3D9856A;
	mov.f32 	%f231, 0fB45E2607;
	mov.f32 	%f232, 0fB449DD3F;
	fma.rn.f32 	%f233, %f232, %f230, %f231;
	mov.f32 	%f234, 0fB6857064;
	fma.rn.f32 	%f235, %f233, %f230, %f234;
	mov.f32 	%f236, 0f38554610;
	fma.rn.f32 	%f237, %f235, %f230, %f236;
	mov.f32 	%f238, 0f394ACED7;
	fma.rn.f32 	%f239, %f237, %f230, %f238;
	mov.f32 	%f240, 0fBB0F1A0C;
	fma.rn.f32 	%f241, %f239, %f230, %f240;
	mov.f32 	%f242, 0fBBE07F2E;
	fma.rn.f32 	%f243, %f241, %f230, %f242;
	mov.f32 	%f244, 0f3D6FB6B5;
	fma.rn.f32 	%f245, %f243, %f230, %f244;
	mov.f32 	%f246, 0f3D504DF1;
	fma.rn.f32 	%f247, %f245, %f230, %f246;
	mov.f32 	%f248, 0fBECE1A13;
	fma.rn.f32 	%f249, %f247, %f230, %f248;
	mul.f32 	%f340, %f230, %f249;
	bra.uni 	BB70_85;

BB70_48:
	add.f32 	%f250, %f2, 0fC0E2C0EE;
	add.f32 	%f251, %f250, 0fB39CE420;
	mov.f32 	%f252, 0f3629DA6C;
	mov.f32 	%f253, 0f3510CEBE;
	fma.rn.f32 	%f254, %f253, %f251, %f252;
	mov.f32 	%f255, 0fB84054C0;
	fma.rn.f32 	%f256, %f254, %f251, %f255;
	mov.f32 	%f257, 0fB91318AB;
	fma.rn.f32 	%f258, %f256, %f251, %f257;
	mov.f32 	%f259, 0f3B0E9921;
	fma.rn.f32 	%f260, %f258, %f251, %f259;
	mov.f32 	%f261, 0f3B5974D5;
	fma.rn.f32 	%f262, %f260, %f251, %f261;
	mov.f32 	%f263, 0fBD44B4D7;
	fma.rn.f32 	%f264, %f262, %f251, %f263;
	mov.f32 	%f265, 0fBCAD7799;
	fma.rn.f32 	%f266, %f264, %f251, %f265;
	mov.f32 	%f267, 0f3E99A665;
	fma.rn.f32 	%f268, %f266, %f251, %f267;
	mul.f32 	%f340, %f251, %f268;
	bra.uni 	BB70_85;

BB70_13:
	mov.u32 	%r342, %r10;
	mov.u32 	%r343, %r19;

BB70_15:
	neg.s32 	%r175, %r20;
	setp.eq.s32	%p13, %r10, 0;
	selp.b32	%r346, %r20, %r175, %p13;
	clz.b32 	%r345, %r341;
	setp.eq.s32	%p14, %r345, 0;
	shl.b32 	%r176, %r341, %r345;
	mov.u32 	%r177, 32;
	sub.s32 	%r178, %r177, %r345;
	shr.u32 	%r179, %r343, %r178;
	add.s32 	%r180, %r179, %r176;
	selp.b32	%r29, %r341, %r180, %p14;
	mov.u32 	%r181, -921707870;
	mul.hi.u32 	%r344, %r29, %r181;
	setp.lt.s32	%p15, %r344, 1;
	@%p15 bra 	BB70_17;

	mul.lo.s32 	%r182, %r29, -921707870;
	shr.u32 	%r183, %r182, 31;
	shl.b32 	%r184, %r344, 1;
	add.s32 	%r344, %r183, %r184;
	add.s32 	%r345, %r345, 1;

BB70_17:
	mov.u32 	%r185, 126;
	sub.s32 	%r186, %r185, %r345;
	shl.b32 	%r187, %r186, 23;
	add.s32 	%r188, %r344, 1;
	shr.u32 	%r189, %r188, 7;
	add.s32 	%r190, %r189, 1;
	shr.u32 	%r191, %r190, 1;
	add.s32 	%r192, %r191, %r187;
	or.b32  	%r193, %r192, %r342;
	mov.b32 	 %f325, %r193;

BB70_18:
	and.b32  	%r194, %r346, 3;
	cvt.rn.f32.s32	%f176, %r194;
	add.f32 	%f177, %f325, 0fBF490FDB;
	fma.rn.f32 	%f326, %f176, 0f3FC90FDB, %f177;
	abs.f32 	%f178, %f326;
	setp.neu.f32	%p16, %f178, 0f7F800000;
	@%p16 bra 	BB70_20;

	mov.f32 	%f179, 0f00000000;
	mul.rn.f32 	%f326, %f326, %f179;

BB70_20:
	mul.f32 	%f180, %f326, 0f3F22F983;
	cvt.rni.s32.f32	%r356, %f180;
	cvt.rn.f32.s32	%f181, %r356;
	neg.f32 	%f182, %f181;
	fma.rn.f32 	%f184, %f182, %f170, %f326;
	fma.rn.f32 	%f186, %f182, %f172, %f184;
	fma.rn.f32 	%f327, %f182, %f174, %f186;
	abs.f32 	%f188, %f326;
	setp.leu.f32	%p17, %f188, 0f47CE4780;
	@%p17 bra 	BB70_31;

	mov.b32 	 %r37, %f326;
	shr.u32 	%r38, %r37, 23;
	shl.b32 	%r197, %r37, 8;
	or.b32  	%r39, %r197, -2147483648;
	cvta.to.local.u64 	%rd55, %rd32;
	mov.u32 	%r348, 0;
	mov.u64 	%rd54, __cudart_i2opi_f;
	mov.u32 	%r347, -6;

BB70_22:
	.pragma "nounroll";
	ld.const.u32 	%r200, [%rd54];
	// inline asm
	{
	mad.lo.cc.u32   %r198, %r200, %r39, %r348;
	madc.hi.u32     %r348, %r200, %r39,  0;
	}
	// inline asm
	st.local.u32 	[%rd55], %r198;
	add.s64 	%rd55, %rd55, 4;
	add.s64 	%rd54, %rd54, 4;
	add.s32 	%r347, %r347, 1;
	setp.ne.s32	%p18, %r347, 0;
	@%p18 bra 	BB70_22;

	and.b32  	%r203, %r38, 255;
	add.s32 	%r204, %r203, -128;
	shr.u32 	%r205, %r204, 5;
	and.b32  	%r44, %r37, -2147483648;
	cvta.to.local.u64 	%rd40, %rd32;
	st.local.u32 	[%rd40+24], %r348;
	mov.u32 	%r206, 6;
	sub.s32 	%r207, %r206, %r205;
	mul.wide.s32 	%rd41, %r207, 4;
	add.s64 	%rd12, %rd40, %rd41;
	ld.local.u32 	%r349, [%rd12];
	ld.local.u32 	%r350, [%rd12+-4];
	and.b32  	%r47, %r38, 31;
	setp.eq.s32	%p19, %r47, 0;
	@%p19 bra 	BB70_25;

	mov.u32 	%r208, 32;
	sub.s32 	%r209, %r208, %r47;
	shr.u32 	%r210, %r350, %r209;
	shl.b32 	%r211, %r349, %r47;
	add.s32 	%r349, %r210, %r211;
	ld.local.u32 	%r212, [%rd12+-8];
	shr.u32 	%r213, %r212, %r209;
	shl.b32 	%r214, %r350, %r47;
	add.s32 	%r350, %r213, %r214;

BB70_25:
	shr.u32 	%r215, %r350, 30;
	shl.b32 	%r216, %r349, 2;
	add.s32 	%r351, %r215, %r216;
	shl.b32 	%r53, %r350, 2;
	shr.u32 	%r217, %r351, 31;
	shr.u32 	%r218, %r349, 30;
	add.s32 	%r54, %r217, %r218;
	setp.eq.s32	%p20, %r217, 0;
	@%p20 bra 	BB70_26;

	not.b32 	%r219, %r351;
	neg.s32 	%r353, %r53;
	setp.eq.s32	%p21, %r53, 0;
	selp.u32	%r220, 1, 0, %p21;
	add.s32 	%r351, %r220, %r219;
	xor.b32  	%r352, %r44, -2147483648;
	bra.uni 	BB70_28;

BB70_26:
	mov.u32 	%r352, %r44;
	mov.u32 	%r353, %r53;

BB70_28:
	neg.s32 	%r221, %r54;
	setp.eq.s32	%p22, %r44, 0;
	selp.b32	%r356, %r54, %r221, %p22;
	clz.b32 	%r355, %r351;
	setp.eq.s32	%p23, %r355, 0;
	shl.b32 	%r222, %r351, %r355;
	mov.u32 	%r223, 32;
	sub.s32 	%r224, %r223, %r355;
	shr.u32 	%r225, %r353, %r224;
	add.s32 	%r226, %r225, %r222;
	selp.b32	%r63, %r351, %r226, %p23;
	mov.u32 	%r227, -921707870;
	mul.hi.u32 	%r354, %r63, %r227;
	setp.lt.s32	%p24, %r354, 1;
	@%p24 bra 	BB70_30;

	mul.lo.s32 	%r228, %r63, -921707870;
	shr.u32 	%r229, %r228, 31;
	shl.b32 	%r230, %r354, 1;
	add.s32 	%r354, %r229, %r230;
	add.s32 	%r355, %r355, 1;

BB70_30:
	mov.u32 	%r231, 126;
	sub.s32 	%r232, %r231, %r355;
	shl.b32 	%r233, %r232, 23;
	add.s32 	%r234, %r354, 1;
	shr.u32 	%r235, %r234, 7;
	add.s32 	%r236, %r235, 1;
	shr.u32 	%r237, %r236, 1;
	add.s32 	%r238, %r237, %r233;
	or.b32  	%r239, %r238, %r352;
	mov.b32 	 %f327, %r239;

BB70_31:
	mul.rn.f32 	%f22, %f327, %f327;
	add.s32 	%r70, %r356, 1;
	and.b32  	%r71, %r70, 1;
	setp.eq.s32	%p25, %r71, 0;
	@%p25 bra 	BB70_33;

	mov.f32 	%f189, 0fBAB6061A;
	mov.f32 	%f190, 0f37CCF5CE;
	fma.rn.f32 	%f328, %f190, %f22, %f189;
	bra.uni 	BB70_34;

BB70_33:
	mov.f32 	%f191, 0f3C08839E;
	mov.f32 	%f192, 0fB94CA1F9;
	fma.rn.f32 	%f328, %f192, %f22, %f191;

BB70_34:
	@%p25 bra 	BB70_36;

	mov.f32 	%f193, 0f3D2AAAA5;
	fma.rn.f32 	%f194, %f328, %f22, %f193;
	fma.rn.f32 	%f329, %f194, %f22, %f102;
	bra.uni 	BB70_37;

BB70_36:
	mov.f32 	%f196, 0fBE2AAAA3;
	fma.rn.f32 	%f197, %f328, %f22, %f196;
	mov.f32 	%f198, 0f00000000;
	fma.rn.f32 	%f329, %f197, %f22, %f198;

BB70_37:
	fma.rn.f32 	%f330, %f329, %f327, %f327;
	@%p25 bra 	BB70_39;

	fma.rn.f32 	%f330, %f329, %f22, %f156;

BB70_39:
	and.b32  	%r240, %r70, 2;
	setp.eq.s32	%p28, %r240, 0;
	@%p28 bra 	BB70_41;

	mov.f32 	%f200, 0f00000000;
	mov.f32 	%f201, 0fBF800000;
	fma.rn.f32 	%f330, %f330, %f201, %f200;

BB70_41:
	mul.f32 	%f332, %f12, %f330;

BB70_42:
	fma.rn.f32 	%f340, %f8, %f332, %f3;

BB70_85:
	setp.geu.f32	%p54, %f1, 0f00000000;
	@%p54 bra 	BB70_87;

	mov.f32 	%f323, 0fBF800000;
	sqrt.rn.f32 	%f340, %f323;

BB70_87:
	cvta.to.global.u64 	%rd49, %rd25;
	add.s64 	%rd51, %rd49, %rd30;
	st.global.f32 	[%rd51], %f340;

BB70_88:
	ret;

BB70_56:
	mov.u32 	%r362, %r80;
	mov.u32 	%r363, %r89;

BB70_58:
	neg.s32 	%r267, %r90;
	setp.eq.s32	%p38, %r80, 0;
	selp.b32	%r366, %r90, %r267, %p38;
	clz.b32 	%r365, %r361;
	setp.eq.s32	%p39, %r365, 0;
	shl.b32 	%r268, %r361, %r365;
	mov.u32 	%r269, 32;
	sub.s32 	%r270, %r269, %r365;
	shr.u32 	%r271, %r363, %r270;
	add.s32 	%r272, %r271, %r268;
	selp.b32	%r99, %r361, %r272, %p39;
	mov.u32 	%r273, -921707870;
	mul.hi.u32 	%r364, %r99, %r273;
	setp.lt.s32	%p40, %r364, 1;
	@%p40 bra 	BB70_60;

	mul.lo.s32 	%r274, %r99, -921707870;
	shr.u32 	%r275, %r274, 31;
	shl.b32 	%r276, %r364, 1;
	add.s32 	%r364, %r275, %r276;
	add.s32 	%r365, %r365, 1;

BB70_60:
	mov.u32 	%r277, 126;
	sub.s32 	%r278, %r277, %r365;
	shl.b32 	%r279, %r278, 23;
	add.s32 	%r280, %r364, 1;
	shr.u32 	%r281, %r280, 7;
	add.s32 	%r282, %r281, 1;
	shr.u32 	%r283, %r282, 1;
	add.s32 	%r284, %r283, %r279;
	or.b32  	%r285, %r284, %r362;
	mov.b32 	 %f333, %r285;

BB70_61:
	mul.f32 	%f296, %f42, 0f3F4C422A;
	mul.f32 	%f46, %f40, %f296;
	and.b32  	%r286, %r366, 3;
	cvt.rn.f32.s32	%f297, %r286;
	add.f32 	%f298, %f333, 0fC016CBE4;
	fma.rn.f32 	%f334, %f297, 0f3FC90FDB, %f298;
	abs.f32 	%f299, %f334;
	setp.neu.f32	%p41, %f299, 0f7F800000;
	@%p41 bra 	BB70_63;

	mov.f32 	%f300, 0f00000000;
	mul.rn.f32 	%f334, %f334, %f300;

BB70_63:
	mul.f32 	%f301, %f334, 0f3F22F983;
	cvt.rni.s32.f32	%r376, %f301;
	cvt.rn.f32.s32	%f302, %r376;
	neg.f32 	%f303, %f302;
	fma.rn.f32 	%f305, %f303, %f290, %f334;
	fma.rn.f32 	%f307, %f303, %f292, %f305;
	fma.rn.f32 	%f335, %f303, %f294, %f307;
	abs.f32 	%f309, %f334;
	setp.leu.f32	%p42, %f309, 0f47CE4780;
	@%p42 bra 	BB70_74;

	mov.b32 	 %r107, %f334;
	shr.u32 	%r108, %r107, 23;
	shl.b32 	%r289, %r107, 8;
	or.b32  	%r109, %r289, -2147483648;
	cvta.to.local.u64 	%rd59, %rd32;
	mov.u32 	%r368, 0;
	mov.u64 	%rd58, __cudart_i2opi_f;
	mov.u32 	%r367, -6;

BB70_65:
	.pragma "nounroll";
	ld.const.u32 	%r292, [%rd58];
	// inline asm
	{
	mad.lo.cc.u32   %r290, %r292, %r109, %r368;
	madc.hi.u32     %r368, %r292, %r109,  0;
	}
	// inline asm
	st.local.u32 	[%rd59], %r290;
	add.s64 	%rd59, %rd59, 4;
	add.s64 	%rd58, %rd58, 4;
	add.s32 	%r367, %r367, 1;
	setp.ne.s32	%p43, %r367, 0;
	@%p43 bra 	BB70_65;

	and.b32  	%r295, %r108, 255;
	add.s32 	%r296, %r295, -128;
	shr.u32 	%r297, %r296, 5;
	and.b32  	%r114, %r107, -2147483648;
	cvta.to.local.u64 	%rd47, %rd32;
	st.local.u32 	[%rd47+24], %r368;
	mov.u32 	%r298, 6;
	sub.s32 	%r299, %r298, %r297;
	mul.wide.s32 	%rd48, %r299, 4;
	add.s64 	%rd24, %rd47, %rd48;
	ld.local.u32 	%r369, [%rd24];
	ld.local.u32 	%r370, [%rd24+-4];
	and.b32  	%r117, %r108, 31;
	setp.eq.s32	%p44, %r117, 0;
	@%p44 bra 	BB70_68;

	mov.u32 	%r300, 32;
	sub.s32 	%r301, %r300, %r117;
	shr.u32 	%r302, %r370, %r301;
	shl.b32 	%r303, %r369, %r117;
	add.s32 	%r369, %r302, %r303;
	ld.local.u32 	%r304, [%rd24+-8];
	shr.u32 	%r305, %r304, %r301;
	shl.b32 	%r306, %r370, %r117;
	add.s32 	%r370, %r305, %r306;

BB70_68:
	shr.u32 	%r307, %r370, 30;
	shl.b32 	%r308, %r369, 2;
	add.s32 	%r371, %r307, %r308;
	shl.b32 	%r123, %r370, 2;
	shr.u32 	%r309, %r371, 31;
	shr.u32 	%r310, %r369, 30;
	add.s32 	%r124, %r309, %r310;
	setp.eq.s32	%p45, %r309, 0;
	@%p45 bra 	BB70_69;

	not.b32 	%r311, %r371;
	neg.s32 	%r373, %r123;
	setp.eq.s32	%p46, %r123, 0;
	selp.u32	%r312, 1, 0, %p46;
	add.s32 	%r371, %r312, %r311;
	xor.b32  	%r372, %r114, -2147483648;
	bra.uni 	BB70_71;

BB70_69:
	mov.u32 	%r372, %r114;
	mov.u32 	%r373, %r123;

BB70_71:
	neg.s32 	%r313, %r124;
	setp.eq.s32	%p47, %r114, 0;
	selp.b32	%r376, %r124, %r313, %p47;
	clz.b32 	%r375, %r371;
	setp.eq.s32	%p48, %r375, 0;
	shl.b32 	%r314, %r371, %r375;
	mov.u32 	%r315, 32;
	sub.s32 	%r316, %r315, %r375;
	shr.u32 	%r317, %r373, %r316;
	add.s32 	%r318, %r317, %r314;
	selp.b32	%r133, %r371, %r318, %p48;
	mov.u32 	%r319, -921707870;
	mul.hi.u32 	%r374, %r133, %r319;
	setp.lt.s32	%p49, %r374, 1;
	@%p49 bra 	BB70_73;

	mul.lo.s32 	%r320, %r133, -921707870;
	shr.u32 	%r321, %r320, 31;
	shl.b32 	%r322, %r374, 1;
	add.s32 	%r374, %r321, %r322;
	add.s32 	%r375, %r375, 1;

BB70_73:
	mov.u32 	%r323, 126;
	sub.s32 	%r324, %r323, %r375;
	shl.b32 	%r325, %r324, 23;
	add.s32 	%r326, %r374, 1;
	shr.u32 	%r327, %r326, 7;
	add.s32 	%r328, %r327, 1;
	shr.u32 	%r329, %r328, 1;
	add.s32 	%r330, %r329, %r325;
	or.b32  	%r331, %r330, %r372;
	mov.b32 	 %f335, %r331;

BB70_74:
	mul.rn.f32 	%f53, %f335, %f335;
	add.s32 	%r140, %r376, 1;
	and.b32  	%r141, %r140, 1;
	setp.eq.s32	%p50, %r141, 0;
	@%p50 bra 	BB70_76;

	mov.f32 	%f310, 0fBAB6061A;
	mov.f32 	%f311, 0f37CCF5CE;
	fma.rn.f32 	%f336, %f311, %f53, %f310;
	bra.uni 	BB70_77;

BB70_76:
	mov.f32 	%f312, 0f3C08839E;
	mov.f32 	%f313, 0fB94CA1F9;
	fma.rn.f32 	%f336, %f313, %f53, %f312;

BB70_77:
	@%p50 bra 	BB70_79;

	mov.f32 	%f314, 0f3D2AAAA5;
	fma.rn.f32 	%f315, %f336, %f53, %f314;
	mov.f32 	%f316, 0fBF000000;
	fma.rn.f32 	%f337, %f315, %f53, %f316;
	bra.uni 	BB70_80;

BB70_79:
	mov.f32 	%f317, 0fBE2AAAA3;
	fma.rn.f32 	%f318, %f336, %f53, %f317;
	mov.f32 	%f319, 0f00000000;
	fma.rn.f32 	%f337, %f318, %f53, %f319;

BB70_80:
	fma.rn.f32 	%f338, %f337, %f335, %f335;
	@%p50 bra 	BB70_82;

	fma.rn.f32 	%f338, %f337, %f53, %f279;

BB70_82:
	and.b32  	%r332, %r140, 2;
	setp.eq.s32	%p53, %r332, 0;
	@%p53 bra 	BB70_84;

	mov.f32 	%f321, 0f00000000;
	mov.f32 	%f322, 0fBF800000;
	fma.rn.f32 	%f338, %f338, %f322, %f321;

BB70_84:
	mul.f32 	%f340, %f46, %f338;
	bra.uni 	BB70_85;
}

	// .globl	vec_y1f
.visible .entry vec_y1f(
	.param .u64 vec_y1f_param_0,
	.param .u64 vec_y1f_param_1,
	.param .u64 vec_y1f_param_2
)
{
	.local .align 4 .b8 	__local_depot71[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<57>;
	.reg .f32 	%f<339>;
	.reg .b32 	%r<381>;
	.reg .b64 	%rd<59>;


	mov.u64 	%rd58, __local_depot71;
	cvta.local.u64 	%SP, %rd58;
	ld.param.u64 	%rd27, [vec_y1f_param_0];
	ld.param.u64 	%rd25, [vec_y1f_param_1];
	ld.param.u64 	%rd26, [vec_y1f_param_2];
	mov.u32 	%r141, %ntid.x;
	mov.u32 	%r142, %ctaid.x;
	mov.u32 	%r143, %tid.x;
	mad.lo.s32 	%r1, %r141, %r142, %r143;
	cvt.s64.s32	%rd28, %r1;
	setp.ge.u64	%p1, %rd28, %rd27;
	@%p1 bra 	BB71_90;

	cvta.to.global.u64 	%rd29, %rd26;
	mul.wide.s32 	%rd30, %r1, 4;
	add.s64 	%rd31, %rd29, %rd30;
	add.u64 	%rd32, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd32;
	ld.global.f32 	%f1, [%rd31];
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p2, %f2, 0f00800000;
	@%p2 bra 	BB71_86;
	bra.uni 	BB71_2;

BB71_86:
	mov.f32 	%f319, 0fBF22F983;
	div.rn.f32 	%f337, %f319, %f2;
	bra.uni 	BB71_87;

BB71_2:
	setp.gtu.f32	%p3, %f2, 0f3FD96AC4;
	@%p3 bra 	BB71_44;
	bra.uni 	BB71_3;

BB71_44:
	setp.gtu.f32	%p31, %f2, 0f40740EEE;
	@%p31 bra 	BB71_46;
	bra.uni 	BB71_45;

BB71_46:
	setp.gtu.f32	%p32, %f2, 0f40E06937;
	@%p32 bra 	BB71_48;
	bra.uni 	BB71_47;

BB71_48:
	setp.gtu.f32	%p33, %f2, 0f4122C2E3;
	@%p33 bra 	BB71_50;
	bra.uni 	BB71_49;

BB71_50:
	abs.f32 	%f264, %f2;
	mov.f32 	%f337, 0f00000000;
	setp.eq.f32	%p34, %f264, 0f7F800000;
	@%p34 bra 	BB71_87;

	add.s64 	%rd14, %rd1, 24;
	// inline asm
	rcp.approx.ftz.f32 %f265,%f2;
	// inline asm
	mul.f32 	%f267, %f265, %f265;
	mov.f32 	%f268, 0fBE44AB90;
	mov.f32 	%f269, 0f3F267F60;
	fma.rn.f32 	%f270, %f269, %f267, %f268;
	mov.f32 	%f271, 0f3E3FFEBF;
	fma.rn.f32 	%f272, %f270, %f267, %f271;
	mov.f32 	%f273, 0f3F800000;
	fma.rn.f32 	%f274, %f272, %f267, %f273;
	mov.f32 	%f275, 0f3EBB73AB;
	mov.f32 	%f276, 0fBFE4E1AB;
	fma.rn.f32 	%f277, %f276, %f267, %f275;
	mov.f32 	%f278, 0fBE27FB6E;
	fma.rn.f32 	%f279, %f277, %f267, %f278;
	mov.f32 	%f280, 0f3EBFFFFF;
	fma.rn.f32 	%f281, %f279, %f267, %f280;
	fma.rn.f32 	%f38, %f281, %f265, %f2;
	rsqrt.approx.f32 	%f282, %f2;
	mul.f32 	%f283, %f282, 0f3F4C422A;
	mul.f32 	%f39, %f274, %f283;
	mul.f32 	%f284, %f38, 0f3F22F983;
	cvt.rni.s32.f32	%r370, %f284;
	cvt.rn.f32.s32	%f285, %r370;
	neg.f32 	%f286, %f285;
	mov.f32 	%f287, 0f3FC90FDA;
	fma.rn.f32 	%f288, %f286, %f287, %f38;
	mov.f32 	%f289, 0f33A22168;
	fma.rn.f32 	%f290, %f286, %f289, %f288;
	mov.f32 	%f291, 0f27C234C5;
	fma.rn.f32 	%f330, %f286, %f291, %f290;
	abs.f32 	%f292, %f38;
	setp.leu.f32	%p35, %f292, 0f47CE4780;
	@%p35 bra 	BB71_62;

	mov.b32 	 %r72, %f38;
	shr.u32 	%r73, %r72, 23;
	shl.b32 	%r247, %r72, 8;
	or.b32  	%r74, %r247, -2147483648;
	mov.u32 	%r362, 0;
	mov.u64 	%rd54, __cudart_i2opi_f;
	mov.u32 	%r361, -6;
	mov.u64 	%rd55, %rd1;

BB71_53:
	.pragma "nounroll";
	ld.const.u32 	%r250, [%rd54];
	// inline asm
	{
	mad.lo.cc.u32   %r248, %r250, %r74, %r362;
	madc.hi.u32     %r362, %r250, %r74,  0;
	}
	// inline asm
	st.local.u32 	[%rd55], %r248;
	add.s64 	%rd55, %rd55, 4;
	add.s64 	%rd54, %rd54, 4;
	add.s32 	%r361, %r361, 1;
	setp.ne.s32	%p36, %r361, 0;
	@%p36 bra 	BB71_53;

	and.b32  	%r253, %r73, 255;
	add.s32 	%r254, %r253, -128;
	shr.u32 	%r255, %r254, 5;
	and.b32  	%r79, %r72, -2147483648;
	st.local.u32 	[%rd14], %r362;
	mov.u32 	%r256, 6;
	sub.s32 	%r257, %r256, %r255;
	mul.wide.s32 	%rd44, %r257, 4;
	add.s64 	%rd19, %rd1, %rd44;
	ld.local.u32 	%r363, [%rd19];
	ld.local.u32 	%r364, [%rd19+-4];
	and.b32  	%r82, %r73, 31;
	setp.eq.s32	%p37, %r82, 0;
	@%p37 bra 	BB71_56;

	mov.u32 	%r258, 32;
	sub.s32 	%r259, %r258, %r82;
	shr.u32 	%r260, %r364, %r259;
	shl.b32 	%r261, %r363, %r82;
	add.s32 	%r363, %r260, %r261;
	ld.local.u32 	%r262, [%rd19+-8];
	shr.u32 	%r263, %r262, %r259;
	shl.b32 	%r264, %r364, %r82;
	add.s32 	%r364, %r263, %r264;

BB71_56:
	shr.u32 	%r265, %r364, 30;
	shl.b32 	%r266, %r363, 2;
	add.s32 	%r365, %r265, %r266;
	shl.b32 	%r88, %r364, 2;
	shr.u32 	%r267, %r365, 31;
	shr.u32 	%r268, %r363, 30;
	add.s32 	%r89, %r267, %r268;
	setp.eq.s32	%p38, %r267, 0;
	@%p38 bra 	BB71_57;

	not.b32 	%r269, %r365;
	neg.s32 	%r367, %r88;
	setp.eq.s32	%p39, %r88, 0;
	selp.u32	%r270, 1, 0, %p39;
	add.s32 	%r365, %r270, %r269;
	xor.b32  	%r366, %r79, -2147483648;
	bra.uni 	BB71_59;

BB71_3:
	mul.f32 	%f66, %f2, %f2;
	mov.f32 	%f67, 0fB58527DA;
	mov.f32 	%f68, 0f321462CC;
	fma.rn.f32 	%f69, %f68, %f66, %f67;
	mov.f32 	%f70, 0f38963E95;
	fma.rn.f32 	%f71, %f69, %f66, %f70;
	mov.f32 	%f72, 0fBB41ADCB;
	fma.rn.f32 	%f73, %f71, %f66, %f72;
	mov.f32 	%f74, 0f3D5E9CBB;
	fma.rn.f32 	%f75, %f73, %f66, %f74;
	mov.f32 	%f76, 0fBE48C331;
	fma.rn.f32 	%f3, %f75, %f66, %f76;
	mov.b32 	 %r144, %f2;
	add.s32 	%r145, %r144, -1059760811;
	and.b32  	%r146, %r145, -8388608;
	sub.s32 	%r147, %r144, %r146;
	mov.b32 	 %f77, %r147;
	cvt.rn.f32.s32	%f78, %r146;
	mov.f32 	%f329, 0f00000000;
	mov.f32 	%f80, 0f34000000;
	fma.rn.f32 	%f81, %f78, %f80, %f329;
	add.f32 	%f82, %f77, 0fBF800000;
	mov.f32 	%f83, 0f3E1039F6;
	mov.f32 	%f84, 0fBE055027;
	fma.rn.f32 	%f85, %f84, %f82, %f83;
	mov.f32 	%f86, 0fBDF8CDCC;
	fma.rn.f32 	%f87, %f85, %f82, %f86;
	mov.f32 	%f88, 0f3E0F2955;
	fma.rn.f32 	%f89, %f87, %f82, %f88;
	mov.f32 	%f90, 0fBE2AD8B9;
	fma.rn.f32 	%f91, %f89, %f82, %f90;
	mov.f32 	%f92, 0f3E4CED0B;
	fma.rn.f32 	%f93, %f91, %f82, %f92;
	mov.f32 	%f94, 0fBE7FFF22;
	fma.rn.f32 	%f95, %f93, %f82, %f94;
	mov.f32 	%f96, 0f3EAAAA78;
	fma.rn.f32 	%f97, %f95, %f82, %f96;
	mov.f32 	%f98, 0fBF000000;
	fma.rn.f32 	%f99, %f97, %f82, %f98;
	mul.f32 	%f100, %f82, %f99;
	fma.rn.f32 	%f101, %f100, %f82, %f82;
	mov.f32 	%f102, 0f3F317218;
	fma.rn.f32 	%f321, %f81, %f102, %f101;
	setp.lt.u32	%p4, %r144, 2139095040;
	@%p4 bra 	BB71_5;

	mov.f32 	%f103, 0f7F800000;
	fma.rn.f32 	%f321, %f2, %f103, %f103;

BB71_5:
	abs.f32 	%f7, %f2;
	setp.gtu.f32	%p5, %f7, 0f40FB3333;
	@%p5 bra 	BB71_7;
	bra.uni 	BB71_6;

BB71_7:
	abs.f32 	%f136, %f7;
	setp.eq.f32	%p6, %f136, 0f7F800000;
	@%p6 bra 	BB71_43;

	// inline asm
	rcp.approx.ftz.f32 %f137,%f7;
	// inline asm
	mul.f32 	%f139, %f137, %f137;
	mov.f32 	%f140, 0f3F3FF7E9;
	mov.f32 	%f141, 0fC082CB37;
	fma.rn.f32 	%f142, %f141, %f139, %f140;
	mov.f32 	%f143, 0fBE458BAE;
	fma.rn.f32 	%f144, %f142, %f139, %f143;
	mov.f32 	%f145, 0f3E3FFF8B;
	fma.rn.f32 	%f146, %f144, %f139, %f145;
	mov.f32 	%f147, 0f3F800000;
	fma.rn.f32 	%f148, %f146, %f139, %f147;
	mov.f32 	%f149, 0f3EB914AD;
	mov.f32 	%f150, 0fBFCA3BA2;
	fma.rn.f32 	%f151, %f150, %f139, %f149;
	mov.f32 	%f152, 0fBE27F2EC;
	fma.rn.f32 	%f153, %f151, %f139, %f152;
	mov.f32 	%f154, 0f3EBFFFFD;
	fma.rn.f32 	%f155, %f153, %f139, %f154;
	fma.rn.f32 	%f9, %f155, %f137, %f7;
	rsqrt.approx.f32 	%f156, %f7;
	mul.f32 	%f157, %f156, 0f3F4C422A;
	mul.f32 	%f10, %f148, %f157;
	mul.f32 	%f158, %f9, 0f3F22F983;
	cvt.rni.s32.f32	%r350, %f158;
	cvt.rn.f32.s32	%f159, %r350;
	neg.f32 	%f160, %f159;
	mov.f32 	%f161, 0f3FC90FDA;
	fma.rn.f32 	%f162, %f160, %f161, %f9;
	mov.f32 	%f163, 0f33A22168;
	fma.rn.f32 	%f164, %f160, %f163, %f162;
	mov.f32 	%f165, 0f27C234C5;
	fma.rn.f32 	%f322, %f160, %f165, %f164;
	abs.f32 	%f166, %f9;
	setp.leu.f32	%p7, %f166, 0f47CE4780;
	@%p7 bra 	BB71_19;

	mov.b32 	 %r3, %f9;
	shl.b32 	%r150, %r3, 8;
	or.b32  	%r4, %r150, -2147483648;
	cvta.to.local.u64 	%rd51, %rd32;
	mov.u32 	%r342, 0;
	mov.u64 	%rd50, __cudart_i2opi_f;
	mov.u32 	%r341, -6;

BB71_10:
	.pragma "nounroll";
	ld.const.u32 	%r153, [%rd50];
	// inline asm
	{
	mad.lo.cc.u32   %r151, %r153, %r4, %r342;
	madc.hi.u32     %r342, %r153, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd51], %r151;
	add.s64 	%rd51, %rd51, 4;
	add.s64 	%rd50, %rd50, 4;
	add.s32 	%r341, %r341, 1;
	setp.ne.s32	%p8, %r341, 0;
	@%p8 bra 	BB71_10;

	bfe.u32 	%r156, %r3, 23, 8;
	add.s32 	%r157, %r156, -128;
	shr.u32 	%r158, %r157, 5;
	and.b32  	%r9, %r3, -2147483648;
	cvta.to.local.u64 	%rd36, %rd32;
	st.local.u32 	[%rd36+24], %r342;
	bfe.u32 	%r10, %r3, 23, 5;
	mov.u32 	%r159, 6;
	sub.s32 	%r160, %r159, %r158;
	mul.wide.s32 	%rd37, %r160, 4;
	add.s64 	%rd7, %rd36, %rd37;
	ld.local.u32 	%r343, [%rd7];
	ld.local.u32 	%r344, [%rd7+-4];
	setp.eq.s32	%p9, %r10, 0;
	@%p9 bra 	BB71_13;

	mov.u32 	%r161, 32;
	sub.s32 	%r162, %r161, %r10;
	shr.u32 	%r163, %r344, %r162;
	shl.b32 	%r164, %r343, %r10;
	add.s32 	%r343, %r163, %r164;
	ld.local.u32 	%r165, [%rd7+-8];
	shr.u32 	%r166, %r165, %r162;
	shl.b32 	%r167, %r344, %r10;
	add.s32 	%r344, %r166, %r167;

BB71_13:
	shr.u32 	%r168, %r344, 30;
	shl.b32 	%r169, %r343, 2;
	add.s32 	%r345, %r168, %r169;
	shl.b32 	%r18, %r344, 2;
	shr.u32 	%r170, %r345, 31;
	shr.u32 	%r171, %r343, 30;
	add.s32 	%r19, %r170, %r171;
	setp.eq.s32	%p10, %r170, 0;
	@%p10 bra 	BB71_14;

	not.b32 	%r172, %r345;
	neg.s32 	%r347, %r18;
	setp.eq.s32	%p11, %r18, 0;
	selp.u32	%r173, 1, 0, %p11;
	add.s32 	%r345, %r173, %r172;
	xor.b32  	%r346, %r9, -2147483648;
	bra.uni 	BB71_16;

BB71_45:
	add.f32 	%f202, %f2, 0fC00C9DF7;
	add.f32 	%f203, %f202, 0f33B200DC;
	mov.f32 	%f204, 0f39064A88;
	mov.f32 	%f205, 0fB789E29D;
	fma.rn.f32 	%f206, %f205, %f203, %f204;
	mov.f32 	%f207, 0fB9F0AB0D;
	fma.rn.f32 	%f208, %f206, %f203, %f207;
	mov.f32 	%f209, 0f3A8F6102;
	fma.rn.f32 	%f210, %f208, %f203, %f209;
	mov.f32 	%f211, 0fBB2C7045;
	fma.rn.f32 	%f212, %f210, %f203, %f211;
	mov.f32 	%f213, 0f3BF35DF7;
	fma.rn.f32 	%f214, %f212, %f203, %f213;
	mov.f32 	%f215, 0fBB9D097C;
	fma.rn.f32 	%f216, %f214, %f203, %f215;
	mov.f32 	%f217, 0fBD06968A;
	fma.rn.f32 	%f218, %f216, %f203, %f217;
	mov.f32 	%f219, 0fBDF2B7DF;
	fma.rn.f32 	%f220, %f218, %f203, %f219;
	mov.f32 	%f221, 0f3F055242;
	fma.rn.f32 	%f222, %f220, %f203, %f221;
	mul.f32 	%f337, %f203, %f222;
	bra.uni 	BB71_87;

BB71_6:
	add.f32 	%f104, %f7, 0fC0753AAC;
	add.f32 	%f105, %f104, 0f33A5090F;
	mov.f32 	%f106, 0f2B81BF42;
	mov.f32 	%f107, 0f29AF3463;
	fma.rn.f32 	%f108, %f107, %f105, %f106;
	mov.f32 	%f109, 0fADE21EC1;
	fma.rn.f32 	%f110, %f108, %f105, %f109;
	mov.f32 	%f111, 0fAF5DDEFF;
	fma.rn.f32 	%f112, %f110, %f105, %f111;
	mov.f32 	%f113, 0f319B0C9D;
	fma.rn.f32 	%f114, %f112, %f105, %f113;
	mov.f32 	%f115, 0f32E81173;
	fma.rn.f32 	%f116, %f114, %f105, %f115;
	mov.f32 	%f117, 0fB50F8DC8;
	fma.rn.f32 	%f118, %f116, %f105, %f117;
	mov.f32 	%f119, 0fB61E653D;
	fma.rn.f32 	%f120, %f118, %f105, %f119;
	mov.f32 	%f121, 0f382CD9C5;
	fma.rn.f32 	%f122, %f120, %f105, %f121;
	mov.f32 	%f123, 0f38F9EB10;
	fma.rn.f32 	%f124, %f122, %f105, %f123;
	mov.f32 	%f125, 0fBAECEB9C;
	fma.rn.f32 	%f126, %f124, %f105, %f125;
	mov.f32 	%f127, 0fBB276FFD;
	fma.rn.f32 	%f128, %f126, %f105, %f127;
	mov.f32 	%f129, 0f3D073993;
	fma.rn.f32 	%f130, %f128, %f105, %f129;
	add.f32 	%f131, %f7, 0fC0E07FB0;
	add.f32 	%f132, %f131, 0f3444B8DB;
	mul.f32 	%f133, %f132, %f130;
	mul.f32 	%f134, %f105, %f133;
	mul.f32 	%f329, %f7, %f134;
	bra.uni 	BB71_43;

BB71_47:
	add.f32 	%f223, %f2, 0fC0ADBFF2;
	add.f32 	%f224, %f223, 0fB4687B03;
	mov.f32 	%f225, 0fB508A416;
	mov.f32 	%f226, 0f32BE57D0;
	fma.rn.f32 	%f227, %f226, %f224, %f225;
	mov.f32 	%f228, 0fB63F8A14;
	fma.rn.f32 	%f229, %f227, %f224, %f228;
	mov.f32 	%f230, 0f38427E02;
	fma.rn.f32 	%f231, %f229, %f224, %f230;
	mov.f32 	%f232, 0f3919BB1C;
	fma.rn.f32 	%f233, %f231, %f224, %f232;
	mov.f32 	%f234, 0fBB0DF1FD;
	fma.rn.f32 	%f235, %f233, %f224, %f234;
	mov.f32 	%f236, 0fBB885189;
	fma.rn.f32 	%f237, %f235, %f224, %f236;
	mov.f32 	%f238, 0f3D50AEC1;
	fma.rn.f32 	%f239, %f237, %f224, %f238;
	mov.f32 	%f240, 0f3D005CFC;
	fma.rn.f32 	%f241, %f239, %f224, %f240;
	mov.f32 	%f242, 0fBEAE3E2B;
	fma.rn.f32 	%f243, %f241, %f224, %f242;
	mul.f32 	%f337, %f224, %f243;
	bra.uni 	BB71_87;

BB71_49:
	add.f32 	%f244, %f2, 0fC109893D;
	add.f32 	%f245, %f244, 0fB4E6169B;
	mov.f32 	%f246, 0f3602902E;
	mov.f32 	%f247, 0f350CF383;
	fma.rn.f32 	%f248, %f247, %f245, %f246;
	mov.f32 	%f249, 0fB8375F71;
	fma.rn.f32 	%f250, %f248, %f245, %f249;
	mov.f32 	%f251, 0fB8D9FAA8;
	fma.rn.f32 	%f252, %f250, %f245, %f251;
	mov.f32 	%f253, 0f3B03D19A;
	fma.rn.f32 	%f254, %f252, %f245, %f253;
	mov.f32 	%f255, 0f3B1E736D;
	fma.rn.f32 	%f256, %f254, %f245, %f255;
	mov.f32 	%f257, 0fBD31CAE5;
	fma.rn.f32 	%f258, %f256, %f245, %f257;
	mov.f32 	%f259, 0fBC8159B6;
	fma.rn.f32 	%f260, %f258, %f245, %f259;
	mov.f32 	%f261, 0f3E8AFCCA;
	fma.rn.f32 	%f262, %f260, %f245, %f261;
	mul.f32 	%f337, %f245, %f262;
	bra.uni 	BB71_87;

BB71_14:
	mov.u32 	%r346, %r9;
	mov.u32 	%r347, %r18;

BB71_16:
	neg.s32 	%r174, %r19;
	setp.eq.s32	%p12, %r9, 0;
	selp.b32	%r350, %r19, %r174, %p12;
	clz.b32 	%r349, %r345;
	setp.eq.s32	%p13, %r349, 0;
	shl.b32 	%r175, %r345, %r349;
	mov.u32 	%r176, 32;
	sub.s32 	%r177, %r176, %r349;
	shr.u32 	%r178, %r347, %r177;
	add.s32 	%r179, %r178, %r175;
	selp.b32	%r28, %r345, %r179, %p13;
	mov.u32 	%r180, -921707870;
	mul.hi.u32 	%r348, %r28, %r180;
	setp.lt.s32	%p14, %r348, 1;
	@%p14 bra 	BB71_18;

	mul.lo.s32 	%r181, %r28, -921707870;
	shr.u32 	%r182, %r181, 31;
	shl.b32 	%r183, %r348, 1;
	add.s32 	%r348, %r182, %r183;
	add.s32 	%r349, %r349, 1;

BB71_18:
	mov.u32 	%r184, 126;
	sub.s32 	%r185, %r184, %r349;
	shl.b32 	%r186, %r185, 23;
	add.s32 	%r187, %r348, 1;
	shr.u32 	%r188, %r187, 7;
	add.s32 	%r189, %r188, 1;
	shr.u32 	%r190, %r189, 1;
	add.s32 	%r191, %r190, %r186;
	or.b32  	%r192, %r191, %r346;
	mov.b32 	 %f322, %r192;

BB71_19:
	and.b32  	%r193, %r350, 3;
	cvt.rn.f32.s32	%f167, %r193;
	add.f32 	%f168, %f322, 0fC016CBE4;
	fma.rn.f32 	%f323, %f167, 0f3FC90FDB, %f168;
	abs.f32 	%f169, %f323;
	setp.neu.f32	%p15, %f169, 0f7F800000;
	@%p15 bra 	BB71_21;

	mov.f32 	%f170, 0f00000000;
	mul.rn.f32 	%f323, %f323, %f170;

BB71_21:
	mul.f32 	%f171, %f323, 0f3F22F983;
	cvt.rni.s32.f32	%r360, %f171;
	cvt.rn.f32.s32	%f172, %r360;
	neg.f32 	%f173, %f172;
	fma.rn.f32 	%f175, %f173, %f161, %f323;
	fma.rn.f32 	%f177, %f173, %f163, %f175;
	fma.rn.f32 	%f324, %f173, %f165, %f177;
	abs.f32 	%f179, %f323;
	setp.leu.f32	%p16, %f179, 0f47CE4780;
	@%p16 bra 	BB71_32;

	mov.b32 	 %r36, %f323;
	shr.u32 	%r37, %r36, 23;
	shl.b32 	%r196, %r36, 8;
	or.b32  	%r38, %r196, -2147483648;
	cvta.to.local.u64 	%rd53, %rd32;
	mov.u32 	%r352, 0;
	mov.u64 	%rd52, __cudart_i2opi_f;
	mov.u32 	%r351, -6;

BB71_23:
	.pragma "nounroll";
	ld.const.u32 	%r199, [%rd52];
	// inline asm
	{
	mad.lo.cc.u32   %r197, %r199, %r38, %r352;
	madc.hi.u32     %r352, %r199, %r38,  0;
	}
	// inline asm
	st.local.u32 	[%rd53], %r197;
	add.s64 	%rd53, %rd53, 4;
	add.s64 	%rd52, %rd52, 4;
	add.s32 	%r351, %r351, 1;
	setp.ne.s32	%p17, %r351, 0;
	@%p17 bra 	BB71_23;

	and.b32  	%r202, %r37, 255;
	add.s32 	%r203, %r202, -128;
	shr.u32 	%r204, %r203, 5;
	and.b32  	%r43, %r36, -2147483648;
	cvta.to.local.u64 	%rd41, %rd32;
	st.local.u32 	[%rd41+24], %r352;
	mov.u32 	%r205, 6;
	sub.s32 	%r206, %r205, %r204;
	mul.wide.s32 	%rd42, %r206, 4;
	add.s64 	%rd13, %rd41, %rd42;
	ld.local.u32 	%r353, [%rd13];
	ld.local.u32 	%r354, [%rd13+-4];
	and.b32  	%r46, %r37, 31;
	setp.eq.s32	%p18, %r46, 0;
	@%p18 bra 	BB71_26;

	mov.u32 	%r207, 32;
	sub.s32 	%r208, %r207, %r46;
	shr.u32 	%r209, %r354, %r208;
	shl.b32 	%r210, %r353, %r46;
	add.s32 	%r353, %r209, %r210;
	ld.local.u32 	%r211, [%rd13+-8];
	shr.u32 	%r212, %r211, %r208;
	shl.b32 	%r213, %r354, %r46;
	add.s32 	%r354, %r212, %r213;

BB71_26:
	shr.u32 	%r214, %r354, 30;
	shl.b32 	%r215, %r353, 2;
	add.s32 	%r355, %r214, %r215;
	shl.b32 	%r52, %r354, 2;
	shr.u32 	%r216, %r355, 31;
	shr.u32 	%r217, %r353, 30;
	add.s32 	%r53, %r216, %r217;
	setp.eq.s32	%p19, %r216, 0;
	@%p19 bra 	BB71_27;

	not.b32 	%r218, %r355;
	neg.s32 	%r357, %r52;
	setp.eq.s32	%p20, %r52, 0;
	selp.u32	%r219, 1, 0, %p20;
	add.s32 	%r355, %r219, %r218;
	xor.b32  	%r356, %r43, -2147483648;
	bra.uni 	BB71_29;

BB71_27:
	mov.u32 	%r356, %r43;
	mov.u32 	%r357, %r52;

BB71_29:
	neg.s32 	%r220, %r53;
	setp.eq.s32	%p21, %r43, 0;
	selp.b32	%r360, %r53, %r220, %p21;
	clz.b32 	%r359, %r355;
	setp.eq.s32	%p22, %r359, 0;
	shl.b32 	%r221, %r355, %r359;
	mov.u32 	%r222, 32;
	sub.s32 	%r223, %r222, %r359;
	shr.u32 	%r224, %r357, %r223;
	add.s32 	%r225, %r224, %r221;
	selp.b32	%r62, %r355, %r225, %p22;
	mov.u32 	%r226, -921707870;
	mul.hi.u32 	%r358, %r62, %r226;
	setp.lt.s32	%p23, %r358, 1;
	@%p23 bra 	BB71_31;

	mul.lo.s32 	%r227, %r62, -921707870;
	shr.u32 	%r228, %r227, 31;
	shl.b32 	%r229, %r358, 1;
	add.s32 	%r358, %r228, %r229;
	add.s32 	%r359, %r359, 1;

BB71_31:
	mov.u32 	%r230, 126;
	sub.s32 	%r231, %r230, %r359;
	shl.b32 	%r232, %r231, 23;
	add.s32 	%r233, %r358, 1;
	shr.u32 	%r234, %r233, 7;
	add.s32 	%r235, %r234, 1;
	shr.u32 	%r236, %r235, 1;
	add.s32 	%r237, %r236, %r232;
	or.b32  	%r238, %r237, %r356;
	mov.b32 	 %f324, %r238;

BB71_32:
	mul.rn.f32 	%f20, %f324, %f324;
	add.s32 	%r69, %r360, 1;
	and.b32  	%r70, %r69, 1;
	setp.eq.s32	%p24, %r70, 0;
	@%p24 bra 	BB71_34;

	mov.f32 	%f180, 0fBAB6061A;
	mov.f32 	%f181, 0f37CCF5CE;
	fma.rn.f32 	%f325, %f181, %f20, %f180;
	bra.uni 	BB71_35;

BB71_34:
	mov.f32 	%f182, 0f3C08839E;
	mov.f32 	%f183, 0fB94CA1F9;
	fma.rn.f32 	%f325, %f183, %f20, %f182;

BB71_35:
	@%p24 bra 	BB71_37;

	mov.f32 	%f184, 0f3D2AAAA5;
	fma.rn.f32 	%f185, %f325, %f20, %f184;
	fma.rn.f32 	%f326, %f185, %f20, %f98;
	bra.uni 	BB71_38;

BB71_37:
	mov.f32 	%f187, 0fBE2AAAA3;
	fma.rn.f32 	%f188, %f325, %f20, %f187;
	mov.f32 	%f189, 0f00000000;
	fma.rn.f32 	%f326, %f188, %f20, %f189;

BB71_38:
	fma.rn.f32 	%f327, %f326, %f324, %f324;
	@%p24 bra 	BB71_40;

	fma.rn.f32 	%f327, %f326, %f20, %f147;

BB71_40:
	and.b32  	%r239, %r69, 2;
	setp.eq.s32	%p27, %r239, 0;
	@%p27 bra 	BB71_42;

	mov.f32 	%f191, 0f00000000;
	mov.f32 	%f192, 0fBF800000;
	fma.rn.f32 	%f327, %f327, %f192, %f191;

BB71_42:
	mul.f32 	%f329, %f10, %f327;

BB71_43:
	setp.eq.f32	%p28, %f2, 0f00000000;
	selp.f32	%f193, 0fFF800000, %f321, %p28;
	neg.f32 	%f194, %f329;
	setp.lt.f32	%p29, %f2, 0f00000000;
	selp.f32	%f195, %f194, %f329, %p29;
	and.b32  	%r241, %r144, -2147483648;
	mov.b32 	 %r242, %f195;
	and.b32  	%r243, %r242, 2147483647;
	or.b32  	%r244, %r243, %r241;
	mov.b32 	 %f196, %r244;
	setp.lt.f32	%p30, %f7, 0f0DA24260;
	selp.f32	%f197, %f196, %f195, %p30;
	mov.f32 	%f198, 0fBF800000;
	div.rn.f32 	%f199, %f198, %f2;
	fma.rn.f32 	%f200, %f193, %f197, %f199;
	mul.f32 	%f201, %f200, 0f3F22F983;
	fma.rn.f32 	%f337, %f2, %f3, %f201;

BB71_87:
	setp.geu.f32	%p56, %f1, 0f00000000;
	@%p56 bra 	BB71_89;

	mov.f32 	%f320, 0fBF800000;
	sqrt.rn.f32 	%f337, %f320;

BB71_89:
	cvta.to.global.u64 	%rd47, %rd25;
	add.s64 	%rd49, %rd47, %rd30;
	st.global.f32 	[%rd49], %f337;

BB71_90:
	ret;

BB71_57:
	mov.u32 	%r366, %r79;
	mov.u32 	%r367, %r88;

BB71_59:
	neg.s32 	%r271, %r89;
	setp.eq.s32	%p40, %r79, 0;
	selp.b32	%r370, %r89, %r271, %p40;
	clz.b32 	%r369, %r365;
	setp.eq.s32	%p41, %r369, 0;
	shl.b32 	%r272, %r365, %r369;
	mov.u32 	%r273, 32;
	sub.s32 	%r274, %r273, %r369;
	shr.u32 	%r275, %r367, %r274;
	add.s32 	%r276, %r275, %r272;
	selp.b32	%r98, %r365, %r276, %p41;
	mov.u32 	%r277, -921707870;
	mul.hi.u32 	%r368, %r98, %r277;
	setp.lt.s32	%p42, %r368, 1;
	@%p42 bra 	BB71_61;

	mul.lo.s32 	%r278, %r98, -921707870;
	shr.u32 	%r279, %r278, 31;
	shl.b32 	%r280, %r368, 1;
	add.s32 	%r368, %r279, %r280;
	add.s32 	%r369, %r369, 1;

BB71_61:
	mov.u32 	%r281, 126;
	sub.s32 	%r282, %r281, %r369;
	shl.b32 	%r283, %r282, 23;
	add.s32 	%r284, %r368, 1;
	shr.u32 	%r285, %r284, 7;
	add.s32 	%r286, %r285, 1;
	shr.u32 	%r287, %r286, 1;
	add.s32 	%r288, %r287, %r283;
	or.b32  	%r289, %r288, %r366;
	mov.b32 	 %f330, %r289;

BB71_62:
	and.b32  	%r290, %r370, 3;
	cvt.rn.f32.s32	%f293, %r290;
	add.f32 	%f294, %f330, 0fC07B53D1;
	fma.rn.f32 	%f331, %f293, 0f3FC90FDB, %f294;
	abs.f32 	%f295, %f331;
	setp.neu.f32	%p43, %f295, 0f7F800000;
	@%p43 bra 	BB71_64;

	mov.f32 	%f296, 0f00000000;
	mul.rn.f32 	%f331, %f331, %f296;

BB71_64:
	mul.f32 	%f297, %f331, 0f3F22F983;
	cvt.rni.s32.f32	%r380, %f297;
	cvt.rn.f32.s32	%f298, %r380;
	neg.f32 	%f299, %f298;
	fma.rn.f32 	%f301, %f299, %f287, %f331;
	fma.rn.f32 	%f303, %f299, %f289, %f301;
	fma.rn.f32 	%f332, %f299, %f291, %f303;
	abs.f32 	%f305, %f331;
	setp.leu.f32	%p44, %f305, 0f47CE4780;
	@%p44 bra 	BB71_75;

	mov.b32 	 %r106, %f331;
	shr.u32 	%r107, %r106, 23;
	shl.b32 	%r293, %r106, 8;
	or.b32  	%r108, %r293, -2147483648;
	mov.u32 	%r372, 0;
	mov.u64 	%rd56, __cudart_i2opi_f;
	mov.u32 	%r371, -6;
	mov.u64 	%rd57, %rd1;

BB71_66:
	.pragma "nounroll";
	ld.const.u32 	%r296, [%rd56];
	// inline asm
	{
	mad.lo.cc.u32   %r294, %r296, %r108, %r372;
	madc.hi.u32     %r372, %r296, %r108,  0;
	}
	// inline asm
	st.local.u32 	[%rd57], %r294;
	add.s64 	%rd57, %rd57, 4;
	add.s64 	%rd56, %rd56, 4;
	add.s32 	%r371, %r371, 1;
	setp.ne.s32	%p45, %r371, 0;
	@%p45 bra 	BB71_66;

	and.b32  	%r299, %r107, 255;
	add.s32 	%r300, %r299, -128;
	shr.u32 	%r301, %r300, 5;
	and.b32  	%r113, %r106, -2147483648;
	st.local.u32 	[%rd14], %r372;
	mov.u32 	%r302, 6;
	sub.s32 	%r303, %r302, %r301;
	mul.wide.s32 	%rd46, %r303, 4;
	add.s64 	%rd24, %rd1, %rd46;
	ld.local.u32 	%r373, [%rd24];
	ld.local.u32 	%r374, [%rd24+-4];
	and.b32  	%r116, %r107, 31;
	setp.eq.s32	%p46, %r116, 0;
	@%p46 bra 	BB71_69;

	mov.u32 	%r304, 32;
	sub.s32 	%r305, %r304, %r116;
	shr.u32 	%r306, %r374, %r305;
	shl.b32 	%r307, %r373, %r116;
	add.s32 	%r373, %r306, %r307;
	ld.local.u32 	%r308, [%rd24+-8];
	shr.u32 	%r309, %r308, %r305;
	shl.b32 	%r310, %r374, %r116;
	add.s32 	%r374, %r309, %r310;

BB71_69:
	shr.u32 	%r311, %r374, 30;
	shl.b32 	%r312, %r373, 2;
	add.s32 	%r375, %r311, %r312;
	shl.b32 	%r122, %r374, 2;
	shr.u32 	%r313, %r375, 31;
	shr.u32 	%r314, %r373, 30;
	add.s32 	%r123, %r313, %r314;
	setp.eq.s32	%p47, %r313, 0;
	@%p47 bra 	BB71_70;

	not.b32 	%r315, %r375;
	neg.s32 	%r377, %r122;
	setp.eq.s32	%p48, %r122, 0;
	selp.u32	%r316, 1, 0, %p48;
	add.s32 	%r375, %r316, %r315;
	xor.b32  	%r376, %r113, -2147483648;
	bra.uni 	BB71_72;

BB71_70:
	mov.u32 	%r376, %r113;
	mov.u32 	%r377, %r122;

BB71_72:
	neg.s32 	%r317, %r123;
	setp.eq.s32	%p49, %r113, 0;
	selp.b32	%r380, %r123, %r317, %p49;
	clz.b32 	%r379, %r375;
	setp.eq.s32	%p50, %r379, 0;
	shl.b32 	%r318, %r375, %r379;
	mov.u32 	%r319, 32;
	sub.s32 	%r320, %r319, %r379;
	shr.u32 	%r321, %r377, %r320;
	add.s32 	%r322, %r321, %r318;
	selp.b32	%r132, %r375, %r322, %p50;
	mov.u32 	%r323, -921707870;
	mul.hi.u32 	%r378, %r132, %r323;
	setp.lt.s32	%p51, %r378, 1;
	@%p51 bra 	BB71_74;

	mul.lo.s32 	%r324, %r132, -921707870;
	shr.u32 	%r325, %r324, 31;
	shl.b32 	%r326, %r378, 1;
	add.s32 	%r378, %r325, %r326;
	add.s32 	%r379, %r379, 1;

BB71_74:
	mov.u32 	%r327, 126;
	sub.s32 	%r328, %r327, %r379;
	shl.b32 	%r329, %r328, 23;
	add.s32 	%r330, %r378, 1;
	shr.u32 	%r331, %r330, 7;
	add.s32 	%r332, %r331, 1;
	shr.u32 	%r333, %r332, 1;
	add.s32 	%r334, %r333, %r329;
	or.b32  	%r335, %r334, %r376;
	mov.b32 	 %f332, %r335;

BB71_75:
	mul.rn.f32 	%f49, %f332, %f332;
	add.s32 	%r139, %r380, 1;
	and.b32  	%r140, %r139, 1;
	setp.eq.s32	%p52, %r140, 0;
	@%p52 bra 	BB71_77;

	mov.f32 	%f306, 0fBAB6061A;
	mov.f32 	%f307, 0f37CCF5CE;
	fma.rn.f32 	%f333, %f307, %f49, %f306;
	bra.uni 	BB71_78;

BB71_77:
	mov.f32 	%f308, 0f3C08839E;
	mov.f32 	%f309, 0fB94CA1F9;
	fma.rn.f32 	%f333, %f309, %f49, %f308;

BB71_78:
	@%p52 bra 	BB71_80;

	mov.f32 	%f310, 0f3D2AAAA5;
	fma.rn.f32 	%f311, %f333, %f49, %f310;
	mov.f32 	%f312, 0fBF000000;
	fma.rn.f32 	%f334, %f311, %f49, %f312;
	bra.uni 	BB71_81;

BB71_80:
	mov.f32 	%f313, 0fBE2AAAA3;
	fma.rn.f32 	%f314, %f333, %f49, %f313;
	mov.f32 	%f315, 0f00000000;
	fma.rn.f32 	%f334, %f314, %f49, %f315;

BB71_81:
	fma.rn.f32 	%f335, %f334, %f332, %f332;
	@%p52 bra 	BB71_83;

	fma.rn.f32 	%f335, %f334, %f49, %f273;

BB71_83:
	and.b32  	%r336, %r139, 2;
	setp.eq.s32	%p55, %r336, 0;
	@%p55 bra 	BB71_85;

	mov.f32 	%f317, 0f00000000;
	mov.f32 	%f318, 0fBF800000;
	fma.rn.f32 	%f335, %f335, %f318, %f317;

BB71_85:
	mul.f32 	%f337, %f39, %f335;
	bra.uni 	BB71_87;
}

	// .globl	vec_copysignf
.visible .entry vec_copysignf(
	.param .u64 vec_copysignf_param_0,
	.param .u64 vec_copysignf_param_1,
	.param .u64 vec_copysignf_param_2,
	.param .u64 vec_copysignf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_copysignf_param_0];
	ld.param.u64 	%rd1, [vec_copysignf_param_1];
	ld.param.u64 	%rd2, [vec_copysignf_param_2];
	ld.param.u64 	%rd3, [vec_copysignf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB72_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.u32 	%r5, [%rd10];
	and.b32  	%r6, %r5, -2147483648;
	ld.global.u32 	%r7, [%rd8];
	and.b32  	%r8, %r7, 2147483647;
	or.b32  	%r9, %r6, %r8;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.u32 	[%rd12], %r9;

BB72_2:
	ret;
}

	// .globl	vec_fdimf
.visible .entry vec_fdimf(
	.param .u64 vec_fdimf_param_0,
	.param .u64 vec_fdimf_param_1,
	.param .u64 vec_fdimf_param_2,
	.param .u64 vec_fdimf_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_fdimf_param_0];
	ld.param.u64 	%rd1, [vec_fdimf_param_1];
	ld.param.u64 	%rd2, [vec_fdimf_param_2];
	ld.param.u64 	%rd3, [vec_fdimf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB73_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	sub.f32 	%f3, %f2, %f1;
	setp.gtu.f32	%p2, %f2, %f1;
	selp.f32	%f4, %f3, 0f00000000, %p2;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f4;

BB73_2:
	ret;
}

	// .globl	vec_fdividef
.visible .entry vec_fdividef(
	.param .u64 vec_fdividef_param_0,
	.param .u64 vec_fdividef_param_1,
	.param .u64 vec_fdividef_param_2,
	.param .u64 vec_fdividef_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_fdividef_param_0];
	ld.param.u64 	%rd1, [vec_fdividef_param_1];
	ld.param.u64 	%rd2, [vec_fdividef_param_2];
	ld.param.u64 	%rd3, [vec_fdividef_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB74_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f3;

BB74_2:
	ret;
}

	// .globl	vec_fmaxf
.visible .entry vec_fmaxf(
	.param .u64 vec_fmaxf_param_0,
	.param .u64 vec_fmaxf_param_1,
	.param .u64 vec_fmaxf_param_2,
	.param .u64 vec_fmaxf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_fmaxf_param_0];
	ld.param.u64 	%rd1, [vec_fmaxf_param_1];
	ld.param.u64 	%rd2, [vec_fmaxf_param_2];
	ld.param.u64 	%rd3, [vec_fmaxf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB75_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	max.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f3;

BB75_2:
	ret;
}

	// .globl	vec_fminf
.visible .entry vec_fminf(
	.param .u64 vec_fminf_param_0,
	.param .u64 vec_fminf_param_1,
	.param .u64 vec_fminf_param_2,
	.param .u64 vec_fminf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_fminf_param_0];
	ld.param.u64 	%rd1, [vec_fminf_param_1];
	ld.param.u64 	%rd2, [vec_fminf_param_2];
	ld.param.u64 	%rd3, [vec_fminf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB76_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	min.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f3;

BB76_2:
	ret;
}

	// .globl	vec_fmodf
.visible .entry vec_fmodf(
	.param .u64 vec_fmodf_param_0,
	.param .u64 vec_fmodf_param_1,
	.param .u64 vec_fmodf_param_2,
	.param .u64 vec_fmodf_param_3
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd4, [vec_fmodf_param_0];
	ld.param.u64 	%rd1, [vec_fmodf_param_1];
	ld.param.u64 	%rd2, [vec_fmodf_param_2];
	ld.param.u64 	%rd3, [vec_fmodf_param_3];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r4;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB77_15;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd8];
	abs.f32 	%f47, %f1;
	ld.global.f32 	%f3, [%rd10];
	abs.f32 	%f4, %f3;
	setp.eq.f32	%p2, %f47, 0f7F800000;
	setp.eq.f32	%p3, %f4, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	mov.f32 	%f48, 0f7FFFFFFF;
	@%p4 bra 	BB77_14;

	setp.ltu.f32	%p5, %f47, %f4;
	@%p5 bra 	BB77_13;
	bra.uni 	BB77_3;

BB77_13:
	setp.gtu.f32	%p18, %f4, 0f7F800000;
	add.f32 	%f41, %f1, %f3;
	selp.f32	%f42, %f41, %f1, %p18;
	add.f32 	%f43, %f1, %f42;
	setp.leu.f32	%p19, %f47, 0f00000000;
	selp.f32	%f48, %f43, %f42, %p19;
	bra.uni 	BB77_14;

BB77_3:
	lg2.approx.f32 	%f21, %f47;
	cvt.rzi.s32.f32	%r7, %f21;
	lg2.approx.f32 	%f22, %f4;
	cvt.rzi.s32.f32	%r8, %f22;
	sub.s32 	%r2, %r7, %r8;
	abs.f32 	%f5, %f4;
	setp.eq.f32	%p6, %f5, 0f00000000;
	setp.eq.f32	%p7, %f5, 0f7F800000;
	or.pred  	%p8, %p6, %p7;
	setp.eq.s32	%p9, %r7, %r8;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB77_9;
	bra.uni 	BB77_4;

BB77_9:
	setp.leu.f32	%p13, %f5, 0f00000000;
	add.f32 	%f37, %f4, %f4;
	selp.f32	%f44, %f37, %f4, %p13;
	bra.uni 	BB77_10;

BB77_4:
	abs.s32 	%r3, %r2;
	setp.lt.s32	%p11, %r3, 126;
	@%p11 bra 	BB77_8;
	bra.uni 	BB77_5;

BB77_8:
	cvt.rn.f32.s32	%f35, %r2;
	ex2.approx.ftz.f32 	%f36, %f35;
	mul.f32 	%f44, %f4, %f36;
	bra.uni 	BB77_10;

BB77_5:
	setp.lt.s32	%p12, %r3, 252;
	@%p12 bra 	BB77_7;
	bra.uni 	BB77_6;

BB77_7:
	shr.u32 	%r14, %r2, 31;
	add.s32 	%r15, %r2, %r14;
	shr.s32 	%r16, %r15, 1;
	cvt.rn.f32.s32	%f30, %r16;
	ex2.approx.ftz.f32 	%f31, %f30;
	mul.f32 	%f32, %f4, %f31;
	sub.s32 	%r17, %r2, %r16;
	cvt.rn.f32.s32	%f33, %r17;
	ex2.approx.ftz.f32 	%f34, %f33;
	mul.f32 	%f44, %f32, %f34;
	bra.uni 	BB77_10;

BB77_6:
	shr.s32 	%r9, %r2, 31;
	shr.u32 	%r10, %r9, 30;
	add.s32 	%r11, %r2, %r10;
	shr.s32 	%r12, %r11, 2;
	cvt.rn.f32.s32	%f23, %r12;
	ex2.approx.ftz.f32 	%f24, %f23;
	mul.f32 	%f25, %f4, %f24;
	mul.f32 	%f26, %f24, %f25;
	mul.f32 	%f27, %f24, %f26;
	mad.lo.s32 	%r13, %r12, -3, %r2;
	cvt.rn.f32.s32	%f28, %r13;
	ex2.approx.ftz.f32 	%f29, %f28;
	mul.f32 	%f44, %f29, %f27;

BB77_10:
	mul.f32 	%f38, %f47, 0f3F000000;
	setp.gtu.f32	%p14, %f44, %f38;
	add.f32 	%f39, %f44, %f44;
	selp.f32	%f45, %f44, %f39, %p14;
	setp.ltu.f32	%p15, %f45, %f4;
	@%p15 bra 	BB77_12;

BB77_11:
	sub.f32 	%f40, %f47, %f45;
	setp.ltu.f32	%p16, %f47, %f45;
	selp.f32	%f47, %f47, %f40, %p16;
	mul.f32 	%f45, %f45, 0f3F000000;
	setp.ge.f32	%p17, %f45, %f4;
	@%p17 bra 	BB77_11;

BB77_12:
	mov.b32 	 %r18, %f1;
	and.b32  	%r19, %r18, -2147483648;
	mov.b32 	 %r20, %f47;
	or.b32  	%r21, %r20, %r19;
	mov.b32 	 %f48, %r21;

BB77_14:
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd13, %rd11, %rd7;
	st.global.f32 	[%rd13], %f48;

BB77_15:
	ret;
}

	// .globl	vec_hypotf
.visible .entry vec_hypotf(
	.param .u64 vec_hypotf_param_0,
	.param .u64 vec_hypotf_param_1,
	.param .u64 vec_hypotf_param_2,
	.param .u64 vec_hypotf_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd4, [vec_hypotf_param_0];
	ld.param.u64 	%rd1, [vec_hypotf_param_1];
	ld.param.u64 	%rd2, [vec_hypotf_param_2];
	ld.param.u64 	%rd3, [vec_hypotf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB78_2;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd8];
	abs.f32 	%f2, %f1;
	ld.global.f32 	%f3, [%rd10];
	abs.f32 	%f4, %f3;
	mov.b32 	 %r5, %f4;
	mov.b32 	 %r6, %f2;
	min.s32 	%r7, %r5, %r6;
	mov.b32 	 %f5, %r7;
	max.s32 	%r8, %r6, %r5;
	mov.b32 	 %f6, %r8;
	and.b32  	%r9, %r8, -33554432;
	mov.u32 	%r10, 2122317824;
	sub.s32 	%r11, %r10, %r9;
	mov.b32 	 %f7, %r11;
	mul.f32 	%f8, %f5, %f7;
	mul.f32 	%f9, %f6, %f7;
	mul.f32 	%f10, %f8, %f8;
	fma.rn.f32 	%f11, %f9, %f9, %f10;
	sqrt.rn.f32 	%f12, %f11;
	add.s32 	%r12, %r9, 8388608;
	mov.b32 	 %f13, %r12;
	mul.f32 	%f14, %f12, %f13;
	setp.eq.f32	%p2, %f5, 0f00000000;
	selp.f32	%f15, %f6, %f14, %p2;
	setp.eq.f32	%p3, %f5, 0f7F800000;
	selp.f32	%f16, 0f7F800000, %f15, %p3;
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f16;

BB78_2:
	ret;
}

	// .globl	vec_nextafterf
.visible .entry vec_nextafterf(
	.param .u64 vec_nextafterf_param_0,
	.param .u64 vec_nextafterf_param_1,
	.param .u64 vec_nextafterf_param_2,
	.param .u64 vec_nextafterf_param_3
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd4, [vec_nextafterf_param_0];
	ld.param.u64 	%rd1, [vec_nextafterf_param_1];
	ld.param.u64 	%rd2, [vec_nextafterf_param_2];
	ld.param.u64 	%rd3, [vec_nextafterf_param_3];
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r4;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p1, %rd5, %rd4;
	@%p1 bra 	BB79_9;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd8];
	mov.b32 	 %r2, %f1;
	ld.global.f32 	%f10, [%rd10];
	mov.b32 	 %r3, %f10;
	abs.f32 	%f7, %f1;
	setp.gtu.f32	%p2, %f7, 0f7F800000;
	@%p2 bra 	BB79_7;

	abs.f32 	%f8, %f10;
	setp.gtu.f32	%p3, %f8, 0f7F800000;
	@%p3 bra 	BB79_7;
	bra.uni 	BB79_3;

BB79_7:
	add.f32 	%f10, %f1, %f10;
	bra.uni 	BB79_8;

BB79_3:
	or.b32  	%r7, %r3, %r2;
	mov.b32 	 %f9, %r7;
	setp.eq.f32	%p4, %f9, 0f00000000;
	@%p4 bra 	BB79_8;

	setp.eq.f32	%p5, %f1, 0f00000000;
	@%p5 bra 	BB79_6;
	bra.uni 	BB79_5;

BB79_6:
	and.b32  	%r16, %r3, -2147483648;
	or.b32  	%r17, %r16, 1;
	mov.b32 	 %f10, %r17;
	bra.uni 	BB79_8;

BB79_5:
	setp.lt.f32	%p6, %f1, %f10;
	setp.lt.f32	%p7, %f1, 0f00000000;
	and.pred  	%p8, %p6, %p7;
	selp.s32	%r8, -1, 0, %p8;
	add.s32 	%r9, %r8, %r2;
	setp.gt.f32	%p9, %f1, 0f00000000;
	and.pred  	%p10, %p6, %p9;
	selp.u32	%r10, 1, 0, %p10;
	add.s32 	%r11, %r9, %r10;
	setp.gt.f32	%p11, %f1, %f10;
	and.pred  	%p12, %p11, %p7;
	selp.u32	%r12, 1, 0, %p12;
	add.s32 	%r13, %r11, %r12;
	and.pred  	%p13, %p11, %p9;
	selp.s32	%r14, -1, 0, %p13;
	add.s32 	%r15, %r13, %r14;
	mov.b32 	 %f10, %r15;

BB79_8:
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd13, %rd11, %rd7;
	st.global.f32 	[%rd13], %f10;

BB79_9:
	ret;
}

	// .globl	vec_powf
.visible .entry vec_powf(
	.param .u64 vec_powf_param_0,
	.param .u64 vec_powf_param_1,
	.param .u64 vec_powf_param_2,
	.param .u64 vec_powf_param_3
)
{
	.reg .pred 	%p<30>;
	.reg .f32 	%f<104>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd5, [vec_powf_param_0];
	ld.param.u64 	%rd2, [vec_powf_param_1];
	ld.param.u64 	%rd3, [vec_powf_param_2];
	ld.param.u64 	%rd4, [vec_powf_param_3];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvt.s64.s32	%rd6, %r1;
	setp.ge.u64	%p2, %rd6, %rd5;
	@%p2 bra 	BB80_15;

	cvta.to.global.u64 	%rd7, %rd3;
	cvta.to.global.u64 	%rd1, %rd2;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.f32 	%f1, [%rd11];
	mul.f32 	%f20, %f1, 0f3F000000;
	cvt.rzi.f32.f32	%f21, %f20;
	fma.rn.f32 	%f22, %f21, 0fC0000000, %f1;
	abs.f32 	%f2, %f22;
	ld.global.f32 	%f3, [%rd9];
	abs.f32 	%f4, %f3;
	setp.lt.f32	%p3, %f4, 0f00800000;
	mul.f32 	%f23, %f4, 0f4B800000;
	selp.f32	%f24, 0fC3170000, 0fC2FE0000, %p3;
	selp.f32	%f25, %f23, %f4, %p3;
	mov.b32 	 %r5, %f25;
	and.b32  	%r6, %r5, 8388607;
	or.b32  	%r7, %r6, 1065353216;
	mov.b32 	 %f26, %r7;
	shr.u32 	%r8, %r5, 23;
	cvt.rn.f32.u32	%f27, %r8;
	add.f32 	%f28, %f24, %f27;
	setp.gt.f32	%p4, %f26, 0f3FB504F3;
	mul.f32 	%f29, %f26, 0f3F000000;
	add.f32 	%f30, %f28, 0f3F800000;
	selp.f32	%f31, %f29, %f26, %p4;
	selp.f32	%f32, %f30, %f28, %p4;
	add.f32 	%f33, %f31, 0fBF800000;
	add.f32 	%f19, %f31, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f18,%f19;
	// inline asm
	add.f32 	%f34, %f33, %f33;
	mul.f32 	%f35, %f18, %f34;
	mul.f32 	%f36, %f35, %f35;
	mov.f32 	%f37, 0f3C4CAF63;
	mov.f32 	%f38, 0f3B18F0FE;
	fma.rn.f32 	%f39, %f38, %f36, %f37;
	mov.f32 	%f40, 0f3DAAAABD;
	fma.rn.f32 	%f41, %f39, %f36, %f40;
	mul.rn.f32 	%f42, %f41, %f36;
	mul.rn.f32 	%f43, %f42, %f35;
	sub.f32 	%f44, %f33, %f35;
	neg.f32 	%f45, %f35;
	add.f32 	%f46, %f44, %f44;
	fma.rn.f32 	%f47, %f45, %f33, %f46;
	mul.rn.f32 	%f48, %f18, %f47;
	add.f32 	%f49, %f43, %f35;
	sub.f32 	%f50, %f35, %f49;
	add.f32 	%f51, %f43, %f50;
	add.f32 	%f52, %f48, %f51;
	add.f32 	%f53, %f49, %f52;
	sub.f32 	%f54, %f49, %f53;
	add.f32 	%f55, %f52, %f54;
	mov.f32 	%f56, 0f3F317200;
	mul.rn.f32 	%f57, %f32, %f56;
	mov.f32 	%f58, 0f35BFBE8E;
	mul.rn.f32 	%f59, %f32, %f58;
	add.f32 	%f60, %f57, %f53;
	sub.f32 	%f61, %f57, %f60;
	add.f32 	%f62, %f53, %f61;
	add.f32 	%f63, %f55, %f62;
	add.f32 	%f64, %f59, %f63;
	add.f32 	%f65, %f60, %f64;
	sub.f32 	%f66, %f60, %f65;
	add.f32 	%f67, %f64, %f66;
	abs.f32 	%f5, %f1;
	setp.gt.f32	%p5, %f5, 0f77F684DF;
	mul.f32 	%f68, %f1, 0f39000000;
	selp.f32	%f69, %f68, %f1, %p5;
	mul.rn.f32 	%f70, %f69, %f65;
	neg.f32 	%f71, %f70;
	fma.rn.f32 	%f72, %f69, %f65, %f71;
	fma.rn.f32 	%f73, %f69, %f67, %f72;
	mov.f32 	%f74, 0f00000000;
	fma.rn.f32 	%f75, %f74, %f65, %f73;
	add.rn.f32 	%f76, %f70, %f75;
	neg.f32 	%f77, %f76;
	add.rn.f32 	%f78, %f70, %f77;
	add.rn.f32 	%f79, %f78, %f75;
	mov.b32 	 %r9, %f76;
	setp.eq.s32	%p6, %r9, 1118925336;
	add.s32 	%r10, %r9, -1;
	mov.b32 	 %f80, %r10;
	add.f32 	%f81, %f79, 0f37000000;
	selp.f32	%f82, %f80, %f76, %p6;
	selp.f32	%f6, %f81, %f79, %p6;
	mul.f32 	%f83, %f82, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f84, %f83;
	mov.f32 	%f85, 0fBF317200;
	fma.rn.f32 	%f86, %f84, %f85, %f82;
	mov.f32 	%f87, 0fB5BFBE8E;
	fma.rn.f32 	%f88, %f84, %f87, %f86;
	mul.f32 	%f89, %f88, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f90, %f89;
	add.f32 	%f91, %f84, 0f00000000;
	ex2.approx.f32 	%f92, %f91;
	mul.f32 	%f93, %f90, %f92;
	setp.lt.f32	%p7, %f82, 0fC2D20000;
	selp.f32	%f94, 0f00000000, %f93, %p7;
	setp.gt.f32	%p8, %f82, 0f42D20000;
	selp.f32	%f101, 0f7F800000, %f94, %p8;
	setp.eq.f32	%p9, %f101, 0f7F800000;
	@%p9 bra 	BB80_3;

	fma.rn.f32 	%f101, %f101, %f6, %f101;

BB80_3:
	setp.lt.f32	%p10, %f3, 0f00000000;
	setp.eq.f32	%p11, %f2, 0f3F800000;
	and.pred  	%p1, %p10, %p11;
	mov.b32 	 %r11, %f101;
	xor.b32  	%r12, %r11, -2147483648;
	mov.b32 	 %f95, %r12;
	selp.f32	%f103, %f95, %f101, %p1;
	setp.eq.f32	%p12, %f3, 0f00000000;
	@%p12 bra 	BB80_6;
	bra.uni 	BB80_4;

BB80_6:
	add.f32 	%f97, %f3, %f3;
	mov.b32 	 %r13, %f97;
	selp.b32	%r14, %r13, 0, %p11;
	or.b32  	%r15, %r14, 2139095040;
	setp.lt.f32	%p16, %f1, 0f00000000;
	selp.b32	%r16, %r15, %r14, %p16;
	mov.b32 	 %f103, %r16;
	bra.uni 	BB80_7;

BB80_4:
	setp.geu.f32	%p13, %f3, 0f00000000;
	@%p13 bra 	BB80_7;

	cvt.rzi.f32.f32	%f96, %f1;
	setp.neu.f32	%p14, %f96, %f1;
	selp.f32	%f103, 0f7FFFFFFF, %f103, %p14;

BB80_7:
	add.f32 	%f98, %f4, %f5;
	mov.b32 	 %r17, %f98;
	setp.lt.s32	%p17, %r17, 2139095040;
	@%p17 bra 	BB80_14;

	setp.gtu.f32	%p18, %f4, 0f7F800000;
	setp.gtu.f32	%p19, %f5, 0f7F800000;
	or.pred  	%p20, %p18, %p19;
	@%p20 bra 	BB80_13;
	bra.uni 	BB80_9;

BB80_13:
	add.f32 	%f103, %f3, %f1;
	bra.uni 	BB80_14;

BB80_9:
	setp.eq.f32	%p21, %f5, 0f7F800000;
	@%p21 bra 	BB80_12;
	bra.uni 	BB80_10;

BB80_12:
	setp.gt.f32	%p24, %f4, 0f3F800000;
	selp.b32	%r21, 2139095040, 0, %p24;
	xor.b32  	%r22, %r21, 2139095040;
	setp.lt.f32	%p25, %f1, 0f00000000;
	selp.b32	%r23, %r22, %r21, %p25;
	mov.b32 	 %f99, %r23;
	setp.eq.f32	%p26, %f3, 0fBF800000;
	selp.f32	%f103, 0f3F800000, %f99, %p26;
	bra.uni 	BB80_14;

BB80_10:
	setp.neu.f32	%p22, %f4, 0f7F800000;
	@%p22 bra 	BB80_14;

	setp.ltu.f32	%p23, %f1, 0f00000000;
	selp.b32	%r18, 0, 2139095040, %p23;
	or.b32  	%r19, %r18, -2147483648;
	selp.b32	%r20, %r19, %r18, %p1;
	mov.b32 	 %f103, %r20;

BB80_14:
	setp.eq.f32	%p27, %f1, 0f00000000;
	setp.eq.f32	%p28, %f3, 0f3F800000;
	or.pred  	%p29, %p28, %p27;
	selp.f32	%f100, 0f3F800000, %f103, %p29;
	add.s64 	%rd13, %rd1, %rd8;
	st.global.f32 	[%rd13], %f100;

BB80_15:
	ret;
}

	// .globl	vec_remainderf
.visible .entry vec_remainderf(
	.param .u64 vec_remainderf_param_0,
	.param .u64 vec_remainderf_param_1,
	.param .u64 vec_remainderf_param_2,
	.param .u64 vec_remainderf_param_3
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd4, [vec_remainderf_param_0];
	ld.param.u64 	%rd1, [vec_remainderf_param_1];
	ld.param.u64 	%rd2, [vec_remainderf_param_2];
	ld.param.u64 	%rd3, [vec_remainderf_param_3];
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r6;
	cvt.s64.s32	%rd5, %r1;
	setp.ge.u64	%p3, %rd5, %rd4;
	@%p3 bra 	BB81_19;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd8];
	abs.f32 	%f2, %f1;
	ld.global.f32 	%f3, [%rd10];
	abs.f32 	%f4, %f3;
	setp.le.f32	%p4, %f2, 0f7F800000;
	setp.le.f32	%p5, %f4, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB81_3;
	bra.uni 	BB81_2;

BB81_3:
	setp.eq.f32	%p7, %f2, 0f7F800000;
	setp.eq.f32	%p8, %f4, 0f00000000;
	or.pred  	%p9, %p7, %p8;
	mov.f32 	%f48, 0f7FFFFFFF;
	@%p9 bra 	BB81_18;

	setp.ltu.f32	%p10, %f2, %f4;
	mov.u32 	%r26, 0;
	@%p10 bra 	BB81_15;

	lg2.approx.f32 	%f22, %f2;
	cvt.rzi.s32.f32	%r10, %f22;
	lg2.approx.f32 	%f23, %f4;
	cvt.rzi.s32.f32	%r11, %f23;
	sub.s32 	%r2, %r10, %r11;
	abs.f32 	%f6, %f4;
	setp.eq.f32	%p11, %f6, 0f00000000;
	setp.eq.f32	%p12, %f6, 0f7F800000;
	or.pred  	%p13, %p11, %p12;
	setp.eq.s32	%p14, %r10, %r11;
	or.pred  	%p15, %p13, %p14;
	@%p15 bra 	BB81_11;
	bra.uni 	BB81_6;

BB81_11:
	setp.leu.f32	%p18, %f6, 0f00000000;
	add.f32 	%f38, %f4, %f4;
	selp.f32	%f44, %f38, %f4, %p18;
	bra.uni 	BB81_12;

BB81_2:
	add.f32 	%f48, %f1, %f3;
	bra.uni 	BB81_18;

BB81_6:
	abs.s32 	%r3, %r2;
	setp.lt.s32	%p16, %r3, 126;
	@%p16 bra 	BB81_10;
	bra.uni 	BB81_7;

BB81_10:
	cvt.rn.f32.s32	%f36, %r2;
	ex2.approx.ftz.f32 	%f37, %f36;
	mul.f32 	%f44, %f4, %f37;
	bra.uni 	BB81_12;

BB81_7:
	setp.lt.s32	%p17, %r3, 252;
	@%p17 bra 	BB81_9;
	bra.uni 	BB81_8;

BB81_9:
	shr.u32 	%r17, %r2, 31;
	add.s32 	%r18, %r2, %r17;
	shr.s32 	%r19, %r18, 1;
	cvt.rn.f32.s32	%f31, %r19;
	ex2.approx.ftz.f32 	%f32, %f31;
	mul.f32 	%f33, %f4, %f32;
	sub.s32 	%r20, %r2, %r19;
	cvt.rn.f32.s32	%f34, %r20;
	ex2.approx.ftz.f32 	%f35, %f34;
	mul.f32 	%f44, %f33, %f35;
	bra.uni 	BB81_12;

BB81_8:
	shr.s32 	%r12, %r2, 31;
	shr.u32 	%r13, %r12, 30;
	add.s32 	%r14, %r2, %r13;
	shr.s32 	%r15, %r14, 2;
	cvt.rn.f32.s32	%f24, %r15;
	ex2.approx.ftz.f32 	%f25, %f24;
	mul.f32 	%f26, %f4, %f25;
	mul.f32 	%f27, %f25, %f26;
	mul.f32 	%f28, %f25, %f27;
	mad.lo.s32 	%r16, %r15, -3, %r2;
	cvt.rn.f32.s32	%f29, %r16;
	ex2.approx.ftz.f32 	%f30, %f29;
	mul.f32 	%f44, %f30, %f28;

BB81_12:
	mul.f32 	%f39, %f2, 0f3F000000;
	setp.gtu.f32	%p19, %f44, %f39;
	add.f32 	%f40, %f44, %f44;
	selp.f32	%f46, %f44, %f40, %p19;
	setp.ltu.f32	%p20, %f46, %f4;
	@%p20 bra 	BB81_15;

BB81_13:
	mov.f32 	%f14, %f46;
	mov.f32 	%f13, %f2;
	sub.f32 	%f41, %f13, %f14;
	setp.ltu.f32	%p21, %f13, %f14;
	selp.f32	%f2, %f13, %f41, %p21;
	mul.f32 	%f46, %f14, 0f3F000000;
	setp.ge.f32	%p22, %f46, %f4;
	@%p22 bra 	BB81_13;

	setp.ge.f32	%p23, %f13, %f14;
	selp.u32	%r26, 1, 0, %p23;

BB81_15:
	add.f32 	%f18, %f2, %f2;
	setp.gt.f32	%p25, %f18, %f4;
	mov.pred 	%p28, -1;
	@%p25 bra 	BB81_17;

	setp.eq.f32	%p26, %f18, %f4;
	setp.ne.s32	%p27, %r26, 0;
	and.pred  	%p28, %p26, %p27;

BB81_17:
	sub.f32 	%f42, %f2, %f4;
	selp.f32	%f43, %f42, %f2, %p28;
	mov.b32 	 %r22, %f1;
	and.b32  	%r23, %r22, -2147483648;
	mov.b32 	 %r24, %f43;
	xor.b32  	%r25, %r24, %r23;
	mov.b32 	 %f48, %r25;

BB81_18:
	cvta.to.global.u64 	%rd11, %rd1;
	add.s64 	%rd13, %rd11, %rd7;
	st.global.f32 	[%rd13], %f48;

BB81_19:
	ret;
}


